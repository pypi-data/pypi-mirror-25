
# bdd_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'exprleftCOLONleftEQUIVleftIMPLIESleftMINUSleftXORleftORleftANDleftEQUALSrightNOTrightUMINUSLPAREN RPAREN COMMA NOT AND OR XOR IMPLIES EQUIV EQUALS MINUS DIV AT COLON FORALL EXISTS RENAME NAME NUMBER TRUE FALSE ITEexpr : TRUE\n                | FALSE\n        expr : AT numbernumber : NUMBERnumber : MINUS NUMBER %prec UMINUSexpr : nameexpr : NOT exprexpr : expr AND expr\n                | expr OR expr\n                | expr XOR expr\n                | expr IMPLIES expr\n                | expr EQUIV expr\n                | expr EQUALS expr\n                | expr MINUS expr\n        expr : ITE LPAREN expr COMMA expr COMMA expr RPARENexpr : EXISTS names COLON expr\n                | FORALL names COLON expr\n        expr : RENAME subs COLON exprsubs : subs COMMA subsubs : subsub : name DIV namenames : names COMMA namenames : namename : NAMEexpr : LPAREN expr RPAREN'
    
_lr_action_items = {'EQUIV':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,25,25,-3,-4,-7,-25,25,-5,-8,-12,-14,-13,-9,-11,-10,25,25,25,25,25,-15,]),'COLON':([5,13,14,15,22,23,48,52,53,],[-24,-23,33,34,40,-20,-22,-21,-19,]),'LPAREN':([0,4,7,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[4,4,17,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'FORALL':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'AND':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,24,24,-3,-4,-7,-25,24,-5,-8,24,24,-13,24,24,24,24,24,24,24,24,-15,]),'COMMA':([2,5,6,10,13,14,15,18,19,22,23,31,35,36,37,41,42,43,44,45,46,47,48,49,50,52,53,54,55,58,],[-2,-24,-6,-1,-23,32,32,-3,-4,39,-20,-7,-25,51,-5,-8,-12,-14,-13,-9,-11,-10,-22,-17,-16,-21,-19,-18,56,-15,]),'FALSE':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'OR':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,28,28,-3,-4,-7,-25,28,-5,-8,28,28,-13,-9,28,28,28,28,28,28,28,-15,]),'RPAREN':([2,5,6,10,16,18,19,31,35,37,41,42,43,44,45,46,47,49,50,54,57,58,],[-2,-24,-6,-1,35,-3,-4,-7,-25,-5,-8,-12,-14,-13,-9,-11,-10,-17,-16,-18,58,-15,]),'EXISTS':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'XOR':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,30,30,-3,-4,-7,-25,30,-5,-8,30,30,-13,-9,30,-10,30,30,30,30,30,-15,]),'$end':([2,5,6,10,11,18,19,31,35,37,41,42,43,44,45,46,47,49,50,54,58,],[-2,-24,-6,-1,0,-3,-4,-7,-25,-5,-8,-12,-14,-13,-9,-11,-10,-17,-16,-18,-15,]),'NAME':([0,1,3,4,9,12,17,24,25,26,27,28,29,30,32,33,34,38,39,40,51,56,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NUMBER':([8,20,],[19,37,]),'EQUALS':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,27,27,-3,-4,-7,-25,27,-5,27,27,27,-13,27,27,27,27,27,27,27,27,-15,]),'ITE':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'MINUS':([2,5,6,8,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,20,-1,26,26,-3,-4,-7,-25,26,-5,-8,26,-14,-13,-9,26,-10,26,26,26,26,26,-15,]),'AT':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'IMPLIES':([2,5,6,10,11,16,18,19,31,35,36,37,41,42,43,44,45,46,47,49,50,54,55,57,58,],[-2,-24,-6,-1,29,29,-3,-4,-7,-25,29,-5,-8,29,-14,-13,-9,-11,-10,29,29,29,29,29,-15,]),'RENAME':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'TRUE':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'DIV':([5,21,],[-24,38,]),'NOT':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'number':([8,],[18,]),'name':([0,1,3,4,9,12,17,24,25,26,27,28,29,30,32,33,34,38,39,40,51,56,],[6,13,13,6,21,6,6,6,6,6,6,6,6,6,48,6,6,52,21,6,6,6,]),'names':([1,3,],[14,15,]),'expr':([0,4,12,17,24,25,26,27,28,29,30,33,34,40,51,56,],[11,16,31,36,41,42,43,44,45,46,47,49,50,54,55,57,]),'sub':([9,39,],[23,53,]),'subs':([9,],[22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expr","S'",1,None,None,None),
  ('expr -> TRUE','expr',1,'p_bool','_parser.py',101),
  ('expr -> FALSE','expr',1,'p_bool','_parser.py',102),
  ('expr -> AT number','expr',2,'p_node','_parser.py',107),
  ('number -> NUMBER','number',1,'p_number','_parser.py',111),
  ('number -> MINUS NUMBER','number',2,'p_negative_number','_parser.py',115),
  ('expr -> name','expr',1,'p_var','_parser.py',120),
  ('expr -> NOT expr','expr',2,'p_unary','_parser.py',124),
  ('expr -> expr AND expr','expr',3,'p_binary','_parser.py',128),
  ('expr -> expr OR expr','expr',3,'p_binary','_parser.py',129),
  ('expr -> expr XOR expr','expr',3,'p_binary','_parser.py',130),
  ('expr -> expr IMPLIES expr','expr',3,'p_binary','_parser.py',131),
  ('expr -> expr EQUIV expr','expr',3,'p_binary','_parser.py',132),
  ('expr -> expr EQUALS expr','expr',3,'p_binary','_parser.py',133),
  ('expr -> expr MINUS expr','expr',3,'p_binary','_parser.py',134),
  ('expr -> ITE LPAREN expr COMMA expr COMMA expr RPAREN','expr',8,'p_ternary_conditional','_parser.py',139),
  ('expr -> EXISTS names COLON expr','expr',4,'p_quantifier','_parser.py',143),
  ('expr -> FORALL names COLON expr','expr',4,'p_quantifier','_parser.py',144),
  ('expr -> RENAME subs COLON expr','expr',4,'p_rename','_parser.py',149),
  ('subs -> subs COMMA sub','subs',3,'p_substitutions_iter','_parser.py',153),
  ('subs -> sub','subs',1,'p_substitutions_end','_parser.py',159),
  ('sub -> name DIV name','sub',3,'p_substitution','_parser.py',163),
  ('names -> names COMMA name','names',3,'p_names_iter','_parser.py',169),
  ('names -> name','names',1,'p_names_end','_parser.py',175),
  ('name -> NAME','name',1,'p_name','_parser.py',179),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_paren','_parser.py',183),
]
