# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
minversion = 2.0
envlist = pep8, pep257, py{27,34,35,36,py,py3}, pylint, docs, bandit, py{34,35,36}-nocov,
skipsdist = True
skip_missing_interpreters = True

[testenv]
recreate = True
usedevelop = True
passenv = http_proxy HTTP_PROXY https_proxy HTTPS_PROXY no_proxy NO_PROXY
setev = PYTHONDONTWRITEBYTECODE=1
deps =
    sphinx
    pytest
    pytest-cov
    pytest-sugar
    py{34,35,36}-nocov: Cython
    -r{toxinidir}/CI_REQUIREMENTS.txt
    py{27,py}: mock

commands =
    py.test -vv --junitxml=unit_result.xml --cov-config .coveragerc --cov-report html --cov=logwrap {posargs:test}
    coverage report --fail-under 89

[testenv:py34-nocov]
commands =
    py.test -vv --junitxml=unit_result_nocov.xml --cov-config .coveragerc --cov=logwrap {posargs:test}

[testenv:py35-nocov]
commands =
    py.test -vv --junitxml=unit_result_nocov.xml --cov-config .coveragerc --cov=logwrap {posargs:test}

[testenv:py36-nocov]
commands =
    py.test -vv --junitxml=unit_result_nocov.xml --cov-config .coveragerc --cov=logwrap {posargs:test}

[testenv:venv]
commands = {posargs:}

[tox:travis]
2.7 = install, py27
3.4 = install, py34,
3.5 = install, py35, bandit, pylint,
3.6 = install, py36, pep8, pep257,
pypy = install, pypy
pypy3 = install, pypy3

[testenv:pep8]
deps =
    flake8
usedevelop = False
commands = flake8

[testenv:pep257]
deps =
    pep257
usedevelop = False
commands = pep257 logwrap

[testenv:install]
deps =
usedevelop = False
commands = pip install ./ -vvv -U

[testenv:pylint]
basepython = python3.5
deps =
    pylint
    -r{toxinidir}/CI_REQUIREMENTS.txt
commands = pylint logwrap

[flake8]
basepython = python3.6
exclude =
    .venv,
    .git,
    .tox,
    dist,
    doc,
    *lib/python*,
    *egg,
    build,
    __init__.py,
    docs
ignore =
show-pep8 = True
show-source = True
count = True

[testenv:docs]
deps =
    sphinx
commands = python setup.py build_sphinx

[testenv:upload_docs]
deps =
    sphinx
    sphinx-pypi-upload
    -r{toxinidir}/CI_REQUIREMENTS.txt
commands = python setup.py build_sphinx upload_sphinx

[testenv:bandit]
deps = bandit
commands = bandit -r logwrap
