CHANGES
=======

1.6.7
-----

* Bump version to 1.6.7
* Add links to our build server
* Add packaging files for our FAUCET VM
* Add some files necessary for packaging faucet
* Default to prometheus for port\_stats poller in example gauge config
* Fix example faucet.yaml
* Remove math module import
* Use tempfile.mkstemp() to make a new temp file instead of tempfile.TemporaryFile(), so the file can be opened and closed
* Refactoring the GaugeWatcherTest class  & pylint
* Remove GaugeUpdateTest class since there are no tests in it, and make all methods within it into functions
* Move the get\_stats method into parent class
* Refactor creating ofp messages into another class
* added unit tests for watcher.py
* ffi-dev only
* Add FFI
* LACP test doesn't need to be serial
* Make port up message clearer
* Test FIB route expiry
* dead FIB routes not actually deleted
* Update gNMI README
* Update gNMI updater
* Update gNMI Get
* Add gNMI Set
* Add gNMI Capabilities
* Update run\_target script
* Update hostname in certificate generation
* Update gNMI Dockerfile
* Update FCTL test to use MAC address format
* Suppress pytype warning for using python3 only feature
* Add colons between octets in mac addresses
* Update faucet prometheus exporter port
* Fix UnboundLocalError when fctl has a connection error
* Provide a console script for running FCTL
* Pre vesion bump
* pylint

1.6.6
-----

* Add doc for profiling
* Version bump
* Disable profiling by default (expensive)
* Mark DP finalized also
* pylint
* Use Ryu app close method
* Cache \_\_hash\_\_ of Conf objects once they have been finalized
* Reduce interval for gauge thread poller tests
* refactor port stats poller & flow table poller tests
* Make hash cheaper again
* Added unit test for flow table poller
* Add unit test for port stats poller class
* Need sys import
* Add cProfiling of all Ryu runs
* Learn ban count is dynamic
* conf\_keys() slightly cheaper
* Make log level configurable for faucet and gauge
* Add docstrings
* Unit test arg
* Revert "Revert "Upgrade Ryu to 4.17.""
* Ethernet packet headers reparsed more than necessary
* Revert "Upgrade Ryu to 4.17."
* Handle LACP packet parse failure
* Revert "Must never set idle timeout on eth\_dst flows by default."
* Don't need to try another route manager once we've tried the appropriate one based on eth\_type
* Missed port type change to \_port\_add\_acl()
* Need to ensure port has LACP enabled before replying

1.6.5
-----

* Make travis do pypi deploys on new tags
* Version pre-bump
* LACP is sent from wrong eth\_src and with a VLAN tag
* Added unit tests for gauge poller
* Version bump for release
* ACLs referenced by instance now
* Resolve ACLs by name at config parsing time
* Ignore subconf sense wrong
* Not yet ready for DP-level only config change detection
* pylint
* Detect DP level config changes
* Conf objects can exclude sub Conf items for comparison
* LACP test shouldn't care what peer key is
* pylint
* Don't sort VLANs update metrics
* Don't sort port order
* Remove min port age
* Sort learned MACs output
* Test port\_status\_handler()
* Missing enumerate
* VLAN method to count learned hosts
* New common code to return hosts learned on a port
* eth\_src\_table unneeded
* Simplify port instance use
* Fix reference to ACL VLAN table
* Use common code to build a list of ACLs
* Re-enable testing under python 3.6
* 2.8.1 still not stable
* Try 2.8.1 now we check port state for liveness
* Downgrade to 2.7.3 because 2.8.1 shows port state 4
* Upgrade to 2.8.1
* Add comment for mirror flows
* Don't delete flows referencing a down mirror port
* Must never set idle timeout on eth\_dst flows by default
* Mirrored ports did not handle state transition
* Disable http\_proxy when actually running tests
* Allow configuration of an http proxy:
* Sanity test is more helpful describing switch state
* Upgrade Ryu to 4.17
* Test state change of mirror port
* Crash handling unresolved VLAN on mirror port changing state
* Added some method docstrings
* Added unit test to check influx flow logger
* Revert to 2.7.3 for stability
* Allow configuration of VLAN tag type. Don't try to find OVS logs if env variable not present
* Try 2.8.1 now we have OVS logs to look at
* shutil
* Archive OVS logs
* Switch to OVS 2.7.3
* Upgrade OVS to 2.8.1
* pylint
* Add unit test for influx port stats
* Move the file read to outside of the parse\_influx\_output method
* Add a unit test for the influx port state update method
* Make PretendInflux handler if the server has specified an output file
* fix ports being an empty dict, and give the datapath a name
* change import to include the whole ryu ofproto parser
* Extreme patience for slow learning DPs
* Increase host learning patience
* expect script to send recommended config
* Add README for ZodiacFX
* Add unit test for LACP
* Mininal passive/LACP support
* Add experimental lacp port option
* move mocking datapath out of the class
* move server outside of class
* Add helper to capture LACP to controller
* Docker builds quieter still
* Docker builds should be quieter
* FAUCET has been verified to work an AT-X230-10GP
* pylint
* Add unit tests for gauge\_influx shipper
* Checks that all prom stats have been exported
* Only sent packets with the right eth type for a route manager
* Fix test\_valve for new parse\_pkt
* Parse packet can get eth\_type
* Revert "Strict check on eth type passed to route manager."
* Strict check on eth type passed to route manager
* Add control eth types to route managers
* Refactor to IP header size function
* Simplify parse\_pkt
* Move PacketMeta and friends to valve\_packet
* Revert "Packet parser can get ether type from VLAN header."
* Revert "Only pass a packet to route manager if an Ethernet type the manager is interested in."
* Revert "Move PacketMeta to valve\_packet."
* Downgrade to python3.5
* Move PacketMeta to valve\_packet
* Only pass a packet to route manager if an Ethernet type the manager is interested in
* Packet parser can get ether type from VLAN header
* Move MAC address constants to valve\_packet
* Use bridge/LLDP constant
* Add initial LACP helper
* Retry pings to reduce nuisance flakes under load
* Update gNxI repository
* Sending a LACP packet could crash Ryu
* Syntax
* Second attempt at incremental ptys workaround
* Make verifying cabling message clearer
* close discriptors before kill
* Revert "Transclude ptys leak workaround to switches."
* Diag print
* Revert "Workaround for pts leak continues."
* Revert "Use own stop\_net method."
* Use own stop\_net method
* Workaround for pts leak continues
* Don't diagnostic print
* Incremental workaround - clean up ptys from switches
* Downgrade tests to 2.7.2
* Transclude ptys leak workaround to switches
* Partially address pty leak by closing pty in hosts (controllers and switches need to be fixed)
* Mapping message for OVS-only
* Make mapping log message clearer
* Make Influx tests quiet
* Queue more free ports as required on every test server request
* Wrong file name passed when starting exabgp
* pylint
* Correct exabgp config file
* We can leak file descriptors because test classes are kept around (so files might not be garbage collected for a long time)
* Don't use --bar with parallel (clogs up test logs)
* Add matchfields required for regression tests in noviflow docs
* Make hardware testing quieter
* Increase initial free port count
* Increase min free port pool
* py2 doesn't have subprocess.DEVNULL
* Set stdin to null where possible
* Don't need STDIN to tests
* Apparently we are running out of file descriptors
* Increase unit test coverage
* Increase test coverage
* Revert "Increase test coverage."
* Revert "Don't assume disconnect count 0 to begin with."
* Revert "FaucetMetrics() has no args."
* Per OVS config advice set long max-idle time
* FaucetMetrics() has no args
* Use same test command as docker
* Make OVS build quiet
* Delete OVS build dir when done
* Start OVS using OVS scripts
* Install OVS 2.8.0
* Add server side timeout to test Influx server
* Output all metrics when --labels is not specified
* Add travis build status badge
* Update docs to reflect the move to our new github organisation
* Tweak test output further
* Tweak default test output
* line wrapping for performance and verify log messages
* Dupe urllib line
* Break/fix
* pylint
* Switch Pi to alpine Linux
* Switch to alpine Linux for non-test containers - makes FAUCET tiny
* Reduce size of all containers further
* Don't add docs to docker images
* Show size of docker images before/after
* Reduce mininet dependencies further
* Prevent mininet X11 dependencies from being installed
* whitespace
* Diagnostics for test/port server
* Allocate fewer test ports (use a separate test server call to obtain a test serial number)
* Missing iperf\_port arg
* Exit test if unit test fails
* Don't add pyc to docker images
* We don't actually need a listening port for OVS. Could pass None to test port server, meaning we could incorrectly release test ports that might be in use
* Print return of all ports allocated to a test
* Allocate fewer ports for iperf tests and print which port allocated to what to diagnose port conflicts
* Pylint
* pytype grumpy
* Experimental fctl utility for FAUCET/Gauge command line use
* include gauge unit test in travis and docker
* use single quotation marks instead of double
* pylint
* Rearrange imports and remove unnecessary ones
* moved some functionality into separate methods
* use the faucet.gauge\_prom PROM\_PORT\_PREFIX, PROM\_PREFIX\_DELIM variables instead of the string literal equivalents
* Added a unit test to check the update method in GaugePortStatsPrometheusPoller
* Revert "Use official buildpack-dep image (more appropriate for dev)."
* Use official buildpack-dep image (more appropriate for dev)
* Don't delete setuptools. :/
* Cache Ubuntu latest
* Use latest Ubuntu base image (rather than Ryu's one - no point)
* Drop numpy (adds too much of a dependency)
* Reduce size of FAUCET/Gauge containers slightly
* Reduce Pi image size
* Run unit tests when building Docker images to make sure build successful
* Can't slim down test image yet
* Display size of docker images after cache retrieval
* Reduce size of Gauge container
* Reduce test container size further
* Reduce size of FAUCET docker image further
* Ubuntu specific version checks need to be generic
* Netcat has a different name with new images
* docker save command line needs different python images
* Reduce size of test docker container
* Slim down Docker builds
* Switch to standard python image rather than ryu (smaller)
* pin networkx to 1.11
* TooSlow test used wrong PostHandler
* Reduce retries to 1
* Add missing influx\_retries
* New InfluxDB client allows configuration of retries
* No longer need to use deprecated Travis image
* Simplify docker save command line
* Experiment if new Travis image is working
* Should use less hardcoded timeouts
* Unused dpid\_log
* Reduce CPU over subscription
* Too slow test should reuse more of the base class
* Revert "use less cache space (xz vs. gzip)."
* use less cache space (xz vs. gzip)
* Influx break/fix
* SIGTERM diagnostic OF tcpdump for tshark
* Enable Influx tests to try another port if start of test server fails
* Make influx test logs available to helpers
* Check Gauge is listening on allocated Prometheus port
* Only allocate Influx and Gauge Prometheus ports if the test uses them
* Only flood to up ports
* Another pip2 upgrade
* pip3 has to be upgraded before upgrading pip/2
* Break/fix
* Revert "Pip upgrades should be in same layer as module installation."
* Version bump

1.6.4
-----

* Version bump
* FAUCET should be more helpful when a DP has misconfigured hardware type
* Updated class diagram to reflect the latest changes
* Speed up fping for multiple host learning
* Should use TextTestResult
* Use unittest module consistently
* More break/fix
* Update docker docs for gauge/prometheus
* break/fix
* Better test summary
* Revert "Group table now can hash on buckets to determine group\_id."
* Revert "pytype."
* pytype
* Group table now can hash on buckets to determine group\_id
* Don't expedite initial free ports
* break/fix
* Extraneous -v
* Shouldn't need bigger tmp dir now that we can clean up successful tests incrementally
* Incrementally clean up test directories for successful tests to save disk space
* Executable
* Correct path
* Add commit hook
* pylint
* pylint
* Add version info to faucet.\_\_all\_\_
* Try to use tmp in travis build dir
* add prometheus db configuration
* Bump setup.cfg for next release
* Bump docker-compose versions

1.6.2
-----

* FaucetHostsTimeoutPrometheusTest should retry as necessary
* setup.cfg should be synchronized before release
* Bump versions for release
* Update HP docs with pipeline, remove code hack re TTL
