Metadata-Version: 1.1
Name: django-bootstrap-datepicker-widget
Version: 0.1
Summary: Bootstrap 3 and 4 compatible Datepicker widget for Django.
Home-page: https://github.com/jackweath/django-bootstrap-datepicker
Author: Nakahara Kunihiko/Samuel Colvin/Jack Weatherilt
Author-email: nakahara.kunihiko@gmail.com/s@muelcolvin.com/jackweatherilt@outlook.com
License: Apache License 2.0
Description: django-bootstrap-datepicker
        ===========================
        
        This package is **compatible with both Bootstrap 3 and 4**, by giving
        the option to use a FontAwesome icon rather than a Glyphicon.
        
        This package is intended to be used with
        `bootstrap-datepicker <https://github.com/uxsolutions/bootstrap-datepicker>`__
        and has been tested with v1.7.1.
        
        This project was originally a fork of
        `nkunihiko/django-bootstrap3-datetimepicker <https://github.com/nkunihiko/django-bootstrap3-datetimepicker>`__
        and hence similar to
        `qoobic/django-bootstrap3-datepicker <https://github.com/qoobic/django-bootstrap3-datepicker>`__,
        but it now has the following breaking changes:
        
        -  js/css files are no longer included in the project, managing them is
           up to the user, eg. using
           `grablib <https://github.com/samuelcolvin/grablib>`__.
        -  the widget no longer has js/css assets. these are left for you to
           deploy as you wish.
        -  bug/warning fixes
        -  remove support for python 2.6 and associated clean up
        
        Install
        -------
        
        1. Run ``pip install django-bootstrap-datepicker-widget``
        2. Add ``bootstrap_datepicker`` to your ``INSTALLED_APPS``
        
        Example
        -------
        
        forms.py
        ^^^^^^^^
        
        .. code:: python
        
            from bootstrap_datepicker.widgets import DatePicker
            from django import forms
        
              class ToDoForm(forms.Form):
                  todo = forms.CharField(
                      widget=forms.TextInput(attrs={"class": "form-control"}))
                  date = forms.DateField(
                      widget=DatePicker(options={"format": "YYYY-MM-DD"}, fontawesome=True))
        
        The ``options`` will be passed to the JavaScript datetimepicker
        instance. Available ``options`` are explained in the
        `bootstrap-datepicker
        docs <https://bootstrap-datepicker.readthedocs.io/en/stable/options.html>`__
        
        You don't need to set the ``language`` option, because it will be set
        the current language of the thread automatically.
        
        template.html
        ^^^^^^^^^^^^^
        
        .. code:: html
        
            <!DOCTYPE html>
            <html>
              <head>
                <!-- load all required js/css yourself here -->
              </head>
              <body>
                <form method="post" role="form">
                  {{ form|bootstrap }}
                  {% csrf_token %}
                  <div class="form-group">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                  </div>
                </form>
              </body>
            </html>
        
        Here we assume you're using
        `django-bootstrap-form <https://github.com/tzangms/django-bootstrap-form>`__
        or
        `django-jinja-bootstrap-form <https://github.com/samuelcolvin/django-jinja-bootstrap-form>`__
        but you can draw out your HTML manually.
        
        Requirements
        ------------
        
        -  Python >= 2.7
        -  Django >= 1.8
        -  Bootstrap >= 3
        -  FontAwesome >= 1.0 if using Bootstrap 4+
        -  Moment >= 2.10.6
        -  bootstrap-datepicker >= 1.7.1
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Utilities
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
