Metadata-Version: 1.1
Name: osmapi
Version: 1.0.2
Summary: Python wrapper for the OSM API
Home-page: https://github.com/metaodi/osmapi
Author: Stefan Oderbolz
Author-email: odi@metaodi.ch
License: GPLv3
Download-URL: https://github.com/metaodi/osmapi/archive/v1.0.2.zip
Description: osmapi
        ======
        
        |Build| |Coverage| |Version| |Downloads| |License|
        
        Python wrapper for the OSM API
        
        Installation
        ------------
        
        Install ```osmapi`` from PyPi <https://pypi.python.org/pypi/osmapi>`__
        by using pip:
        
        ::
        
            pip install osmapi
        
        Documentation
        -------------
        
        The documentation is generated using ``pdoc`` and can be `viewed
        online <http://osmapi.metaodi.ch>`__.
        
        The build the documentation locally, you can use
        
        ::
        
            pdoc --html osmapi.OsmApi # create HTML file
        
        This project uses GitHub Pages to publish its documentation. To update
        the online documentation, you need to re-generate the documentation with
        the above command and update the ``gh-pages`` branch of this repository.
        
        Examples
        --------
        
        Read from OpenStreetMap
        ~~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            import osmapi
            api = osmapi.OsmApi()
            print api.NodeGet(123)
            # {u'changeset': 532907, u'uid': 14298,
            # u'timestamp': u'2007-09-29T09:19:17Z',
            # u'lon': 10.790009299999999, u'visible': True,
            # u'version': 1, u'user': u'Mede',
            # u'lat': 59.9503044, u'tag': {}, u'id': 123}
        
        Constructor
        ~~~~~~~~~~~
        
        .. code:: python
        
            import osmapi
            api = osmapi.OsmApi(api="api06.dev.openstreetmap.org", username = "you", password = "***")
            api = osmapi.OsmApi(username = "you", passwordfile = "/etc/mypasswords")
            api = osmapi.OsmApi(passwordfile = "/etc/mypasswords") # username will be first line username
        
        Note: The password file should have the format *user:password*
        
        Write to OpenStreetMap
        ~~~~~~~~~~~~~~~~~~~~~~
        
        .. code:: python
        
            import osmapi
            api = osmapi.OsmApi(api="api06.dev.openstreetmap.org", username = u"metaodi", password = u"*******")
            api.ChangesetCreate({u"comment": u"My first test"})
            print api.NodeCreate({u"lon":1, u"lat":1, u"tag": {}})
            # {u'changeset': 532907, u'lon': 1, u'version': 1, u'lat': 1, u'tag': {}, u'id': 164684}
            api.ChangesetClose()
        
        Note
        ----
        
        Scripted imports and automated edits should only be carried out by those
        with experience and understanding of the way the OpenStreetMap community
        creates maps, and only with careful **planning** and **consultation**
        with the local community.
        
        See the
        `Import/Guidelines <http://wiki.openstreetmap.org/wiki/Import/Guidelines>`__
        and `Automated Edits/Code of
        Conduct <http://wiki.openstreetmap.org/wiki/Automated_Edits/Code_of_Conduct>`__
        for more information.
        
        Development
        ~~~~~~~~~~~
        
        If you want to help with the development of ``osmapi``, you should clone
        this repository and install the requirements:
        
        ::
        
            pip install -r requirements.txt
            pip install -r test-requirements.txt
        
        After that, it is recommended to install the ``flake8`` pre-commit-hook:
        
        ::
        
            flake8 --install-hook
        
        Tests
        ~~~~~
        
        To run the tests use the following command:
        
        ::
        
            nosetests --verbose
        
        By using tox you can even run the tests against different versions of
        python (2.7, 3.3, 3.4, 3.5 and 3.6):
        
        ::
        
            tox
        
        Release
        -------
        
        To create a new release, follow these steps (please respect `Semantic
        Versioning <http://semver.org/>`__):
        
        1. Adapt the version number in ``osmapi/__init__.py``
        2. Update the CHANGELOG with the version
        3. Create a pull request to merge develop into master (make sure the
           tests pass!)
        4. Create a `new release/tag on
           GitHub <https://github.com/metaodi/osmapi/releases>`__ (on the master
           branch)
        5. The `publication on PyPI <https://pypi.python.org/pypi/osmapi>`__
           happens via `Travis CI <https://travis-ci.org/metaodi/osmapi>`__ on
           every tagged commit
        
        Attribution
        -----------
        
        This project was orginally developed by Etienne Chove. This repository
        is a copy of the original code from SVN
        (http://svn.openstreetmap.org/applications/utils/python\_lib/OsmApi/OsmApi.py),
        with the goal to enable easy contribution via GitHub and release of this
        package via `PyPI <https://pypi.python.org/pypi/osmapi>`__.
        
        See also the OSM wiki: http://wiki.openstreetmap.org/wiki/Osmapi
        
        .. |Build| image:: https://img.shields.io/travis/metaodi/osmapi/develop.svg
           :target: https://travis-ci.org/metaodi/osmapi
        .. |Coverage| image:: https://img.shields.io/coveralls/metaodi/osmapi/develop.svg
           :target: https://coveralls.io/r/metaodi/osmapi?branch=develop
        .. |Version| image:: https://img.shields.io/pypi/v/osmapi.svg
           :target: https://pypi.python.org/pypi/osmapi/
        .. |Downloads| image:: https://img.shields.io/pypi/dm/osmapi.svg
           :target: https://pypi.python.org/pypi/osmapi/
        .. |License| image:: https://img.shields.io/pypi/l/osmapi.svg
           :target: https://github.com/metaodi/osmapi/blob/master/LICENSE.txt
        
Keywords: openstreetmap,osm,api
Platform: UNKNOWN
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Intended Audience :: Developers
Classifier: Topic :: Scientific/Engineering :: GIS
Classifier: Topic :: Software Development :: Libraries
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
