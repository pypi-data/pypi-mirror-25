# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fundmental.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import gm.pb.data_pb2 as data__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from github.com.gogo.protobuf.gogoproto import gogo_pb2 as github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='fundmental.proto',
  package='fundmental.api',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x66undmental.proto\x12\x0e\x66undmental.api\x1a\ndata.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a-github.com/gogo/protobuf/gogoproto/gogo.proto\"\x86\x01\n\x11GetFundmentalsReq\x12\r\n\x05table\x18\x01 \x01(\t\x12\x0e\n\x06\x66ields\x18\x02 \x01(\t\x12\x0e\n\x06\x66ilter\x18\x03 \x01(\t\x12\x0f\n\x07symbols\x18\x04 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x05 \x01(\t\x12\x10\n\x08order_by\x18\x06 \x01(\t\x12\r\n\x05\x63ount\x18\x07 \x01(\x05\"\xcf\x02\n\x11GetFundmentalsRsp\x12:\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32,.fundmental.api.GetFundmentalsRsp.Fundmental\x1a\xfd\x01\n\nFundmental\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12H\n\x06\x66ields\x18\x02 \x03(\x0b\x32\x38.fundmental.api.GetFundmentalsRsp.Fundmental.FieldsEntry\x12\x32\n\x08pub_date\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01\x12\x32\n\x08\x65nd_date\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01\x1a-\n\x0b\x46ieldsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02:\x02\x38\x01\"m\n\x15GetInstrumentInfosReq\x12\x0f\n\x07symbols\x18\x01 \x01(\t\x12\x11\n\texchanges\x18\x02 \x01(\t\x12\x11\n\tsec_types\x18\x03 \x01(\t\x12\r\n\x05names\x18\x04 \x01(\t\x12\x0e\n\x06\x66ields\x18\x05 \x01(\t\"\xb8\x01\n\x11GetInstrumentsReq\x12\x0f\n\x07symbols\x18\x01 \x01(\t\x12\x11\n\texchanges\x18\x02 \x01(\t\x12\x11\n\tsec_types\x18\x03 \x01(\t\x12\r\n\x05names\x18\x04 \x01(\t\x12\x16\n\x0eskip_suspended\x18\x05 \x01(\x08\x12\x0f\n\x07skip_st\x18\x06 \x01(\x08\x12\x0e\n\x06\x66ields\x18\x07 \x01(\t\x12\x12\n\nstart_date\x18\x08 \x01(\t\x12\x10\n\x08\x65nd_date\x18\t \x01(\t\"a\n\x18GetHistoryInstrumentsReq\x12\x0f\n\x07symbols\x18\x01 \x01(\t\x12\x0e\n\x06\x66ields\x18\x02 \x01(\t\x12\x12\n\nstart_date\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x04 \x01(\t\"Y\n\x12GetConstituentsReq\x12\r\n\x05index\x18\x01 \x01(\t\x12\x0e\n\x06\x66ields\x18\x02 \x01(\t\x12\x12\n\nstart_date\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x04 \x01(\t\"\x1c\n\x0cGetSectorReq\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\"\x1f\n\x0cGetSectorRsp\x12\x0f\n\x07symbols\x18\x01 \x03(\t\"\x1e\n\x0eGetIndustryReq\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\"!\n\x0eGetIndustryRsp\x12\x0f\n\x07symbols\x18\x01 \x03(\t\"\x1d\n\rGetConceptReq\x12\x0c\n\x04\x63ode\x18\x01 \x01(\t\" \n\rGetConceptRsp\x12\x0f\n\x07symbols\x18\x01 \x03(\t\"L\n\x12GetTradingDatesReq\x12\x10\n\x08\x65xchange\x18\x01 \x01(\t\x12\x12\n\nstart_date\x18\x02 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x03 \x01(\t\"E\n\x12GetTradingDatesRsp\x12/\n\x05\x64\x61tes\x18\x01 \x03(\x0b\x32\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01\";\n\x19GetPreviousTradingDateReq\x12\x10\n\x08\x65xchange\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61te\x18\x02 \x01(\t\"K\n\x19GetPreviousTradingDateRsp\x12.\n\x04\x64\x61te\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01\"7\n\x15GetNextTradingDateReq\x12\x10\n\x08\x65xchange\x18\x01 \x01(\t\x12\x0c\n\x04\x64\x61te\x18\x02 \x01(\t\"G\n\x15GetNextTradingDateRsp\x12.\n\x04\x64\x61te\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x04\x90\xdf\x1f\x01\"G\n\x0fGetDividendsReq\x12\x0e\n\x06symbol\x18\x01 \x01(\t\x12\x12\n\nstart_date\x18\x02 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x03 \x01(\t\"R\n\x19GetContinuousContractsReq\x12\x0f\n\x07\x63symbol\x18\x01 \x01(\t\x12\x12\n\nstart_date\x18\x02 \x01(\t\x12\x10\n\x08\x65nd_date\x18\x03 \x01(\t2\xb1\r\n\x11\x46undmentalService\x12\x7f\n\x0eGetFundmentals\x12!.fundmental.api.GetFundmentalsReq\x1a!.fundmental.api.GetFundmentalsRsp\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v3/data-fundmental/fundmentals\x12\x84\x01\n\x12GetInstrumentInfos\x12%.fundmental.api.GetInstrumentInfosReq\x1a\x19.data.api.InstrumentInfos\",\x82\xd3\xe4\x93\x02&\x12$/v3/data-fundmental/instrument-infos\x12s\n\x0eGetInstruments\x12!.fundmental.api.GetInstrumentsReq\x1a\x15.data.api.Instruments\"\'\x82\xd3\xe4\x93\x02!\x12\x1f/v3/data-fundmental/instruments\x12\x89\x01\n\x15GetHistoryInstruments\x12(.fundmental.api.GetHistoryInstrumentsReq\x1a\x15.data.api.Instruments\"/\x82\xd3\xe4\x93\x02)\x12\'/v3/data-fundmental/history-instruments\x12w\n\x0fGetConstituents\x12\".fundmental.api.GetConstituentsReq\x1a\x16.data.api.Constituents\"(\x82\xd3\xe4\x93\x02\"\x12 /v3/data-fundmental/constituents\x12l\n\tGetSector\x12\x1c.fundmental.api.GetSectorReq\x1a\x1c.fundmental.api.GetSectorRsp\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v3/data-fundmental/sectors\x12u\n\x0bGetIndustry\x12\x1e.fundmental.api.GetIndustryReq\x1a\x1e.fundmental.api.GetIndustryRsp\"&\x82\xd3\xe4\x93\x02 \x12\x1e/v3/data-fundmental/industries\x12p\n\nGetConcept\x12\x1d.fundmental.api.GetConceptReq\x1a\x1d.fundmental.api.GetConceptRsp\"$\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v3/data-fundmental/concepts\x12\x84\x01\n\x0fGetTradingDates\x12\".fundmental.api.GetTradingDatesReq\x1a\".fundmental.api.GetTradingDatesRsp\")\x82\xd3\xe4\x93\x02#\x12!/v3/data-fundmental/trading-dates\x12\xa2\x01\n\x16GetPreviousTradingDate\x12).fundmental.api.GetPreviousTradingDateReq\x1a).fundmental.api.GetPreviousTradingDateRsp\"2\x82\xd3\xe4\x93\x02,\x12*/v3/data-fundmental/trading-dates/previous\x12\x92\x01\n\x12GetNextTradingDate\x12%.fundmental.api.GetNextTradingDateReq\x1a%.fundmental.api.GetNextTradingDateRsp\".\x82\xd3\xe4\x93\x02(\x12&/v3/data-fundmental/trading-dates/next\x12k\n\x0cGetDividends\x12\x1f.fundmental.api.GetDividendsReq\x1a\x13.data.api.Dividends\"%\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v3/data-fundmental/dividends\x12\x94\x01\n\x16GetContinuousContracts\x12).fundmental.api.GetContinuousContractsReq\x1a\x1d.data.api.ContinuousContracts\"0\x82\xd3\xe4\x93\x02*\x12(/v3/data-fundmental/continuous-contractsb\x06proto3')
  ,
  dependencies=[data__pb2.DESCRIPTOR,google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,github_dot_com_dot_gogo_dot_protobuf_dot_gogoproto_dot_gogo__pb2.DESCRIPTOR,])




_GETFUNDMENTALSREQ = _descriptor.Descriptor(
  name='GetFundmentalsReq',
  full_name='fundmental.api.GetFundmentalsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='table', full_name='fundmental.api.GetFundmentalsReq.table', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetFundmentalsReq.fields', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filter', full_name='fundmental.api.GetFundmentalsReq.filter', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetFundmentalsReq.symbols', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetFundmentalsReq.end_date', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='order_by', full_name='fundmental.api.GetFundmentalsReq.order_by', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='count', full_name='fundmental.api.GetFundmentalsReq.count', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=159,
  serialized_end=293,
)


_GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY = _descriptor.Descriptor(
  name='FieldsEntry',
  full_name='fundmental.api.GetFundmentalsRsp.Fundmental.FieldsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.FieldsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.FieldsEntry.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=586,
  serialized_end=631,
)

_GETFUNDMENTALSRSP_FUNDMENTAL = _descriptor.Descriptor(
  name='Fundmental',
  full_name='fundmental.api.GetFundmentalsRsp.Fundmental',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.symbol', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.fields', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pub_date', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.pub_date', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetFundmentalsRsp.Fundmental.end_date', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))),
  ],
  extensions=[
  ],
  nested_types=[_GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=378,
  serialized_end=631,
)

_GETFUNDMENTALSRSP = _descriptor.Descriptor(
  name='GetFundmentalsRsp',
  full_name='fundmental.api.GetFundmentalsRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='fundmental.api.GetFundmentalsRsp.data', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_GETFUNDMENTALSRSP_FUNDMENTAL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=296,
  serialized_end=631,
)


_GETINSTRUMENTINFOSREQ = _descriptor.Descriptor(
  name='GetInstrumentInfosReq',
  full_name='fundmental.api.GetInstrumentInfosReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetInstrumentInfosReq.symbols', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exchanges', full_name='fundmental.api.GetInstrumentInfosReq.exchanges', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sec_types', full_name='fundmental.api.GetInstrumentInfosReq.sec_types', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='names', full_name='fundmental.api.GetInstrumentInfosReq.names', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetInstrumentInfosReq.fields', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=633,
  serialized_end=742,
)


_GETINSTRUMENTSREQ = _descriptor.Descriptor(
  name='GetInstrumentsReq',
  full_name='fundmental.api.GetInstrumentsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetInstrumentsReq.symbols', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exchanges', full_name='fundmental.api.GetInstrumentsReq.exchanges', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sec_types', full_name='fundmental.api.GetInstrumentsReq.sec_types', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='names', full_name='fundmental.api.GetInstrumentsReq.names', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_suspended', full_name='fundmental.api.GetInstrumentsReq.skip_suspended', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='skip_st', full_name='fundmental.api.GetInstrumentsReq.skip_st', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetInstrumentsReq.fields', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetInstrumentsReq.start_date', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetInstrumentsReq.end_date', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=745,
  serialized_end=929,
)


_GETHISTORYINSTRUMENTSREQ = _descriptor.Descriptor(
  name='GetHistoryInstrumentsReq',
  full_name='fundmental.api.GetHistoryInstrumentsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetHistoryInstrumentsReq.symbols', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetHistoryInstrumentsReq.fields', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetHistoryInstrumentsReq.start_date', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetHistoryInstrumentsReq.end_date', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=931,
  serialized_end=1028,
)


_GETCONSTITUENTSREQ = _descriptor.Descriptor(
  name='GetConstituentsReq',
  full_name='fundmental.api.GetConstituentsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='fundmental.api.GetConstituentsReq.index', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='fields', full_name='fundmental.api.GetConstituentsReq.fields', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetConstituentsReq.start_date', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetConstituentsReq.end_date', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1030,
  serialized_end=1119,
)


_GETSECTORREQ = _descriptor.Descriptor(
  name='GetSectorReq',
  full_name='fundmental.api.GetSectorReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='fundmental.api.GetSectorReq.code', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1121,
  serialized_end=1149,
)


_GETSECTORRSP = _descriptor.Descriptor(
  name='GetSectorRsp',
  full_name='fundmental.api.GetSectorRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetSectorRsp.symbols', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1151,
  serialized_end=1182,
)


_GETINDUSTRYREQ = _descriptor.Descriptor(
  name='GetIndustryReq',
  full_name='fundmental.api.GetIndustryReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='fundmental.api.GetIndustryReq.code', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1184,
  serialized_end=1214,
)


_GETINDUSTRYRSP = _descriptor.Descriptor(
  name='GetIndustryRsp',
  full_name='fundmental.api.GetIndustryRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetIndustryRsp.symbols', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1216,
  serialized_end=1249,
)


_GETCONCEPTREQ = _descriptor.Descriptor(
  name='GetConceptReq',
  full_name='fundmental.api.GetConceptReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='fundmental.api.GetConceptReq.code', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1251,
  serialized_end=1280,
)


_GETCONCEPTRSP = _descriptor.Descriptor(
  name='GetConceptRsp',
  full_name='fundmental.api.GetConceptRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbols', full_name='fundmental.api.GetConceptRsp.symbols', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1282,
  serialized_end=1314,
)


_GETTRADINGDATESREQ = _descriptor.Descriptor(
  name='GetTradingDatesReq',
  full_name='fundmental.api.GetTradingDatesReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exchange', full_name='fundmental.api.GetTradingDatesReq.exchange', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetTradingDatesReq.start_date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetTradingDatesReq.end_date', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1316,
  serialized_end=1392,
)


_GETTRADINGDATESRSP = _descriptor.Descriptor(
  name='GetTradingDatesRsp',
  full_name='fundmental.api.GetTradingDatesRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dates', full_name='fundmental.api.GetTradingDatesRsp.dates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1394,
  serialized_end=1463,
)


_GETPREVIOUSTRADINGDATEREQ = _descriptor.Descriptor(
  name='GetPreviousTradingDateReq',
  full_name='fundmental.api.GetPreviousTradingDateReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exchange', full_name='fundmental.api.GetPreviousTradingDateReq.exchange', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date', full_name='fundmental.api.GetPreviousTradingDateReq.date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1465,
  serialized_end=1524,
)


_GETPREVIOUSTRADINGDATERSP = _descriptor.Descriptor(
  name='GetPreviousTradingDateRsp',
  full_name='fundmental.api.GetPreviousTradingDateRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='date', full_name='fundmental.api.GetPreviousTradingDateRsp.date', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1526,
  serialized_end=1601,
)


_GETNEXTTRADINGDATEREQ = _descriptor.Descriptor(
  name='GetNextTradingDateReq',
  full_name='fundmental.api.GetNextTradingDateReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exchange', full_name='fundmental.api.GetNextTradingDateReq.exchange', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='date', full_name='fundmental.api.GetNextTradingDateReq.date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1603,
  serialized_end=1658,
)


_GETNEXTTRADINGDATERSP = _descriptor.Descriptor(
  name='GetNextTradingDateRsp',
  full_name='fundmental.api.GetNextTradingDateRsp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='date', full_name='fundmental.api.GetNextTradingDateRsp.date', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1660,
  serialized_end=1731,
)


_GETDIVIDENDSREQ = _descriptor.Descriptor(
  name='GetDividendsReq',
  full_name='fundmental.api.GetDividendsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='symbol', full_name='fundmental.api.GetDividendsReq.symbol', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetDividendsReq.start_date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetDividendsReq.end_date', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1733,
  serialized_end=1804,
)


_GETCONTINUOUSCONTRACTSREQ = _descriptor.Descriptor(
  name='GetContinuousContractsReq',
  full_name='fundmental.api.GetContinuousContractsReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='csymbol', full_name='fundmental.api.GetContinuousContractsReq.csymbol', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='fundmental.api.GetContinuousContractsReq.start_date', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='fundmental.api.GetContinuousContractsReq.end_date', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1806,
  serialized_end=1888,
)

_GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY.containing_type = _GETFUNDMENTALSRSP_FUNDMENTAL
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['fields'].message_type = _GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['pub_date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['end_date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETFUNDMENTALSRSP_FUNDMENTAL.containing_type = _GETFUNDMENTALSRSP
_GETFUNDMENTALSRSP.fields_by_name['data'].message_type = _GETFUNDMENTALSRSP_FUNDMENTAL
_GETTRADINGDATESRSP.fields_by_name['dates'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETPREVIOUSTRADINGDATERSP.fields_by_name['date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_GETNEXTTRADINGDATERSP.fields_by_name['date'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
DESCRIPTOR.message_types_by_name['GetFundmentalsReq'] = _GETFUNDMENTALSREQ
DESCRIPTOR.message_types_by_name['GetFundmentalsRsp'] = _GETFUNDMENTALSRSP
DESCRIPTOR.message_types_by_name['GetInstrumentInfosReq'] = _GETINSTRUMENTINFOSREQ
DESCRIPTOR.message_types_by_name['GetInstrumentsReq'] = _GETINSTRUMENTSREQ
DESCRIPTOR.message_types_by_name['GetHistoryInstrumentsReq'] = _GETHISTORYINSTRUMENTSREQ
DESCRIPTOR.message_types_by_name['GetConstituentsReq'] = _GETCONSTITUENTSREQ
DESCRIPTOR.message_types_by_name['GetSectorReq'] = _GETSECTORREQ
DESCRIPTOR.message_types_by_name['GetSectorRsp'] = _GETSECTORRSP
DESCRIPTOR.message_types_by_name['GetIndustryReq'] = _GETINDUSTRYREQ
DESCRIPTOR.message_types_by_name['GetIndustryRsp'] = _GETINDUSTRYRSP
DESCRIPTOR.message_types_by_name['GetConceptReq'] = _GETCONCEPTREQ
DESCRIPTOR.message_types_by_name['GetConceptRsp'] = _GETCONCEPTRSP
DESCRIPTOR.message_types_by_name['GetTradingDatesReq'] = _GETTRADINGDATESREQ
DESCRIPTOR.message_types_by_name['GetTradingDatesRsp'] = _GETTRADINGDATESRSP
DESCRIPTOR.message_types_by_name['GetPreviousTradingDateReq'] = _GETPREVIOUSTRADINGDATEREQ
DESCRIPTOR.message_types_by_name['GetPreviousTradingDateRsp'] = _GETPREVIOUSTRADINGDATERSP
DESCRIPTOR.message_types_by_name['GetNextTradingDateReq'] = _GETNEXTTRADINGDATEREQ
DESCRIPTOR.message_types_by_name['GetNextTradingDateRsp'] = _GETNEXTTRADINGDATERSP
DESCRIPTOR.message_types_by_name['GetDividendsReq'] = _GETDIVIDENDSREQ
DESCRIPTOR.message_types_by_name['GetContinuousContractsReq'] = _GETCONTINUOUSCONTRACTSREQ
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetFundmentalsReq = _reflection.GeneratedProtocolMessageType('GetFundmentalsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETFUNDMENTALSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetFundmentalsReq)
  ))
_sym_db.RegisterMessage(GetFundmentalsReq)

GetFundmentalsRsp = _reflection.GeneratedProtocolMessageType('GetFundmentalsRsp', (_message.Message,), dict(

  Fundmental = _reflection.GeneratedProtocolMessageType('Fundmental', (_message.Message,), dict(

    FieldsEntry = _reflection.GeneratedProtocolMessageType('FieldsEntry', (_message.Message,), dict(
      DESCRIPTOR = _GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY,
      __module__ = 'fundmental_pb2'
      # @@protoc_insertion_point(class_scope:fundmental.api.GetFundmentalsRsp.Fundmental.FieldsEntry)
      ))
    ,
    DESCRIPTOR = _GETFUNDMENTALSRSP_FUNDMENTAL,
    __module__ = 'fundmental_pb2'
    # @@protoc_insertion_point(class_scope:fundmental.api.GetFundmentalsRsp.Fundmental)
    ))
  ,
  DESCRIPTOR = _GETFUNDMENTALSRSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetFundmentalsRsp)
  ))
_sym_db.RegisterMessage(GetFundmentalsRsp)
_sym_db.RegisterMessage(GetFundmentalsRsp.Fundmental)
_sym_db.RegisterMessage(GetFundmentalsRsp.Fundmental.FieldsEntry)

GetInstrumentInfosReq = _reflection.GeneratedProtocolMessageType('GetInstrumentInfosReq', (_message.Message,), dict(
  DESCRIPTOR = _GETINSTRUMENTINFOSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetInstrumentInfosReq)
  ))
_sym_db.RegisterMessage(GetInstrumentInfosReq)

GetInstrumentsReq = _reflection.GeneratedProtocolMessageType('GetInstrumentsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETINSTRUMENTSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetInstrumentsReq)
  ))
_sym_db.RegisterMessage(GetInstrumentsReq)

GetHistoryInstrumentsReq = _reflection.GeneratedProtocolMessageType('GetHistoryInstrumentsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETHISTORYINSTRUMENTSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetHistoryInstrumentsReq)
  ))
_sym_db.RegisterMessage(GetHistoryInstrumentsReq)

GetConstituentsReq = _reflection.GeneratedProtocolMessageType('GetConstituentsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETCONSTITUENTSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetConstituentsReq)
  ))
_sym_db.RegisterMessage(GetConstituentsReq)

GetSectorReq = _reflection.GeneratedProtocolMessageType('GetSectorReq', (_message.Message,), dict(
  DESCRIPTOR = _GETSECTORREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetSectorReq)
  ))
_sym_db.RegisterMessage(GetSectorReq)

GetSectorRsp = _reflection.GeneratedProtocolMessageType('GetSectorRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETSECTORRSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetSectorRsp)
  ))
_sym_db.RegisterMessage(GetSectorRsp)

GetIndustryReq = _reflection.GeneratedProtocolMessageType('GetIndustryReq', (_message.Message,), dict(
  DESCRIPTOR = _GETINDUSTRYREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetIndustryReq)
  ))
_sym_db.RegisterMessage(GetIndustryReq)

GetIndustryRsp = _reflection.GeneratedProtocolMessageType('GetIndustryRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETINDUSTRYRSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetIndustryRsp)
  ))
_sym_db.RegisterMessage(GetIndustryRsp)

GetConceptReq = _reflection.GeneratedProtocolMessageType('GetConceptReq', (_message.Message,), dict(
  DESCRIPTOR = _GETCONCEPTREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetConceptReq)
  ))
_sym_db.RegisterMessage(GetConceptReq)

GetConceptRsp = _reflection.GeneratedProtocolMessageType('GetConceptRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETCONCEPTRSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetConceptRsp)
  ))
_sym_db.RegisterMessage(GetConceptRsp)

GetTradingDatesReq = _reflection.GeneratedProtocolMessageType('GetTradingDatesReq', (_message.Message,), dict(
  DESCRIPTOR = _GETTRADINGDATESREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetTradingDatesReq)
  ))
_sym_db.RegisterMessage(GetTradingDatesReq)

GetTradingDatesRsp = _reflection.GeneratedProtocolMessageType('GetTradingDatesRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETTRADINGDATESRSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetTradingDatesRsp)
  ))
_sym_db.RegisterMessage(GetTradingDatesRsp)

GetPreviousTradingDateReq = _reflection.GeneratedProtocolMessageType('GetPreviousTradingDateReq', (_message.Message,), dict(
  DESCRIPTOR = _GETPREVIOUSTRADINGDATEREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetPreviousTradingDateReq)
  ))
_sym_db.RegisterMessage(GetPreviousTradingDateReq)

GetPreviousTradingDateRsp = _reflection.GeneratedProtocolMessageType('GetPreviousTradingDateRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETPREVIOUSTRADINGDATERSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetPreviousTradingDateRsp)
  ))
_sym_db.RegisterMessage(GetPreviousTradingDateRsp)

GetNextTradingDateReq = _reflection.GeneratedProtocolMessageType('GetNextTradingDateReq', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTTRADINGDATEREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetNextTradingDateReq)
  ))
_sym_db.RegisterMessage(GetNextTradingDateReq)

GetNextTradingDateRsp = _reflection.GeneratedProtocolMessageType('GetNextTradingDateRsp', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTTRADINGDATERSP,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetNextTradingDateRsp)
  ))
_sym_db.RegisterMessage(GetNextTradingDateRsp)

GetDividendsReq = _reflection.GeneratedProtocolMessageType('GetDividendsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETDIVIDENDSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetDividendsReq)
  ))
_sym_db.RegisterMessage(GetDividendsReq)

GetContinuousContractsReq = _reflection.GeneratedProtocolMessageType('GetContinuousContractsReq', (_message.Message,), dict(
  DESCRIPTOR = _GETCONTINUOUSCONTRACTSREQ,
  __module__ = 'fundmental_pb2'
  # @@protoc_insertion_point(class_scope:fundmental.api.GetContinuousContractsReq)
  ))
_sym_db.RegisterMessage(GetContinuousContractsReq)


_GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY.has_options = True
_GETFUNDMENTALSRSP_FUNDMENTAL_FIELDSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['pub_date'].has_options = True
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['pub_date']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['end_date'].has_options = True
_GETFUNDMENTALSRSP_FUNDMENTAL.fields_by_name['end_date']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))
_GETTRADINGDATESRSP.fields_by_name['dates'].has_options = True
_GETTRADINGDATESRSP.fields_by_name['dates']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))
_GETPREVIOUSTRADINGDATERSP.fields_by_name['date'].has_options = True
_GETPREVIOUSTRADINGDATERSP.fields_by_name['date']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))
_GETNEXTTRADINGDATERSP.fields_by_name['date'].has_options = True
_GETNEXTTRADINGDATERSP.fields_by_name['date']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\220\337\037\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class FundmentalServiceStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetFundmentals = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetFundmentals',
          request_serializer=GetFundmentalsReq.SerializeToString,
          response_deserializer=GetFundmentalsRsp.FromString,
          )
      self.GetInstrumentInfos = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetInstrumentInfos',
          request_serializer=GetInstrumentInfosReq.SerializeToString,
          response_deserializer=data__pb2.InstrumentInfos.FromString,
          )
      self.GetInstruments = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetInstruments',
          request_serializer=GetInstrumentsReq.SerializeToString,
          response_deserializer=data__pb2.Instruments.FromString,
          )
      self.GetHistoryInstruments = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetHistoryInstruments',
          request_serializer=GetHistoryInstrumentsReq.SerializeToString,
          response_deserializer=data__pb2.Instruments.FromString,
          )
      self.GetConstituents = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetConstituents',
          request_serializer=GetConstituentsReq.SerializeToString,
          response_deserializer=data__pb2.Constituents.FromString,
          )
      self.GetSector = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetSector',
          request_serializer=GetSectorReq.SerializeToString,
          response_deserializer=GetSectorRsp.FromString,
          )
      self.GetIndustry = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetIndustry',
          request_serializer=GetIndustryReq.SerializeToString,
          response_deserializer=GetIndustryRsp.FromString,
          )
      self.GetConcept = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetConcept',
          request_serializer=GetConceptReq.SerializeToString,
          response_deserializer=GetConceptRsp.FromString,
          )
      self.GetTradingDates = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetTradingDates',
          request_serializer=GetTradingDatesReq.SerializeToString,
          response_deserializer=GetTradingDatesRsp.FromString,
          )
      self.GetPreviousTradingDate = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetPreviousTradingDate',
          request_serializer=GetPreviousTradingDateReq.SerializeToString,
          response_deserializer=GetPreviousTradingDateRsp.FromString,
          )
      self.GetNextTradingDate = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetNextTradingDate',
          request_serializer=GetNextTradingDateReq.SerializeToString,
          response_deserializer=GetNextTradingDateRsp.FromString,
          )
      self.GetDividends = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetDividends',
          request_serializer=GetDividendsReq.SerializeToString,
          response_deserializer=data__pb2.Dividends.FromString,
          )
      self.GetContinuousContracts = channel.unary_unary(
          '/fundmental.api.FundmentalService/GetContinuousContracts',
          request_serializer=GetContinuousContractsReq.SerializeToString,
          response_deserializer=data__pb2.ContinuousContracts.FromString,
          )


  class FundmentalServiceServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetFundmentals(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetInstrumentInfos(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetInstruments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetHistoryInstruments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetConstituents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetSector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetIndustry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetConcept(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTradingDates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetPreviousTradingDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNextTradingDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetDividends(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetContinuousContracts(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_FundmentalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetFundmentals': grpc.unary_unary_rpc_method_handler(
            servicer.GetFundmentals,
            request_deserializer=GetFundmentalsReq.FromString,
            response_serializer=GetFundmentalsRsp.SerializeToString,
        ),
        'GetInstrumentInfos': grpc.unary_unary_rpc_method_handler(
            servicer.GetInstrumentInfos,
            request_deserializer=GetInstrumentInfosReq.FromString,
            response_serializer=data__pb2.InstrumentInfos.SerializeToString,
        ),
        'GetInstruments': grpc.unary_unary_rpc_method_handler(
            servicer.GetInstruments,
            request_deserializer=GetInstrumentsReq.FromString,
            response_serializer=data__pb2.Instruments.SerializeToString,
        ),
        'GetHistoryInstruments': grpc.unary_unary_rpc_method_handler(
            servicer.GetHistoryInstruments,
            request_deserializer=GetHistoryInstrumentsReq.FromString,
            response_serializer=data__pb2.Instruments.SerializeToString,
        ),
        'GetConstituents': grpc.unary_unary_rpc_method_handler(
            servicer.GetConstituents,
            request_deserializer=GetConstituentsReq.FromString,
            response_serializer=data__pb2.Constituents.SerializeToString,
        ),
        'GetSector': grpc.unary_unary_rpc_method_handler(
            servicer.GetSector,
            request_deserializer=GetSectorReq.FromString,
            response_serializer=GetSectorRsp.SerializeToString,
        ),
        'GetIndustry': grpc.unary_unary_rpc_method_handler(
            servicer.GetIndustry,
            request_deserializer=GetIndustryReq.FromString,
            response_serializer=GetIndustryRsp.SerializeToString,
        ),
        'GetConcept': grpc.unary_unary_rpc_method_handler(
            servicer.GetConcept,
            request_deserializer=GetConceptReq.FromString,
            response_serializer=GetConceptRsp.SerializeToString,
        ),
        'GetTradingDates': grpc.unary_unary_rpc_method_handler(
            servicer.GetTradingDates,
            request_deserializer=GetTradingDatesReq.FromString,
            response_serializer=GetTradingDatesRsp.SerializeToString,
        ),
        'GetPreviousTradingDate': grpc.unary_unary_rpc_method_handler(
            servicer.GetPreviousTradingDate,
            request_deserializer=GetPreviousTradingDateReq.FromString,
            response_serializer=GetPreviousTradingDateRsp.SerializeToString,
        ),
        'GetNextTradingDate': grpc.unary_unary_rpc_method_handler(
            servicer.GetNextTradingDate,
            request_deserializer=GetNextTradingDateReq.FromString,
            response_serializer=GetNextTradingDateRsp.SerializeToString,
        ),
        'GetDividends': grpc.unary_unary_rpc_method_handler(
            servicer.GetDividends,
            request_deserializer=GetDividendsReq.FromString,
            response_serializer=data__pb2.Dividends.SerializeToString,
        ),
        'GetContinuousContracts': grpc.unary_unary_rpc_method_handler(
            servicer.GetContinuousContracts,
            request_deserializer=GetContinuousContractsReq.FromString,
            response_serializer=data__pb2.ContinuousContracts.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'fundmental.api.FundmentalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaFundmentalServiceServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetFundmentals(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetInstrumentInfos(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetInstruments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetHistoryInstruments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetConstituents(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetSector(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetIndustry(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetConcept(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTradingDates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetPreviousTradingDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNextTradingDate(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetDividends(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetContinuousContracts(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaFundmentalServiceStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def GetFundmentals(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetFundmentals.future = None
    def GetInstrumentInfos(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetInstrumentInfos.future = None
    def GetInstruments(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetInstruments.future = None
    def GetHistoryInstruments(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetHistoryInstruments.future = None
    def GetConstituents(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetConstituents.future = None
    def GetSector(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetSector.future = None
    def GetIndustry(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetIndustry.future = None
    def GetConcept(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetConcept.future = None
    def GetTradingDates(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTradingDates.future = None
    def GetPreviousTradingDate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetPreviousTradingDate.future = None
    def GetNextTradingDate(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetNextTradingDate.future = None
    def GetDividends(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetDividends.future = None
    def GetContinuousContracts(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetContinuousContracts.future = None


  def beta_create_FundmentalService_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('fundmental.api.FundmentalService', 'GetConcept'): GetConceptReq.FromString,
      ('fundmental.api.FundmentalService', 'GetConstituents'): GetConstituentsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetContinuousContracts'): GetContinuousContractsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetDividends'): GetDividendsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetFundmentals'): GetFundmentalsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetHistoryInstruments'): GetHistoryInstrumentsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetIndustry'): GetIndustryReq.FromString,
      ('fundmental.api.FundmentalService', 'GetInstrumentInfos'): GetInstrumentInfosReq.FromString,
      ('fundmental.api.FundmentalService', 'GetInstruments'): GetInstrumentsReq.FromString,
      ('fundmental.api.FundmentalService', 'GetNextTradingDate'): GetNextTradingDateReq.FromString,
      ('fundmental.api.FundmentalService', 'GetPreviousTradingDate'): GetPreviousTradingDateReq.FromString,
      ('fundmental.api.FundmentalService', 'GetSector'): GetSectorReq.FromString,
      ('fundmental.api.FundmentalService', 'GetTradingDates'): GetTradingDatesReq.FromString,
    }
    response_serializers = {
      ('fundmental.api.FundmentalService', 'GetConcept'): GetConceptRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetConstituents'): data__pb2.Constituents.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetContinuousContracts'): data__pb2.ContinuousContracts.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetDividends'): data__pb2.Dividends.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetFundmentals'): GetFundmentalsRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetHistoryInstruments'): data__pb2.Instruments.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetIndustry'): GetIndustryRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetInstrumentInfos'): data__pb2.InstrumentInfos.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetInstruments'): data__pb2.Instruments.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetNextTradingDate'): GetNextTradingDateRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetPreviousTradingDate'): GetPreviousTradingDateRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetSector'): GetSectorRsp.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetTradingDates'): GetTradingDatesRsp.SerializeToString,
    }
    method_implementations = {
      ('fundmental.api.FundmentalService', 'GetConcept'): face_utilities.unary_unary_inline(servicer.GetConcept),
      ('fundmental.api.FundmentalService', 'GetConstituents'): face_utilities.unary_unary_inline(servicer.GetConstituents),
      ('fundmental.api.FundmentalService', 'GetContinuousContracts'): face_utilities.unary_unary_inline(servicer.GetContinuousContracts),
      ('fundmental.api.FundmentalService', 'GetDividends'): face_utilities.unary_unary_inline(servicer.GetDividends),
      ('fundmental.api.FundmentalService', 'GetFundmentals'): face_utilities.unary_unary_inline(servicer.GetFundmentals),
      ('fundmental.api.FundmentalService', 'GetHistoryInstruments'): face_utilities.unary_unary_inline(servicer.GetHistoryInstruments),
      ('fundmental.api.FundmentalService', 'GetIndustry'): face_utilities.unary_unary_inline(servicer.GetIndustry),
      ('fundmental.api.FundmentalService', 'GetInstrumentInfos'): face_utilities.unary_unary_inline(servicer.GetInstrumentInfos),
      ('fundmental.api.FundmentalService', 'GetInstruments'): face_utilities.unary_unary_inline(servicer.GetInstruments),
      ('fundmental.api.FundmentalService', 'GetNextTradingDate'): face_utilities.unary_unary_inline(servicer.GetNextTradingDate),
      ('fundmental.api.FundmentalService', 'GetPreviousTradingDate'): face_utilities.unary_unary_inline(servicer.GetPreviousTradingDate),
      ('fundmental.api.FundmentalService', 'GetSector'): face_utilities.unary_unary_inline(servicer.GetSector),
      ('fundmental.api.FundmentalService', 'GetTradingDates'): face_utilities.unary_unary_inline(servicer.GetTradingDates),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_FundmentalService_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('fundmental.api.FundmentalService', 'GetConcept'): GetConceptReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetConstituents'): GetConstituentsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetContinuousContracts'): GetContinuousContractsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetDividends'): GetDividendsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetFundmentals'): GetFundmentalsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetHistoryInstruments'): GetHistoryInstrumentsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetIndustry'): GetIndustryReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetInstrumentInfos'): GetInstrumentInfosReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetInstruments'): GetInstrumentsReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetNextTradingDate'): GetNextTradingDateReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetPreviousTradingDate'): GetPreviousTradingDateReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetSector'): GetSectorReq.SerializeToString,
      ('fundmental.api.FundmentalService', 'GetTradingDates'): GetTradingDatesReq.SerializeToString,
    }
    response_deserializers = {
      ('fundmental.api.FundmentalService', 'GetConcept'): GetConceptRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetConstituents'): data__pb2.Constituents.FromString,
      ('fundmental.api.FundmentalService', 'GetContinuousContracts'): data__pb2.ContinuousContracts.FromString,
      ('fundmental.api.FundmentalService', 'GetDividends'): data__pb2.Dividends.FromString,
      ('fundmental.api.FundmentalService', 'GetFundmentals'): GetFundmentalsRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetHistoryInstruments'): data__pb2.Instruments.FromString,
      ('fundmental.api.FundmentalService', 'GetIndustry'): GetIndustryRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetInstrumentInfos'): data__pb2.InstrumentInfos.FromString,
      ('fundmental.api.FundmentalService', 'GetInstruments'): data__pb2.Instruments.FromString,
      ('fundmental.api.FundmentalService', 'GetNextTradingDate'): GetNextTradingDateRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetPreviousTradingDate'): GetPreviousTradingDateRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetSector'): GetSectorRsp.FromString,
      ('fundmental.api.FundmentalService', 'GetTradingDates'): GetTradingDatesRsp.FromString,
    }
    cardinalities = {
      'GetConcept': cardinality.Cardinality.UNARY_UNARY,
      'GetConstituents': cardinality.Cardinality.UNARY_UNARY,
      'GetContinuousContracts': cardinality.Cardinality.UNARY_UNARY,
      'GetDividends': cardinality.Cardinality.UNARY_UNARY,
      'GetFundmentals': cardinality.Cardinality.UNARY_UNARY,
      'GetHistoryInstruments': cardinality.Cardinality.UNARY_UNARY,
      'GetIndustry': cardinality.Cardinality.UNARY_UNARY,
      'GetInstrumentInfos': cardinality.Cardinality.UNARY_UNARY,
      'GetInstruments': cardinality.Cardinality.UNARY_UNARY,
      'GetNextTradingDate': cardinality.Cardinality.UNARY_UNARY,
      'GetPreviousTradingDate': cardinality.Cardinality.UNARY_UNARY,
      'GetSector': cardinality.Cardinality.UNARY_UNARY,
      'GetTradingDates': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'fundmental.api.FundmentalService', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
