# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import gm.pb.data_pb2 as data__pb2
import gm.pb.fundmental_pb2 as fundmental__pb2


class FundmentalServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetFundmentals = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetFundmentals',
        request_serializer=fundmental__pb2.GetFundmentalsReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetFundmentalsRsp.FromString,
        )
    self.GetInstrumentInfos = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetInstrumentInfos',
        request_serializer=fundmental__pb2.GetInstrumentInfosReq.SerializeToString,
        response_deserializer=data__pb2.InstrumentInfos.FromString,
        )
    self.GetInstruments = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetInstruments',
        request_serializer=fundmental__pb2.GetInstrumentsReq.SerializeToString,
        response_deserializer=data__pb2.Instruments.FromString,
        )
    self.GetHistoryInstruments = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetHistoryInstruments',
        request_serializer=fundmental__pb2.GetHistoryInstrumentsReq.SerializeToString,
        response_deserializer=data__pb2.Instruments.FromString,
        )
    self.GetConstituents = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetConstituents',
        request_serializer=fundmental__pb2.GetConstituentsReq.SerializeToString,
        response_deserializer=data__pb2.Constituents.FromString,
        )
    self.GetSector = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetSector',
        request_serializer=fundmental__pb2.GetSectorReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetSectorRsp.FromString,
        )
    self.GetIndustry = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetIndustry',
        request_serializer=fundmental__pb2.GetIndustryReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetIndustryRsp.FromString,
        )
    self.GetConcept = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetConcept',
        request_serializer=fundmental__pb2.GetConceptReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetConceptRsp.FromString,
        )
    self.GetTradingDates = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetTradingDates',
        request_serializer=fundmental__pb2.GetTradingDatesReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetTradingDatesRsp.FromString,
        )
    self.GetPreviousTradingDate = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetPreviousTradingDate',
        request_serializer=fundmental__pb2.GetPreviousTradingDateReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetPreviousTradingDateRsp.FromString,
        )
    self.GetNextTradingDate = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetNextTradingDate',
        request_serializer=fundmental__pb2.GetNextTradingDateReq.SerializeToString,
        response_deserializer=fundmental__pb2.GetNextTradingDateRsp.FromString,
        )
    self.GetDividends = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetDividends',
        request_serializer=fundmental__pb2.GetDividendsReq.SerializeToString,
        response_deserializer=data__pb2.Dividends.FromString,
        )
    self.GetContinuousContracts = channel.unary_unary(
        '/fundmental.api.FundmentalService/GetContinuousContracts',
        request_serializer=fundmental__pb2.GetContinuousContractsReq.SerializeToString,
        response_deserializer=data__pb2.ContinuousContracts.FromString,
        )


class FundmentalServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetFundmentals(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInstrumentInfos(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetInstruments(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetHistoryInstruments(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConstituents(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSector(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetIndustry(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetConcept(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetTradingDates(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPreviousTradingDate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetNextTradingDate(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetDividends(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetContinuousContracts(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FundmentalServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetFundmentals': grpc.unary_unary_rpc_method_handler(
          servicer.GetFundmentals,
          request_deserializer=fundmental__pb2.GetFundmentalsReq.FromString,
          response_serializer=fundmental__pb2.GetFundmentalsRsp.SerializeToString,
      ),
      'GetInstrumentInfos': grpc.unary_unary_rpc_method_handler(
          servicer.GetInstrumentInfos,
          request_deserializer=fundmental__pb2.GetInstrumentInfosReq.FromString,
          response_serializer=data__pb2.InstrumentInfos.SerializeToString,
      ),
      'GetInstruments': grpc.unary_unary_rpc_method_handler(
          servicer.GetInstruments,
          request_deserializer=fundmental__pb2.GetInstrumentsReq.FromString,
          response_serializer=data__pb2.Instruments.SerializeToString,
      ),
      'GetHistoryInstruments': grpc.unary_unary_rpc_method_handler(
          servicer.GetHistoryInstruments,
          request_deserializer=fundmental__pb2.GetHistoryInstrumentsReq.FromString,
          response_serializer=data__pb2.Instruments.SerializeToString,
      ),
      'GetConstituents': grpc.unary_unary_rpc_method_handler(
          servicer.GetConstituents,
          request_deserializer=fundmental__pb2.GetConstituentsReq.FromString,
          response_serializer=data__pb2.Constituents.SerializeToString,
      ),
      'GetSector': grpc.unary_unary_rpc_method_handler(
          servicer.GetSector,
          request_deserializer=fundmental__pb2.GetSectorReq.FromString,
          response_serializer=fundmental__pb2.GetSectorRsp.SerializeToString,
      ),
      'GetIndustry': grpc.unary_unary_rpc_method_handler(
          servicer.GetIndustry,
          request_deserializer=fundmental__pb2.GetIndustryReq.FromString,
          response_serializer=fundmental__pb2.GetIndustryRsp.SerializeToString,
      ),
      'GetConcept': grpc.unary_unary_rpc_method_handler(
          servicer.GetConcept,
          request_deserializer=fundmental__pb2.GetConceptReq.FromString,
          response_serializer=fundmental__pb2.GetConceptRsp.SerializeToString,
      ),
      'GetTradingDates': grpc.unary_unary_rpc_method_handler(
          servicer.GetTradingDates,
          request_deserializer=fundmental__pb2.GetTradingDatesReq.FromString,
          response_serializer=fundmental__pb2.GetTradingDatesRsp.SerializeToString,
      ),
      'GetPreviousTradingDate': grpc.unary_unary_rpc_method_handler(
          servicer.GetPreviousTradingDate,
          request_deserializer=fundmental__pb2.GetPreviousTradingDateReq.FromString,
          response_serializer=fundmental__pb2.GetPreviousTradingDateRsp.SerializeToString,
      ),
      'GetNextTradingDate': grpc.unary_unary_rpc_method_handler(
          servicer.GetNextTradingDate,
          request_deserializer=fundmental__pb2.GetNextTradingDateReq.FromString,
          response_serializer=fundmental__pb2.GetNextTradingDateRsp.SerializeToString,
      ),
      'GetDividends': grpc.unary_unary_rpc_method_handler(
          servicer.GetDividends,
          request_deserializer=fundmental__pb2.GetDividendsReq.FromString,
          response_serializer=data__pb2.Dividends.SerializeToString,
      ),
      'GetContinuousContracts': grpc.unary_unary_rpc_method_handler(
          servicer.GetContinuousContracts,
          request_deserializer=fundmental__pb2.GetContinuousContractsReq.FromString,
          response_serializer=data__pb2.ContinuousContracts.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'fundmental.api.FundmentalService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
