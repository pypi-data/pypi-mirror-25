# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.model_category_data import ModelCategoryData
from swagger_server.models.model_category_ref import ModelCategoryRef
from .base_model_ import Model as BaseModel
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ModelCategoryNew(BaseModel):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, name=None, description=None, parent=None):
        """
        ModelCategoryNew - a model defined in Swagger

        :param name: The name of this ModelCategoryNew.
        :type name: str
        :param description: The description of this ModelCategoryNew.
        :type description: str
        :param parent: The parent of this ModelCategoryNew.
        :type parent: ModelCategoryRef
        """
        self.swagger_types = {
            'name': str,
            'description': str,
            'parent': ModelCategoryRef
        }

        self.attribute_map = {
            'name': 'name',
            'description': 'description',
            'parent': 'parent'
        }

        self._name = name
        self._description = description
        self._parent = parent

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ModelCategoryNew of this ModelCategoryNew.
        :rtype: ModelCategoryNew
        """
        return deserialize_model(dikt, cls)

    @property
    def name(self):
        """
        Gets the name of this ModelCategoryNew.

        :return: The name of this ModelCategoryNew.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this ModelCategoryNew.

        :param name: The name of this ModelCategoryNew.
        :type name: str
        """

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this ModelCategoryNew.

        :return: The description of this ModelCategoryNew.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this ModelCategoryNew.

        :param description: The description of this ModelCategoryNew.
        :type description: str
        """

        self._description = description

    @property
    def parent(self):
        """
        Gets the parent of this ModelCategoryNew.

        :return: The parent of this ModelCategoryNew.
        :rtype: ModelCategoryRef
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """
        Sets the parent of this ModelCategoryNew.

        :param parent: The parent of this ModelCategoryNew.
        :type parent: ModelCategoryRef
        """

        self._parent = parent

