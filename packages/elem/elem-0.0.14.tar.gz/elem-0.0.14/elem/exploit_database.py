from git import Repo
from git.repo import fun
from git_manager import GitManager
import re
import os
import json

class ExploitDatabase(GitManager):
    def __init__(self, edb_path, exploitdb_repo):
        super(ExploitDatabase, self).__init__(edb_path,
                                              exploitdb_repo,
                                              'exploit-database')
        self.exploits = dict()

    def refresh_exploits_with_cves(self):
        pattern_string = 'CVE-\d{4}-\d{1,}'
        pattern = re.compile(pattern_string)
        for root, dirnames, filenames in os.walk(self.content_path):
            for filename in filenames:
                edb_file = open(os.path.join(root, filename), "r")
                content = edb_file.read()
                matches = pattern.findall(content, re.MULTILINE)
                edbid = os.path.splitext(filename)[0]
                if len(matches) > 0:
                    if edbid not in self.exploits.keys():
                        self.exploits[edbid] = dict(filename=edb_file.name,
                                                cves=[])
                    for cveid in matches:
                        if cveid not in self.exploits[edbid]['cves']:
                            self.exploits[edbid]['cves'].append(cveid)
