from git import Repo
from git.repo import fun
from git_manager import GitManager
import re
import os
import json
import csv

class ExploitSourceManager(GitManager):
    def __init__(self, name, edb_path, exploitdb_repo):
        super(ExploitSourceManager, self).__init__(edb_path,
                                                   exploitdb_repo,
                                                   name)
        self.exploits = dict()

        self.filters = ['windows', 
                        'bsd', 
                        'ios', 
                        'osx', 
                        'solaris',
                        'asp',
                        'hardware']

    def refresh_exploits_with_cves(self):
        pattern_string = 'CVE-\d{4}-\d{1,}'
        pattern = re.compile(pattern_string)
        for root, dirnames, filenames in os.walk(self.content_path):
            for filename in filenames:
                edb_file = open(os.path.join(root, filename), "r")
                content = edb_file.read()
                matches = pattern.findall(content, re.MULTILINE)
                edbid = os.path.splitext(filename)[0]
                if len(matches) > 0:
                    if edbid not in self.exploits.keys():
                        filename = \
                            edb_file.name[edb_file.name.index('exploit-database'):]
                        if not self.filter_file(filename):
                            filename = filename.replace('exploit-database/','')
                            self.exploits[edbid] = dict(filename=filename,
                                                        cves=[])
                            for cveid in matches:
                                if cveid not in self.exploits[edbid]['cves']:
                                    self.exploits[edbid]['cves'].append(cveid)

    def filter_file(self, filename):
        for file_filter in self.filters:
            if file_filter in filename:
                return True
        return False

