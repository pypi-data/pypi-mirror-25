[tox]
envlist = clean,py{27,34,35,36},astropy{10,13,-dev},report
skipsdist = true
toxworkdir = {homedir}/.tox/mpdaf

[testenv]
basepython =
    py27: python2.7
    py34: python3.4
    py35: python3.5
    py36: python3.6
    astropy10: python2.7
    astropy13: python2.7
whitelist_externals =
    which
setenv =
    COVERAGE_FILE={homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
commands =
    python --version
    which python
    which pytest
    pip freeze -l
    pytest {posargs} --cov mpdaf --cov-append --cov-report term lib/mpdaf
usedevelop = true
sitepackages = true
deps =
    scipy
    matplotlib
    numexpr
    coverage
    fitsio
    pytest-cov
    setuptools>=18
    py{27,34,35,36}: astropy>=2.0
    py{27,34,35,36}: numpy>=1.13
    py{27,34,35,36}: pytest>=3.1
    astropy{10,13}: pytest==3.0
    astropy10: astropy>=1.0,<1.1
    astropy10: numpy==1.10.4
    astropy13: astropy>=1.3,<2.0
    astropy13: numpy==1.12.1


[testenv:astropy-dev]
basepython = python2.7
whitelist_externals =
    which
setenv =
    COVERAGE_FILE={homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
commands =
    python --version
    which python
    which pytest
    pip freeze -l
    pytest {posargs} --cov mpdaf --cov-append --cov-report term lib/mpdaf
usedevelop = true
sitepackages = false
pip_pre = true
deps =
    scipy
    matplotlib
    numexpr
    coverage
    fitsio
    pytest>=3.1
    pytest-cov
    setuptools>=18
    cython
    jinja2
    numpy
    git+https://github.com/astropy/astropy.git#egg=astropy

[testenv:clean]
basepython = python2.7
deps = coverage
usedevelop = false
skip_install = true
sitepackages = false
commands = coverage erase

[testenv:report]
basepython = python2.7
deps = coverage
usedevelop = false
skip_install = true
sitepackages = false
commands =
    coverage combine {homedir}/.tox/.coverage.{env:CI_BUILD_REF_NAME:default}
    coverage report
    coverage html -i

[testenv:check]
basepython = python2.7
usedevelop = false
deps =
    numpy
    docutils
    # check-manifest
    flake8
    collective.checkdocs
    pygments
    rstcheck
    # restructuredtext_lint
commands =
    python setup.py checkdocs
    python setup.py check --strict --metadata
    # check-manifest {toxinidir}
    rstcheck --report warning README.rst CHANGELOG
    # rst-lint README.rst CHANGELOG

[testenv:docs]
basepython = python2.7
changedir = doc
deps =
    numpy
    scipy
    matplotlib
    astropy
    requests>=2.12
    sphinx>=1.4.1
    sphinx_rtd_theme
    sphinx_automodapi
    numpydoc>=0.6.0
    ipython>=5.0.0
    psutil
commands =
    sphinx-build {posargs:-W} -b html -d build/doctrees . build/html

[testenv:dash]
basepython = python2.7
changedir = doc
usedevelop = false
deps =
    doc2dash
passenv = SSH_AUTH_SOCK
whitelist_externals =
    tar
    rsync
commands =
    doc2dash -f -n MPDAF -d build build/html
    tar --exclude='.DS_Store' -czf build/MPDAF.docset.tgz build/MPDAF.docset
    rsync -rlDvhc build/MPDAF.docset.tgz urania1:{posargs:public_html/mpdaf/}

[testenv:sync_cov]
basepython = python2.7
skip_install = true
usedevelop = false
deps =
passenv = SSH_AUTH_SOCK
whitelist_externals = rsync
commands =
    rsync -rltDvhc htmlcov/ urania1:{posargs:public_html/mpdaf/cov}
