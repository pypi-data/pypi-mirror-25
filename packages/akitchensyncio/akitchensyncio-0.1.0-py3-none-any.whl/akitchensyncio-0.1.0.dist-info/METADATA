Metadata-Version: 2.0
Name: akitchensyncio
Version: 0.1.0
Summary: Utility functions for asyncio which Stephan wished where in the stdlib but aren't.
Home-page: https://github.com/stephanh42/akitchensyncio
Author: Stephan Houben
Author-email: stephanh42@gmail.com
License: MIT
Description-Content-Type: UNKNOWN
Keywords: asyncio
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Requires-Python: ~=3.5
Provides-Extra: dev
Provides-Extra: test

akitchensyncio
==============

Utility functions for asyncio which Stephan wished where in the stdlib
but aren't.

wrap_future(f)
--------------

Takes a callable f which returns an awaitable, and returns a callable
which wraps the awaitable in asyncio.ensure_future.

Can also be used as a decorator, especially with coroutine functions:

        @wrap_future
        async def foo(arg1, arg2):
            ...

transform_future(f, awaitable)
------------------------------

Apply a function to the result of an awaitable, return a future which
delivers the result.

iawait(awaitable)
-----------------

"Interactive await" -- Run default eventloop until awaitable has
completed. Mainly useful for interactive experimentation.



