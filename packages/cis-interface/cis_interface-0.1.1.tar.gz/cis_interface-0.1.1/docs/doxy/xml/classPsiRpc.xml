<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPsiRpc" kind="class" language="C++" prot="public">
    <compoundname>PsiRpc</compoundname>
    <derivedcompoundref refid="classPsiRpcClient" prot="public" virt="non-virtual">PsiRpcClient</derivedcompoundref>
    <derivedcompoundref refid="classPsiRpcServer" prot="public" virt="non-virtual">PsiRpcServer</derivedcompoundref>
    <includes refid="PsiInterface_8hpp" local="no">PsiInterface.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPsiRpc_1a1d955f5b67593d52dc2d058257255865" prot="private" static="no" mutable="no">
        <type><ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref></type>
        <definition>psiRpc_t PsiRpc::_pi</definition>
        <argsstring></argsstring>
        <name>_pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="113" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="113" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPsiRpc_1a59e6a3c10d5d3b8b5ddbad8272c21609" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PsiRpc::PsiRpc</definition>
        <argsstring>(const char *outName, char *outFormat, const char *inName, char *inFormat)</argsstring>
        <name>PsiRpc</name>
        <param>
          <type>const char *</type>
          <declname>outName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>outFormat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>inName</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>inFormat</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classPsiRpc" kindref="compound">PsiRpc</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">outName</parametername>
</parameternamelist>
<parameterdescription>
<para>constant character pointer name of the output queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to format that should be used for formatting output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inName</parametername>
</parameternamelist>
<parameterdescription>
<para>constant character pointer to name of the input queue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to format that should be used for parsing input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="125" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classPsiRpc_1a2dea366d618c566f39549593808a91ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref></type>
        <definition>psiRpc_t PsiRpc::pi</definition>
        <argsstring>()</argsstring>
        <name>pi</name>
        <briefdescription>
<para>Return the <ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> structure. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> structure underlying the class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="133" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classPsiRpc_1a9a24ea2c10ec433ce2571714659e8156" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiRpc::send</definition>
        <argsstring>(int nargs,...)</argsstring>
        <name>send</name>
        <param>
          <type>int</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Format and send a message to an RPC output queue. See rpcSend from <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> for details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nargs</parametername>
</parameternamelist>
<parameterdescription>
<para>int Number of arguments being passed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">...</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments for formatting. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer specifying if the send was succesful. Values &gt;= 0 indicate success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="145" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="145" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classPsiRpc_1a4f66919b86a358644d73c686b9a6b409" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiRpc::recv</definition>
        <argsstring>(int nargs,...)</argsstring>
        <name>recv</name>
        <param>
          <type>int</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Receive and parse a message from an RPC input queue. See rpcRecv from <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> for details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nargs</parametername>
</parameternamelist>
<parameterdescription>
<para>int Number of arguments being passed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">...</parametername>
</parameternamelist>
<parameterdescription>
<para>mixed arguments that should be assigned parameters extracted using the format string. Since these will be assigned, they should be pointers to memory that has already been allocated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer specifying if the receive was succesful. Values &gt;= 0 indicate success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="168" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="168" bodyend="179"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ interface to <ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> functionality. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classPsiRpc" kindref="compound">PsiRpc</ref> class is a basic wrapper around the C <ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> structure and associated functions from the <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> header. It provides the user with C++ style access to basic RPC messaging via IPC queues. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="43">
        <label>PsiRpcServer</label>
        <link refid="classPsiRpcServer"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>PsiRpc</label>
        <link refid="classPsiRpc"/>
      </node>
      <node id="42">
        <label>PsiRpcClient</label>
        <link refid="classPsiRpcClient"/>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="112" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="112" bodyend="180"/>
    <listofallmembers>
      <member refid="classPsiRpc_1a1d955f5b67593d52dc2d058257255865" prot="private" virt="non-virtual"><scope>PsiRpc</scope><name>_pi</name></member>
      <member refid="classPsiRpc_1a2dea366d618c566f39549593808a91ab" prot="public" virt="non-virtual"><scope>PsiRpc</scope><name>pi</name></member>
      <member refid="classPsiRpc_1a59e6a3c10d5d3b8b5ddbad8272c21609" prot="public" virt="non-virtual"><scope>PsiRpc</scope><name>PsiRpc</name></member>
      <member refid="classPsiRpc_1a4f66919b86a358644d73c686b9a6b409" prot="public" virt="non-virtual"><scope>PsiRpc</scope><name>recv</name></member>
      <member refid="classPsiRpc_1a9a24ea2c10ec433ce2571714659e8156" prot="public" virt="non-virtual"><scope>PsiRpc</scope><name>send</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
