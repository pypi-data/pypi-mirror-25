<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPsiInput" kind="class" language="C++" prot="public">
    <compoundname>PsiInput</compoundname>
    <includes refid="PsiInterface_8hpp" local="no">PsiInterface.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classPsiInput_1a7392943147510fd48430b185a30bebbf" prot="private" static="no" mutable="no">
        <type><ref refid="structpsiInput__t" kindref="compound">psiInput_t</ref></type>
        <definition>psiInput_t PsiInput::_pi</definition>
        <argsstring></argsstring>
        <name>_pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="22" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPsiInput_1ac796a2dbddfc6b6aa54841d8c762cc6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PsiInput::PsiInput</definition>
        <argsstring>(const char *name)</argsstring>
        <name>PsiInput</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classPsiInput" kindref="compound">PsiInput</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>constant character pointer to name of input queue. This should be the argument to an input driver in the yaml specification file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="30" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classPsiInput_1a480b3f1424806a23c3a1c77d590eb216" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiInput::recv</definition>
        <argsstring>(char *data, int len)</argsstring>
        <name>recv</name>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Receive a message shorter than PSI_MSG_MAX from the input queue. See psi_recv in <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> for additional details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to allocated buffer where the message should be saved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>int length of the allocated message buffer in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int -1 if message could not be received. Length of the received message if message was received. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="41" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classPsiInput_1a9410879a8e96915adcad5d6ebb5f224c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiInput::recv_nolimit</definition>
        <argsstring>(char **data, int len)</argsstring>
        <name>recv_nolimit</name>
        <param>
          <type>char **</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Receive a message larger than PSI_MSG_MAX from the input queue. See psi_recv_nolimit in <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> for additional details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">data</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to allocated buffer where the message should be saved. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>int length of the allocated message buffer in bytes. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int -1 if message could not be received. Length of the received message if message was received. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="54" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ interface to <ref refid="structpsiInput__t" kindref="compound">psiInput_t</ref> functionality. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classPsiInput" kindref="compound">PsiInput</ref> class is a basic wrapper around the C <ref refid="structpsiInput__t" kindref="compound">psiInput_t</ref> structure and associated functions from the <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> header. It provides the user with C++ style access to basic input via an IPC queue. </para>    </detaileddescription>
    <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="21" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="21" bodyend="57"/>
    <listofallmembers>
      <member refid="classPsiInput_1a7392943147510fd48430b185a30bebbf" prot="private" virt="non-virtual"><scope>PsiInput</scope><name>_pi</name></member>
      <member refid="classPsiInput_1ac796a2dbddfc6b6aa54841d8c762cc6c" prot="public" virt="non-virtual"><scope>PsiInput</scope><name>PsiInput</name></member>
      <member refid="classPsiInput_1a480b3f1424806a23c3a1c77d590eb216" prot="public" virt="non-virtual"><scope>PsiInput</scope><name>recv</name></member>
      <member refid="classPsiInput_1a9410879a8e96915adcad5d6ebb5f224c" prot="public" virt="non-virtual"><scope>PsiInput</scope><name>recv_nolimit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
