<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classPsiRpcClient" kind="class" language="C++" prot="public">
    <compoundname>PsiRpcClient</compoundname>
    <basecompoundref refid="classPsiRpc" prot="public" virt="non-virtual">PsiRpc</basecompoundref>
    <includes refid="PsiInterface_8hpp" local="no">PsiInterface.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classPsiRpcClient_1a77a4dd609c4bd82862bea5fc0651ba02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PsiRpcClient::PsiRpcClient</definition>
        <argsstring>(const char *name, char *outFormat, char *inFormat)</argsstring>
        <name>PsiRpcClient</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>outFormat</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>inFormat</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classPsiRpcClient" kindref="compound">PsiRpcClient</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>constant character pointer name used for input and output queues. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">outFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to format that should be used for formatting output. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">inFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to format that should be used for parsing input. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="229" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="229" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classPsiRpcClient_1a214010682c81e31783a62773f7b9f788" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiRpcClient::call</definition>
        <argsstring>(int nargs,...)</argsstring>
        <name>call</name>
        <param>
          <type>int</type>
          <declname>nargs</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
<para>Send request to an RPC server from the client and wait for a response. See rpcCall in <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> for details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">nargs</parametername>
</parameternamelist>
<parameterdescription>
<para>int Number of arguments being passed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">...</parametername>
</parameternamelist>
<parameterdescription>
<para>mixed arguments that include those that should be formatted using the output format string, followed by those that should be assigned parameters extracted using the input format string. These that will be assigned should be pointers to memory that has already been allocated. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer specifying if the receive was succesful. Values &gt;= 0 indicate success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="245" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="245" bodyend="258"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ interface to <ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> client-side functionality. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classPsiRpcClient" kindref="compound">PsiRpcClient</ref> class is a basic wrapper around the C <ref refid="structpsiRpc__t" kindref="compound">psiRpc_t</ref> structure and associated client-side functions from the <ref refid="PsiInterface_8h_source" kindref="compound">PsiInterface.h</ref> header. It provides the user with C++ style access to basic RPC client operations. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="50">
        <label>PsiRpc</label>
        <link refid="classPsiRpc"/>
      </node>
      <node id="49">
        <label>PsiRpcClient</label>
        <link refid="classPsiRpcClient"/>
        <childnode refid="50" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="52">
        <label>PsiRpc</label>
        <link refid="classPsiRpc"/>
      </node>
      <node id="51">
        <label>PsiRpcClient</label>
        <link refid="classPsiRpcClient"/>
        <childnode refid="52" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="217" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="217" bodyend="260"/>
    <listofallmembers>
      <member refid="classPsiRpcClient_1a214010682c81e31783a62773f7b9f788" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>call</name></member>
      <member refid="classPsiRpc_1a2dea366d618c566f39549593808a91ab" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>pi</name></member>
      <member refid="classPsiRpc_1a59e6a3c10d5d3b8b5ddbad8272c21609" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>PsiRpc</name></member>
      <member refid="classPsiRpcClient_1a77a4dd609c4bd82862bea5fc0651ba02" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>PsiRpcClient</name></member>
      <member refid="classPsiRpc_1a4f66919b86a358644d73c686b9a6b409" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>recv</name></member>
      <member refid="classPsiRpc_1a9a24ea2c10ec433ce2571714659e8156" prot="public" virt="non-virtual"><scope>PsiRpcClient</scope><name>send</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
