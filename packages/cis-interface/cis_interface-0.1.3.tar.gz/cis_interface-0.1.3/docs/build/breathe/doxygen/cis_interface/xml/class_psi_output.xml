<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_psi_output" kind="class" language="C++" prot="public">
    <compoundname>PsiOutput</compoundname>
    <includes refid="_psi_interface_8hpp" local="no">PsiInterface.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_psi_output_1a18e4f13e7bb2525621c3678b29871388" prot="private" static="no" mutable="no">
        <type><ref refid="structpsi_output__t" kindref="compound">psiOutput_t</ref></type>
        <definition>psiOutput_t PsiOutput::_pi</definition>
        <argsstring></argsstring>
        <name>_pi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="69" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_psi_output_1a40a8752bfc87e83bb9671b737f7506aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PsiOutput::PsiOutput</definition>
        <argsstring>(const char *name)</argsstring>
        <name>PsiOutput</name>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="class_psi_output" kindref="compound">PsiOutput</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>constant character pointer to name of output queue. This should be the argument to an output driver in the yaml specification file. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="77" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_psi_output_1a5cdad4b95c12f7ac7dcc8c4a7e7c8104" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiOutput::send</definition>
        <argsstring>(char *data, int len)</argsstring>
        <name>send</name>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send a message smaller than PSI_MSG_MAX to the output queue. If the message is larger than PSI_MSG_MAX an error code will be returned. See psi_send in <ref refid="_psi_interface_8h_source" kindref="compound">PsiInterface.h</ref> for details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to message that should be sent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>int length of message to be sent. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 0 if send succesfull, -1 if send unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="87" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="class_psi_output_1a8cc6c40e56f1d7570d1f1dca477ade5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int PsiOutput::send_nolimit</definition>
        <argsstring>(char *data, int len)</argsstring>
        <name>send_nolimit</name>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Send a message larger than PSI_MSG_MAX to the output queue. See psi_send_nolimit in <ref refid="_psi_interface_8h_source" kindref="compound">PsiInterface.h</ref> for details. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>character pointer to message that should be sent. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">len</parametername>
</parameternamelist>
<parameterdescription>
<para>int length of message to be sent. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int 0 if send succesfull, -1 if send unsuccessful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="98" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C++ interface to <ref refid="structpsi_output__t" kindref="compound">psiOutput_t</ref> functionality. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="class_psi_output" kindref="compound">PsiOutput</ref> class is a basic wrapper around the C <ref refid="structpsi_output__t" kindref="compound">psiOutput_t</ref> structure and associated functions from the <ref refid="_psi_interface_8h_source" kindref="compound">PsiInterface.h</ref> header. It provides the user with C++ style access to basic output via an IPC queue. </para>    </detaileddescription>
    <location file="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" line="68" column="1" bodyfile="/home/ubuntu/langmm/cis_iterface/cis_interface/interface/PsiInterface.hpp" bodystart="68" bodyend="101"/>
    <listofallmembers>
      <member refid="class_psi_output_1a18e4f13e7bb2525621c3678b29871388" prot="private" virt="non-virtual"><scope>PsiOutput</scope><name>_pi</name></member>
      <member refid="class_psi_output_1a40a8752bfc87e83bb9671b737f7506aa" prot="public" virt="non-virtual"><scope>PsiOutput</scope><name>PsiOutput</name></member>
      <member refid="class_psi_output_1a5cdad4b95c12f7ac7dcc8c4a7e7c8104" prot="public" virt="non-virtual"><scope>PsiOutput</scope><name>send</name></member>
      <member refid="class_psi_output_1a8cc6c40e56f1d7570d1f1dca477ade5d" prot="public" virt="non-virtual"><scope>PsiOutput</scope><name>send_nolimit</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
