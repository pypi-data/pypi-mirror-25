
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'IF ELSE ENDIF LCODEDELIM RCODEDELIM LVARDELIM RVARDELIM EQ NE GT LT LEN WS INT WORD QUOTEDSTRING STRINGoutput_list : output\n        output_list : output_list output\n        output : block\n                  | WS\n                  | STRING\n                  | WORD\n                  | QUOTEDSTRING\n                  | INT\n                  | GT\n                  | LT\n                  | EQ\n                  | variable\n        variable : LVARDELIM WORD RVARDELIMblock : if_result output_list else output_list end_if\n        block : if_result else output_list end_if\n        block : if_result output_list end_if\n        if_result : LCODEDELIM WS IF WS WORD WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS WORD WS EQ WS QUOTEDSTRING WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS WORD WS NE WS QUOTEDSTRING WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS word_len WS GT WS cast_int WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS word_len WS LT WS cast_int WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS word_len WS EQ WS cast_int WS RCODEDELIM\n        if_result : LCODEDELIM WS IF WS word_len WS NE WS cast_int WS RCODEDELIM\n        else : LCODEDELIM WS ELSE WS RCODEDELIM\n        end_if : LCODEDELIM WS ENDIF WS RCODEDELIM\n        word_len : WORD LENcast_int : INT'
    
_lr_action_items = {'WS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,22,23,24,25,27,28,29,31,32,33,35,36,39,40,42,44,46,47,48,49,50,51,52,53,60,61,62,63,64,65,66,73,74,75,76,77,78,],[4,4,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,4,21,-2,4,4,26,4,-16,30,4,-13,34,4,-15,37,38,-14,41,43,45,-24,-26,-25,-17,54,55,56,57,58,59,67,68,69,-27,70,71,72,-18,-19,-20,-21,-22,-23,]),'STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,46,47,73,74,75,76,77,78,],[5,5,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,5,-2,5,5,5,-16,5,-13,5,-15,-14,-24,-25,-17,-18,-19,-20,-21,-22,-23,]),'WORD':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,22,23,25,27,29,31,34,35,42,46,47,73,74,75,76,77,78,],[6,6,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,6,20,-2,6,6,6,-16,6,-13,6,-15,39,-14,-24,-25,-17,-18,-19,-20,-21,-22,-23,]),'QUOTEDSTRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,46,47,54,55,73,74,75,76,77,78,],[7,7,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,7,-2,7,7,7,-16,7,-13,7,-15,-14,-24,-25,-17,60,61,-18,-19,-20,-21,-22,-23,]),'INT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,46,47,56,57,58,59,73,74,75,76,77,78,],[8,8,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,8,-2,8,8,8,-16,8,-13,8,-15,-14,-24,-25,-17,63,63,63,63,-18,-19,-20,-21,-22,-23,]),'GT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,45,46,47,73,74,75,76,77,78,],[9,9,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,9,-2,9,9,9,-16,9,-13,9,-15,-14,-24,50,-25,-17,-18,-19,-20,-21,-22,-23,]),'LT':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,45,46,47,73,74,75,76,77,78,],[10,10,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,10,-2,10,10,10,-16,10,-13,10,-15,-14,-24,51,-25,-17,-18,-19,-20,-21,-22,-23,]),'EQ':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,43,45,46,47,73,74,75,76,77,78,],[11,11,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,11,-2,11,11,11,-16,11,-13,11,-15,-14,-24,48,52,-25,-17,-18,-19,-20,-21,-22,-23,]),'LVARDELIM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,46,47,73,74,75,76,77,78,],[14,14,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,14,-2,14,14,14,-16,14,-13,14,-15,-14,-24,-25,-17,-18,-19,-20,-21,-22,-23,]),'LCODEDELIM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,18,22,23,25,27,29,31,35,42,46,47,73,74,75,76,77,78,],[15,15,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,19,-2,24,15,15,-16,32,-13,32,-15,-14,-24,-25,-17,-18,-19,-20,-21,-22,-23,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,16,23,27,31,35,46,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-2,-16,-13,-15,-14,-25,]),'RVARDELIM':([20,],[27,]),'IF':([21,26,30,37,],[28,28,28,28,]),'ELSE':([26,30,],[33,33,]),'ENDIF':([30,37,],[36,36,]),'RCODEDELIM':([38,41,43,67,68,69,70,71,72,],[42,46,47,73,74,75,76,77,78,]),'LEN':([39,],[44,]),'NE':([43,45,],[49,53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'output_list':([0,13,18,22,],[1,17,25,29,]),'output':([0,1,13,17,18,22,25,29,],[2,16,2,16,2,2,16,16,]),'block':([0,1,13,17,18,22,25,29,],[3,3,3,3,3,3,3,3,]),'variable':([0,1,13,17,18,22,25,29,],[12,12,12,12,12,12,12,12,]),'if_result':([0,1,13,17,18,22,25,29,],[13,13,13,13,13,13,13,13,]),'else':([13,17,],[18,22,]),'end_if':([17,25,29,],[23,31,35,]),'word_len':([34,],[40,]),'cast_int':([56,57,58,59,],[62,64,65,66,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> output_list","S'",1,None,None,None),
  ('output_list -> output','output_list',1,'p_output_list_1','parser.py',25),
  ('output_list -> output_list output','output_list',2,'p_output_list_2','parser.py',30),
  ('output -> block','output',1,'p_output','parser.py',35),
  ('output -> WS','output',1,'p_output','parser.py',36),
  ('output -> STRING','output',1,'p_output','parser.py',37),
  ('output -> WORD','output',1,'p_output','parser.py',38),
  ('output -> QUOTEDSTRING','output',1,'p_output','parser.py',39),
  ('output -> INT','output',1,'p_output','parser.py',40),
  ('output -> GT','output',1,'p_output','parser.py',41),
  ('output -> LT','output',1,'p_output','parser.py',42),
  ('output -> EQ','output',1,'p_output','parser.py',43),
  ('output -> variable','output',1,'p_output','parser.py',44),
  ('variable -> LVARDELIM WORD RVARDELIM','variable',3,'p_variable','parser.py',49),
  ('block -> if_result output_list else output_list end_if','block',5,'p_if_else_statement','parser.py',53),
  ('block -> if_result else output_list end_if','block',4,'p_empty_if_else_statement','parser.py',58),
  ('block -> if_result output_list end_if','block',3,'p_if_statement','parser.py',63),
  ('if_result -> LCODEDELIM WS IF WS WORD WS RCODEDELIM','if_result',7,'p_truthy_if','parser.py',68),
  ('if_result -> LCODEDELIM WS IF WS WORD WS EQ WS QUOTEDSTRING WS RCODEDELIM','if_result',11,'p_equality_if','parser.py',73),
  ('if_result -> LCODEDELIM WS IF WS WORD WS NE WS QUOTEDSTRING WS RCODEDELIM','if_result',11,'p_non_equality_if','parser.py',79),
  ('if_result -> LCODEDELIM WS IF WS word_len WS GT WS cast_int WS RCODEDELIM','if_result',11,'p_len_gt_if','parser.py',85),
  ('if_result -> LCODEDELIM WS IF WS word_len WS LT WS cast_int WS RCODEDELIM','if_result',11,'p_len_lt_if','parser.py',90),
  ('if_result -> LCODEDELIM WS IF WS word_len WS EQ WS cast_int WS RCODEDELIM','if_result',11,'p_len_equality_if','parser.py',95),
  ('if_result -> LCODEDELIM WS IF WS word_len WS NE WS cast_int WS RCODEDELIM','if_result',11,'p_len_non_equality_if','parser.py',100),
  ('else -> LCODEDELIM WS ELSE WS RCODEDELIM','else',5,'p_else','parser.py',105),
  ('end_if -> LCODEDELIM WS ENDIF WS RCODEDELIM','end_if',5,'p_end_if','parser.py',110),
  ('word_len -> WORD LEN','word_len',2,'p_word_len','parser.py',115),
  ('cast_int -> INT','cast_int',1,'p_cast_int','parser.py',119),
]
