# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkPhaseAnalysisSoftThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkPhaseAnalysisSoftThresholdImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkPhaseAnalysisSoftThresholdImageFilterPython')
    _itkPhaseAnalysisSoftThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPhaseAnalysisSoftThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkPhaseAnalysisSoftThresholdImageFilterPython
            return _itkPhaseAnalysisSoftThresholdImageFilterPython
        try:
            _mod = imp.load_module('_itkPhaseAnalysisSoftThresholdImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkPhaseAnalysisSoftThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPhaseAnalysisSoftThresholdImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkPhaseAnalysisImageFilterPython
import itkImagePython
import stdcomplexPython
import pyBasePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkVariableLengthVectorPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkImageToImageFilterCommonPython

def itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_New():
  return itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.New()


def itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_New():
  return itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.New()

class itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2(itkPhaseAnalysisImageFilterPython.itkPhaseAnalysisImageFilterVIF2IF2):
    """Proxy of C++ itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_Pointer"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_Pointer"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_Clone(self)


    def SetApplySoftThreshold(self, _arg):
        """SetApplySoftThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self, bool const _arg)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_SetApplySoftThreshold(self, _arg)


    def GetApplySoftThreshold(self):
        """GetApplySoftThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> bool"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetApplySoftThreshold(self)


    def ApplySoftThresholdOn(self):
        """ApplySoftThresholdOn(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_ApplySoftThresholdOn(self)


    def ApplySoftThresholdOff(self):
        """ApplySoftThresholdOff(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_ApplySoftThresholdOff(self)


    def SetNumOfSigmas(self, _arg):
        """SetNumOfSigmas(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self, float const _arg)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_SetNumOfSigmas(self, _arg)


    def GetNumOfSigmas(self):
        """GetNumOfSigmas(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetNumOfSigmas(self)


    def GetMeanAmp(self):
        """GetMeanAmp(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetMeanAmp(self)


    def GetSigmaAmp(self):
        """GetSigmaAmp(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetSigmaAmp(self)


    def GetThreshold(self):
        """GetThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetThreshold(self)


    def GetOutputCosPhase(self):
        """GetOutputCosPhase(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> itkImageF2"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetOutputCosPhase(self)

    __swig_destroy__ = _itkPhaseAnalysisSoftThresholdImageFilterPython.delete_itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 self) -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2

        Create a new object of the class itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.Clone = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_Clone, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.SetApplySoftThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_SetApplySoftThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetApplySoftThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetApplySoftThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.ApplySoftThresholdOn = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_ApplySoftThresholdOn, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.ApplySoftThresholdOff = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_ApplySoftThresholdOff, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.SetNumOfSigmas = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_SetNumOfSigmas, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetNumOfSigmas = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetNumOfSigmas, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetMeanAmp = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetMeanAmp, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetSigmaAmp = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetSigmaAmp, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetOutputCosPhase = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetOutputCosPhase, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2.GetPointer = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_GetPointer, None, itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_swigregister = _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_swigregister
itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_swigregister(itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2)

def itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2___New_orig__():
    """itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2___New_orig__() -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_Pointer"""
    return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2___New_orig__()

def itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_cast(obj):
    """itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_cast(itkLightObject obj) -> itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2"""
    return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF2IF2_cast(obj)

class itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3(itkPhaseAnalysisImageFilterPython.itkPhaseAnalysisImageFilterVIF3IF3):
    """Proxy of C++ itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_Pointer"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_Pointer"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_Clone(self)


    def SetApplySoftThreshold(self, _arg):
        """SetApplySoftThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self, bool const _arg)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_SetApplySoftThreshold(self, _arg)


    def GetApplySoftThreshold(self):
        """GetApplySoftThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> bool"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetApplySoftThreshold(self)


    def ApplySoftThresholdOn(self):
        """ApplySoftThresholdOn(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_ApplySoftThresholdOn(self)


    def ApplySoftThresholdOff(self):
        """ApplySoftThresholdOff(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_ApplySoftThresholdOff(self)


    def SetNumOfSigmas(self, _arg):
        """SetNumOfSigmas(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self, float const _arg)"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_SetNumOfSigmas(self, _arg)


    def GetNumOfSigmas(self):
        """GetNumOfSigmas(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetNumOfSigmas(self)


    def GetMeanAmp(self):
        """GetMeanAmp(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetMeanAmp(self)


    def GetSigmaAmp(self):
        """GetSigmaAmp(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetSigmaAmp(self)


    def GetThreshold(self):
        """GetThreshold(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> float"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetThreshold(self)


    def GetOutputCosPhase(self):
        """GetOutputCosPhase(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> itkImageF3"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetOutputCosPhase(self)

    __swig_destroy__ = _itkPhaseAnalysisSoftThresholdImageFilterPython.delete_itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 self) -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3"""
        return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3

        Create a new object of the class itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.Clone = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_Clone, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.SetApplySoftThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_SetApplySoftThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetApplySoftThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetApplySoftThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.ApplySoftThresholdOn = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_ApplySoftThresholdOn, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.ApplySoftThresholdOff = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_ApplySoftThresholdOff, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.SetNumOfSigmas = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_SetNumOfSigmas, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetNumOfSigmas = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetNumOfSigmas, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetMeanAmp = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetMeanAmp, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetSigmaAmp = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetSigmaAmp, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetThreshold = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetThreshold, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetOutputCosPhase = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetOutputCosPhase, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3.GetPointer = new_instancemethod(_itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_GetPointer, None, itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_swigregister = _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_swigregister
itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_swigregister(itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3)

def itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3___New_orig__():
    """itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3___New_orig__() -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_Pointer"""
    return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3___New_orig__()

def itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_cast(obj):
    """itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_cast(itkLightObject obj) -> itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3"""
    return _itkPhaseAnalysisSoftThresholdImageFilterPython.itkPhaseAnalysisSoftThresholdImageFilterVIF3IF3_cast(obj)



