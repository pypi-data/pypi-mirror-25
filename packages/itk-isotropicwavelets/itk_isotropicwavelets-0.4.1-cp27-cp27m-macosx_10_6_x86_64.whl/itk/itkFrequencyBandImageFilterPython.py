# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkFrequencyBandImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkFrequencyBandImageFilterPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkFrequencyBandImageFilterPython')
    _itkFrequencyBandImageFilterPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFrequencyBandImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkFrequencyBandImageFilterPython
            return _itkFrequencyBandImageFilterPython
        try:
            _mod = imp.load_module('_itkFrequencyBandImageFilterPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkFrequencyBandImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFrequencyBandImageFilterPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageToImageFilterBPython
import itkImagePython
import stdcomplexPython
import pyBasePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkFrequencyBandImageFilterICF3_New():
  return itkFrequencyBandImageFilterICF3.New()


def itkFrequencyBandImageFilterICF2_New():
  return itkFrequencyBandImageFilterICF2.New()

class itkFrequencyBandImageFilterICF2(itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    """Proxy of C++ itkFrequencyBandImageFilterICF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkFrequencyBandImageFilterICF2_Pointer"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkFrequencyBandImageFilterICF2 self) -> itkFrequencyBandImageFilterICF2_Pointer"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_Clone(self)

    ImageTypeHasNumericTraitsCheck = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_ImageTypeHasNumericTraitsCheck

    def GetLowFrequencyThreshold(self):
        """GetLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> double const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetLowFrequencyThreshold(self)


    def SetLowFrequencyThreshold(self, _arg):
        """SetLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, double const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThreshold(self, _arg)


    def SetLowFrequencyThresholdInRadians(self, freq_low_in_radians):
        """SetLowFrequencyThresholdInRadians(itkFrequencyBandImageFilterICF2 self, double const & freq_low_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThresholdInRadians(self, freq_low_in_radians)


    def GetHighFrequencyThreshold(self):
        """GetHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> double const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetHighFrequencyThreshold(self)


    def SetHighFrequencyThreshold(self, _arg):
        """SetHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, double const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThreshold(self, _arg)


    def SetHighFrequencyThresholdInRadians(self, freq_high_in_radians):
        """SetHighFrequencyThresholdInRadians(itkFrequencyBandImageFilterICF2 self, double const & freq_high_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThresholdInRadians(self, freq_high_in_radians)


    def SetFrequencyThresholds(self, freq_low, freq_high):
        """SetFrequencyThresholds(itkFrequencyBandImageFilterICF2 self, double const & freq_low, double const & freq_high)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholds(self, freq_low, freq_high)


    def SetFrequencyThresholdsInRadians(self, freq_low_in_radians, freq_high_in_radians):
        """SetFrequencyThresholdsInRadians(itkFrequencyBandImageFilterICF2 self, double const & freq_low_in_radians, double const & freq_high_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholdsInRadians(self, freq_low_in_radians, freq_high_in_radians)


    def SetPassLowFrequencyThreshold(self, _arg):
        """SetPassLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassLowFrequencyThreshold(self, _arg)


    def GetPassLowFrequencyThreshold(self):
        """GetPassLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassLowFrequencyThreshold(self)


    def PassLowFrequencyThresholdOn(self):
        """PassLowFrequencyThresholdOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOn(self)


    def PassLowFrequencyThresholdOff(self):
        """PassLowFrequencyThresholdOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOff(self)


    def SetPassHighFrequencyThreshold(self, _arg):
        """SetPassHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassHighFrequencyThreshold(self, _arg)


    def GetPassHighFrequencyThreshold(self):
        """GetPassHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassHighFrequencyThreshold(self)


    def PassHighFrequencyThresholdOn(self):
        """PassHighFrequencyThresholdOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOn(self)


    def PassHighFrequencyThresholdOff(self):
        """PassHighFrequencyThresholdOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOff(self)


    def GetPassBand(self):
        """GetPassBand(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassBand(self)


    def PassBandOn(self):
        """PassBandOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOn(self)


    def PassBandOff(self):
        """PassBandOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOff(self)


    def SetPassBand(self, *args):
        """
        SetPassBand(itkFrequencyBandImageFilterICF2 self, bool const _arg)
        SetPassBand(itkFrequencyBandImageFilterICF2 self, bool const pass_low_threshold, bool const pass_high_threshold)
        """
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassBand(self, *args)


    def SetStopBand(self, pass_low_threshold, pass_high_threshold):
        """SetStopBand(itkFrequencyBandImageFilterICF2 self, bool const pass_low_threshold, bool const pass_high_threshold)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetStopBand(self, pass_low_threshold, pass_high_threshold)


    def SetRadialBand(self, _arg):
        """SetRadialBand(itkFrequencyBandImageFilterICF2 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetRadialBand(self, _arg)


    def GetRadialBand(self):
        """GetRadialBand(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetRadialBand(self)


    def RadialBandOn(self):
        """RadialBandOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOn(self)


    def RadialBandOff(self):
        """RadialBandOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOff(self)


    def SetPassNegativeLowFrequencyThreshold(self, _arg):
        """SetPassNegativeLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeLowFrequencyThreshold(self, _arg)


    def GetPassNegativeLowFrequencyThreshold(self):
        """GetPassNegativeLowFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeLowFrequencyThreshold(self)


    def PassNegativeLowFrequencyThresholdOn(self):
        """PassNegativeLowFrequencyThresholdOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOn(self)


    def PassNegativeLowFrequencyThresholdOff(self):
        """PassNegativeLowFrequencyThresholdOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOff(self)


    def SetPassNegativeHighFrequencyThreshold(self, _arg):
        """SetPassNegativeHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeHighFrequencyThreshold(self, _arg)


    def GetPassNegativeHighFrequencyThreshold(self):
        """GetPassNegativeHighFrequencyThreshold(itkFrequencyBandImageFilterICF2 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeHighFrequencyThreshold(self)


    def PassNegativeHighFrequencyThresholdOn(self):
        """PassNegativeHighFrequencyThresholdOn(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOn(self)


    def PassNegativeHighFrequencyThresholdOff(self):
        """PassNegativeHighFrequencyThresholdOff(itkFrequencyBandImageFilterICF2 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOff(self)

    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkFrequencyBandImageFilterICF2"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkFrequencyBandImageFilterICF2 self) -> itkFrequencyBandImageFilterICF2"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICF2

        Create a new object of the class itkFrequencyBandImageFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFrequencyBandImageFilterICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFrequencyBandImageFilterICF2.Clone = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_Clone, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetLowFrequencyThresholdInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThresholdInRadians, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetHighFrequencyThresholdInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThresholdInRadians, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetFrequencyThresholds = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholds, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetFrequencyThresholdsInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholdsInRadians, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetPassLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPassLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassLowFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassLowFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetPassHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPassHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassHighFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassHighFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPassBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassBand, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassBandOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassBandOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetPassBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassBand, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetStopBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetStopBand, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetRadialBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetRadialBand, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetRadialBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetRadialBand, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.RadialBandOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.RadialBandOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetPassNegativeLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPassNegativeLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassNegativeLowFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassNegativeLowFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.SetPassNegativeHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPassNegativeHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassNegativeHighFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.PassNegativeHighFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2.GetPointer = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPointer, None, itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2_swigregister = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_swigregister
itkFrequencyBandImageFilterICF2_swigregister(itkFrequencyBandImageFilterICF2)

def itkFrequencyBandImageFilterICF2___New_orig__():
    """itkFrequencyBandImageFilterICF2___New_orig__() -> itkFrequencyBandImageFilterICF2_Pointer"""
    return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2___New_orig__()

def itkFrequencyBandImageFilterICF2_cast(obj):
    """itkFrequencyBandImageFilterICF2_cast(itkLightObject obj) -> itkFrequencyBandImageFilterICF2"""
    return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_cast(obj)

class itkFrequencyBandImageFilterICF3(itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    """Proxy of C++ itkFrequencyBandImageFilterICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkFrequencyBandImageFilterICF3_Pointer"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkFrequencyBandImageFilterICF3 self) -> itkFrequencyBandImageFilterICF3_Pointer"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_Clone(self)

    ImageTypeHasNumericTraitsCheck = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_ImageTypeHasNumericTraitsCheck

    def GetLowFrequencyThreshold(self):
        """GetLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> double const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetLowFrequencyThreshold(self)


    def SetLowFrequencyThreshold(self, _arg):
        """SetLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, double const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThreshold(self, _arg)


    def SetLowFrequencyThresholdInRadians(self, freq_low_in_radians):
        """SetLowFrequencyThresholdInRadians(itkFrequencyBandImageFilterICF3 self, double const & freq_low_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThresholdInRadians(self, freq_low_in_radians)


    def GetHighFrequencyThreshold(self):
        """GetHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> double const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetHighFrequencyThreshold(self)


    def SetHighFrequencyThreshold(self, _arg):
        """SetHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, double const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThreshold(self, _arg)


    def SetHighFrequencyThresholdInRadians(self, freq_high_in_radians):
        """SetHighFrequencyThresholdInRadians(itkFrequencyBandImageFilterICF3 self, double const & freq_high_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThresholdInRadians(self, freq_high_in_radians)


    def SetFrequencyThresholds(self, freq_low, freq_high):
        """SetFrequencyThresholds(itkFrequencyBandImageFilterICF3 self, double const & freq_low, double const & freq_high)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholds(self, freq_low, freq_high)


    def SetFrequencyThresholdsInRadians(self, freq_low_in_radians, freq_high_in_radians):
        """SetFrequencyThresholdsInRadians(itkFrequencyBandImageFilterICF3 self, double const & freq_low_in_radians, double const & freq_high_in_radians)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholdsInRadians(self, freq_low_in_radians, freq_high_in_radians)


    def SetPassLowFrequencyThreshold(self, _arg):
        """SetPassLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassLowFrequencyThreshold(self, _arg)


    def GetPassLowFrequencyThreshold(self):
        """GetPassLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassLowFrequencyThreshold(self)


    def PassLowFrequencyThresholdOn(self):
        """PassLowFrequencyThresholdOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOn(self)


    def PassLowFrequencyThresholdOff(self):
        """PassLowFrequencyThresholdOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOff(self)


    def SetPassHighFrequencyThreshold(self, _arg):
        """SetPassHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassHighFrequencyThreshold(self, _arg)


    def GetPassHighFrequencyThreshold(self):
        """GetPassHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassHighFrequencyThreshold(self)


    def PassHighFrequencyThresholdOn(self):
        """PassHighFrequencyThresholdOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOn(self)


    def PassHighFrequencyThresholdOff(self):
        """PassHighFrequencyThresholdOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOff(self)


    def GetPassBand(self):
        """GetPassBand(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassBand(self)


    def PassBandOn(self):
        """PassBandOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOn(self)


    def PassBandOff(self):
        """PassBandOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOff(self)


    def SetPassBand(self, *args):
        """
        SetPassBand(itkFrequencyBandImageFilterICF3 self, bool const _arg)
        SetPassBand(itkFrequencyBandImageFilterICF3 self, bool const pass_low_threshold, bool const pass_high_threshold)
        """
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassBand(self, *args)


    def SetStopBand(self, pass_low_threshold, pass_high_threshold):
        """SetStopBand(itkFrequencyBandImageFilterICF3 self, bool const pass_low_threshold, bool const pass_high_threshold)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetStopBand(self, pass_low_threshold, pass_high_threshold)


    def SetRadialBand(self, _arg):
        """SetRadialBand(itkFrequencyBandImageFilterICF3 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetRadialBand(self, _arg)


    def GetRadialBand(self):
        """GetRadialBand(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetRadialBand(self)


    def RadialBandOn(self):
        """RadialBandOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOn(self)


    def RadialBandOff(self):
        """RadialBandOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOff(self)


    def SetPassNegativeLowFrequencyThreshold(self, _arg):
        """SetPassNegativeLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeLowFrequencyThreshold(self, _arg)


    def GetPassNegativeLowFrequencyThreshold(self):
        """GetPassNegativeLowFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeLowFrequencyThreshold(self)


    def PassNegativeLowFrequencyThresholdOn(self):
        """PassNegativeLowFrequencyThresholdOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOn(self)


    def PassNegativeLowFrequencyThresholdOff(self):
        """PassNegativeLowFrequencyThresholdOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOff(self)


    def SetPassNegativeHighFrequencyThreshold(self, _arg):
        """SetPassNegativeHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self, bool const _arg)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeHighFrequencyThreshold(self, _arg)


    def GetPassNegativeHighFrequencyThreshold(self):
        """GetPassNegativeHighFrequencyThreshold(itkFrequencyBandImageFilterICF3 self) -> bool const &"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeHighFrequencyThreshold(self)


    def PassNegativeHighFrequencyThresholdOn(self):
        """PassNegativeHighFrequencyThresholdOn(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOn(self)


    def PassNegativeHighFrequencyThresholdOff(self):
        """PassNegativeHighFrequencyThresholdOff(itkFrequencyBandImageFilterICF3 self)"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOff(self)

    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkFrequencyBandImageFilterICF3"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkFrequencyBandImageFilterICF3 self) -> itkFrequencyBandImageFilterICF3"""
        return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICF3

        Create a new object of the class itkFrequencyBandImageFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFrequencyBandImageFilterICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFrequencyBandImageFilterICF3.Clone = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_Clone, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetLowFrequencyThresholdInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThresholdInRadians, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetHighFrequencyThresholdInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThresholdInRadians, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetFrequencyThresholds = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholds, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetFrequencyThresholdsInRadians = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholdsInRadians, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetPassLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPassLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassLowFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassLowFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetPassHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPassHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassHighFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassHighFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPassBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassBand, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassBandOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassBandOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetPassBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassBand, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetStopBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetStopBand, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetRadialBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetRadialBand, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetRadialBand = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetRadialBand, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.RadialBandOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.RadialBandOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetPassNegativeLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPassNegativeLowFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeLowFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassNegativeLowFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassNegativeLowFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.SetPassNegativeHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPassNegativeHighFrequencyThreshold = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeHighFrequencyThreshold, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassNegativeHighFrequencyThresholdOn = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOn, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.PassNegativeHighFrequencyThresholdOff = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOff, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3.GetPointer = new_instancemethod(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPointer, None, itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3_swigregister = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_swigregister
itkFrequencyBandImageFilterICF3_swigregister(itkFrequencyBandImageFilterICF3)

def itkFrequencyBandImageFilterICF3___New_orig__():
    """itkFrequencyBandImageFilterICF3___New_orig__() -> itkFrequencyBandImageFilterICF3_Pointer"""
    return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3___New_orig__()

def itkFrequencyBandImageFilterICF3_cast(obj):
    """itkFrequencyBandImageFilterICF3_cast(itkLightObject obj) -> itkFrequencyBandImageFilterICF3"""
    return _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_cast(obj)



