Metadata-Version: 1.1
Name: NooLite-F
Version: 0.0.1
Summary: Module to work with NooLite_F (MTRF-64-USB)
Home-page: https://github.com/SergejPr/NooLite_F
Author: Sergey Prytkov
Author-email: sergej.prytkov@gmail.com
License: MIT License

Copyright (c) 2017 Sergey Prytkov

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

Description-Content-Type: UNKNOWN
Description: NooLite-F
        =========
        
        Python module to work with NooLite-F (MTRF-64-USB)
        
        Currently implements base commands:
        
        * on - turn power module on
        * off - turn power module off
        * switch - switch power module state
        * load_preset - execute saved preset in power module
        * read_state - read state from power module
        * set_brightness - set brightness
        
        Each command can accept following parameters:
        
        * channel - channel number to send command. Send command to all power modules assigned with selected channel.
        * broadcast - send command in broadcast mode. If True then send command to all power modules assigned with selected channel simultaneously (default - False)
        * mode - adapter mode which will used for send command. Can be
        
          * nooLite TX - uses for nooLite modules (without feedback)
          * nooLite-F TX - uses for nooLite-F modules (with feedback) (default)
        
        In response for each command returns array which contains command result and module info for each power module assigned with selected channel.
        
        Command result equals True if command send successfully, otherwise False.
        Module info contains information about module: type, firmware version, state (on/off/temporary on), current brightness and bind mode (on/off)::
        
            [
                ( True, <ModuleInfo (0x2e25b90), id: 0x52e9, type: 1, hardware: 3, state: 1, brightness: 1.0, mode: 0>),
                (True, <ModuleInfo (0x2e25a90), id: 0x52e3, type: 1, hardware: 3, state: 1, brightness: 1.0, mode: 0>)
            ]
        
        If command result is False, then module info is None.::
        
            [(False, None)]
        
        Note
        ====
        
        Tested with MTRF-64-USB adapter and SLF-1-300 power modules.
        
        Example
        =======
        
        Example of usage::
        
            noolite = NooLiteF(port="COM3")
            noolite.switch(1)
            noolite.switch(channel=1, broadcast=True)
            noolite.switch(channel=1, broadcast=True, mode=Mode.TX)
        
Keywords: noolite noolite-f noolitef
Platform: osx
Platform: posix
Platform: linux
Platform: windows
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Home Automation
Classifier: Topic :: System :: Hardware
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.6
