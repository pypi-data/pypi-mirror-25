
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'stepleftLBRACKETRBRACKETleftORleftANDleftLPARENRPARENrightNOTleftEQNAME VALUE EQ MATCH IN AND OR LBRACKET RBRACKET LPAREN RPAREN NOT OPTION ATLEASTONE ANY BEFORE_FIRST_TOKEN AFTER_LAST_TOKEN CHUNKstep : single_constraint\n            | LBRACKET constraint_class RBRACKET constraint_class : constraint_class AND constraint_class_part\n            | constraint_class OR constraint_class_part \n            | constraint_class_part constraint_class_part : single_constraint\n                    | LPAREN constraint_class RPAREN  \n                    | NOT constraint_class single_constraint : NAME EQ VALUE \n                          | NAME MATCH VALUE\n                          | NAME IN VALUE'
    
_lr_action_items = {'$end':([1,3,15,18,19,20,],[0,-1,-2,-11,-10,-9,]),'OR':([6,7,8,13,17,18,19,20,21,22,23,],[14,-6,-5,14,-8,-11,-10,-9,-7,-4,-3,]),'RBRACKET':([6,7,8,17,18,19,20,21,22,23,],[15,-6,-5,-8,-11,-10,-9,-7,-4,-3,]),'AND':([6,7,8,13,17,18,19,20,21,22,23,],[16,-6,-5,16,-8,-11,-10,-9,-7,-4,-3,]),'LPAREN':([2,5,9,14,16,],[5,5,5,5,5,]),'MATCH':([4,],[11,]),'EQ':([4,],[12,]),'RPAREN':([7,8,13,17,18,19,20,21,22,23,],[-6,-5,21,-8,-11,-10,-9,-7,-4,-3,]),'LBRACKET':([0,],[2,]),'IN':([4,],[10,]),'VALUE':([10,11,12,],[18,19,20,]),'NAME':([0,2,5,9,14,16,],[4,4,4,4,4,4,]),'NOT':([2,5,9,14,16,],[9,9,9,9,9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'step':([0,],[1,]),'constraint_class':([2,5,9,],[6,13,17,]),'single_constraint':([0,2,5,9,14,16,],[3,7,7,7,7,7,]),'constraint_class_part':([2,5,9,14,16,],[8,8,8,22,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> step","S'",1,None,None,None),
  ('step -> single_constraint','step',1,'p_step','syntactic_step_parser.py',126),
  ('step -> LBRACKET constraint_class RBRACKET','step',3,'p_step','syntactic_step_parser.py',127),
  ('constraint_class -> constraint_class AND constraint_class_part','constraint_class',3,'p_constraint_class','syntactic_step_parser.py',151),
  ('constraint_class -> constraint_class OR constraint_class_part','constraint_class',3,'p_constraint_class','syntactic_step_parser.py',152),
  ('constraint_class -> constraint_class_part','constraint_class',1,'p_constraint_class','syntactic_step_parser.py',153),
  ('constraint_class_part -> single_constraint','constraint_class_part',1,'p_constraint_class_part','syntactic_step_parser.py',180),
  ('constraint_class_part -> LPAREN constraint_class RPAREN','constraint_class_part',3,'p_constraint_class_part','syntactic_step_parser.py',181),
  ('constraint_class_part -> NOT constraint_class','constraint_class_part',2,'p_constraint_class_part','syntactic_step_parser.py',182),
  ('single_constraint -> NAME EQ VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',207),
  ('single_constraint -> NAME MATCH VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',208),
  ('single_constraint -> NAME IN VALUE','single_constraint',3,'p_single_constraint','syntactic_step_parser.py',209),
]
