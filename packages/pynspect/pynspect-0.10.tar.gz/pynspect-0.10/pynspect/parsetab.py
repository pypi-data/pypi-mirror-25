
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'OP_PLUS OP_MINUS OP_TIMES OP_DIVIDE OP_MODULO OP_OR OP_XOR OP_AND OP_NOT OP_EXISTS OP_OR_P OP_XOR_P OP_AND_P OP_LIKE OP_IN OP_IS OP_EQ OP_NE OP_GT OP_GE OP_LT OP_LE COMMA LPAREN RPAREN LBRACK RBRACK IPV4 IPV6 DATETIME INTEGER FLOAT CONSTANT FUNCTION VARIABLEexpression : xor_expression OP_OR expression\n                      | xor_expressionxor_expression : and_expression OP_XOR xor_expression\n                          | and_expressionand_expression : or_p_expression OP_AND and_expression\n                          | or_p_expressionor_p_expression : xor_p_expression OP_OR_P or_p_expression\n                      | xor_p_expressionxor_p_expression : and_p_expression OP_XOR_P xor_p_expression\n                          | and_p_expressionand_p_expression : not_expression OP_AND_P and_p_expression\n                          | not_expressionnot_expression : OP_NOT ex_expression\n                          | ex_expressionex_expression : OP_EXISTS cmp_expression\n                         | cmp_expressioncmp_expression : term OP_LIKE cmp_expression\n                          | term OP_IN cmp_expression\n                          | term OP_IS cmp_expression\n                          | term OP_EQ cmp_expression\n                          | term OP_NE cmp_expression\n                          | term OP_GT cmp_expression\n                          | term OP_GE cmp_expression\n                          | term OP_LT cmp_expression\n                          | term OP_LE cmp_expression\n                          | termterm : factor OP_PLUS term\n                | factor OP_MINUS term\n                | factor OP_TIMES term\n                | factor OP_DIVIDE term\n                | factor OP_MODULO term\n                | factorfactor : IPV4\n                  | IPV6\n                  | DATETIME\n                  | INTEGER\n                  | FLOAT\n                  | VARIABLE\n                  | CONSTANT\n                  | FUNCTION RPAREN\n                  | FUNCTION expression RPAREN\n                  | LBRACK list RBRACK\n                  | LPAREN expression RPARENlist : IPV4\n                | IPV6\n                | DATETIME\n                | INTEGER\n                | FLOAT\n                | VARIABLE\n                | CONSTANT\n                | IPV4 COMMA list\n                | IPV6 COMMA list\n                | DATETIME COMMA list\n                | INTEGER COMMA list\n                | FLOAT COMMA list\n                | VARIABLE COMMA list\n                | CONSTANT COMMA list'
    
_lr_action_items = {'OP_XOR_P':([1,4,5,6,7,8,10,11,12,14,18,20,23,25,52,56,58,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[-39,-37,-14,27,-35,-12,-34,-33,-26,-32,-16,-38,-36,-40,-15,-13,-41,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,]),'CONSTANT':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[1,1,31,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,31,31,31,31,31,31,31,]),'LBRACK':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'OP_TIMES':([1,4,7,10,11,14,20,23,25,58,62,78,],[-39,-37,-35,-34,-33,49,-38,-36,-40,-41,-42,-43,]),'COMMA':([29,31,32,33,34,35,36,],[61,63,64,65,66,67,68,]),'RPAREN':([1,2,3,4,5,6,7,8,10,11,12,14,17,18,19,20,21,23,25,26,46,52,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-39,-6,25,-37,-14,-10,-35,-12,-34,-33,-26,-32,-8,-16,-2,-38,-4,-36,-40,58,78,-15,-13,-5,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,-7,-1,-3,]),'OP_LE':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,42,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'OP_LT':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,43,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'OP_LIKE':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,37,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'OP_GE':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,38,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'FUNCTION':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'OP_DIVIDE':([1,4,7,10,11,14,20,23,25,58,62,78,],[-39,-37,-35,-34,-33,48,-38,-36,-40,-41,-42,-43,]),'OP_EQ':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,40,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'LPAREN':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'OP_OR':([1,2,4,5,6,7,8,10,11,12,14,17,18,19,20,21,23,25,52,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,],[-39,-6,-37,-14,-10,-35,-12,-34,-33,-26,-32,-8,-16,54,-38,-4,-36,-40,-15,-13,-5,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,-7,-3,]),'OP_MINUS':([1,4,7,10,11,14,20,23,25,58,62,78,],[-39,-37,-35,-34,-33,50,-38,-36,-40,-41,-42,-43,]),'FLOAT':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[4,4,34,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,34,34,34,34,34,34,34,]),'OP_EXISTS':([0,3,13,22,24,27,28,53,54,55,],[16,16,16,16,16,16,16,16,16,16,]),'OP_IN':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,45,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'OP_PLUS':([1,4,7,10,11,14,20,23,25,58,62,78,],[-39,-37,-35,-34,-33,51,-38,-36,-40,-41,-42,-43,]),'OP_MODULO':([1,4,7,10,11,14,20,23,25,58,62,78,],[-39,-37,-35,-34,-33,47,-38,-36,-40,-41,-42,-43,]),'IPV4':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[11,11,29,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,29,29,29,29,29,29,29,]),'OP_AND':([1,2,4,5,6,7,8,10,11,12,14,17,18,20,23,25,52,56,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,],[-39,24,-37,-14,-10,-35,-12,-34,-33,-26,-32,-8,-16,-38,-36,-40,-15,-13,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,-7,]),'OP_XOR':([1,2,4,5,6,7,8,10,11,12,14,17,18,20,21,23,25,52,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,],[-39,-6,-37,-14,-10,-35,-12,-34,-33,-26,-32,-8,-16,-38,55,-36,-40,-15,-13,-5,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,-7,]),'VARIABLE':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[20,20,32,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,32,32,32,32,32,32,32,]),'$end':([1,2,4,5,6,7,8,10,11,12,14,15,17,18,19,20,21,23,25,52,56,57,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,],[-39,-6,-37,-14,-10,-35,-12,-34,-33,-26,-32,0,-8,-16,-2,-38,-4,-36,-40,-15,-13,-5,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,-7,-1,-3,]),'DATETIME':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[7,7,35,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,35,35,35,35,35,35,35,]),'OP_GT':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,44,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'RBRACK':([29,30,31,32,33,34,35,36,87,88,89,90,91,92,93,],[-44,62,-50,-49,-47,-48,-46,-45,-51,-57,-56,-54,-55,-53,-52,]),'OP_OR_P':([1,4,5,6,7,8,10,11,12,14,17,18,20,23,25,52,56,58,59,60,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[-39,-37,-14,-10,-35,-12,-34,-33,-26,-32,53,-16,-38,-36,-40,-15,-13,-41,-9,-11,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,]),'OP_NOT':([0,3,13,24,27,28,53,54,55,],[22,22,22,22,22,22,22,22,22,]),'OP_IS':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,41,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'IPV6':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[10,10,36,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,36,36,36,36,36,36,36,]),'OP_AND_P':([1,4,5,7,8,10,11,12,14,18,20,23,25,52,56,58,62,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[-39,-37,-14,-35,28,-34,-33,-26,-32,-16,-38,-36,-40,-15,-13,-41,-42,-17,-23,-21,-20,-19,-25,-24,-22,-18,-43,-31,-30,-29,-28,-27,]),'OP_NE':([1,4,7,10,11,12,14,20,23,25,58,62,78,79,80,81,82,83,],[-39,-37,-35,-34,-33,39,-32,-38,-36,-40,-41,-42,-43,-31,-30,-29,-28,-27,]),'INTEGER':([0,3,9,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,61,63,64,65,66,67,68,],[23,23,33,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,33,33,33,33,33,33,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'or_p_expression':([0,3,13,24,53,54,55,],[2,2,2,2,84,2,2,]),'and_expression':([0,3,13,24,54,55,],[21,21,21,57,21,21,]),'ex_expression':([0,3,13,22,24,27,28,53,54,55,],[5,5,5,56,5,5,5,5,5,5,]),'xor_expression':([0,3,13,54,55,],[19,19,19,19,86,]),'term':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,79,80,81,82,83,12,12,12,]),'list':([9,61,63,64,65,66,67,68,],[30,87,88,89,90,91,92,93,]),'factor':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'not_expression':([0,3,13,24,27,28,53,54,55,],[8,8,8,8,8,8,8,8,8,]),'cmp_expression':([0,3,13,16,22,24,27,28,37,38,39,40,41,42,43,44,45,53,54,55,],[18,18,18,52,18,18,18,18,69,70,71,72,73,74,75,76,77,18,18,18,]),'expression':([0,3,13,54,],[15,26,46,85,]),'xor_p_expression':([0,3,13,24,27,53,54,55,],[17,17,17,17,59,17,17,17,]),'and_p_expression':([0,3,13,24,27,28,53,54,55,],[6,6,6,6,6,60,6,6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> xor_expression OP_OR expression','expression',3,'p_expression','gparser.py',254),
  ('expression -> xor_expression','expression',1,'p_expression','gparser.py',255),
  ('xor_expression -> and_expression OP_XOR xor_expression','xor_expression',3,'p_xor_expression','gparser.py',263),
  ('xor_expression -> and_expression','xor_expression',1,'p_xor_expression','gparser.py',264),
  ('and_expression -> or_p_expression OP_AND and_expression','and_expression',3,'p_and_expression','gparser.py',272),
  ('and_expression -> or_p_expression','and_expression',1,'p_and_expression','gparser.py',273),
  ('or_p_expression -> xor_p_expression OP_OR_P or_p_expression','or_p_expression',3,'p_or_p_expression','gparser.py',281),
  ('or_p_expression -> xor_p_expression','or_p_expression',1,'p_or_p_expression','gparser.py',282),
  ('xor_p_expression -> and_p_expression OP_XOR_P xor_p_expression','xor_p_expression',3,'p_xor_p_expression','gparser.py',290),
  ('xor_p_expression -> and_p_expression','xor_p_expression',1,'p_xor_p_expression','gparser.py',291),
  ('and_p_expression -> not_expression OP_AND_P and_p_expression','and_p_expression',3,'p_and_p_expression','gparser.py',300),
  ('and_p_expression -> not_expression','and_p_expression',1,'p_and_p_expression','gparser.py',301),
  ('not_expression -> OP_NOT ex_expression','not_expression',2,'p_not_expression','gparser.py',309),
  ('not_expression -> ex_expression','not_expression',1,'p_not_expression','gparser.py',310),
  ('ex_expression -> OP_EXISTS cmp_expression','ex_expression',2,'p_ex_expression','gparser.py',318),
  ('ex_expression -> cmp_expression','ex_expression',1,'p_ex_expression','gparser.py',319),
  ('cmp_expression -> term OP_LIKE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',328),
  ('cmp_expression -> term OP_IN cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',329),
  ('cmp_expression -> term OP_IS cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',330),
  ('cmp_expression -> term OP_EQ cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',331),
  ('cmp_expression -> term OP_NE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',332),
  ('cmp_expression -> term OP_GT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',333),
  ('cmp_expression -> term OP_GE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',334),
  ('cmp_expression -> term OP_LT cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',335),
  ('cmp_expression -> term OP_LE cmp_expression','cmp_expression',3,'p_cmp_expression','gparser.py',336),
  ('cmp_expression -> term','cmp_expression',1,'p_cmp_expression','gparser.py',337),
  ('term -> factor OP_PLUS term','term',3,'p_term','gparser.py',345),
  ('term -> factor OP_MINUS term','term',3,'p_term','gparser.py',346),
  ('term -> factor OP_TIMES term','term',3,'p_term','gparser.py',347),
  ('term -> factor OP_DIVIDE term','term',3,'p_term','gparser.py',348),
  ('term -> factor OP_MODULO term','term',3,'p_term','gparser.py',349),
  ('term -> factor','term',1,'p_term','gparser.py',350),
  ('factor -> IPV4','factor',1,'p_factor','gparser.py',358),
  ('factor -> IPV6','factor',1,'p_factor','gparser.py',359),
  ('factor -> DATETIME','factor',1,'p_factor','gparser.py',360),
  ('factor -> INTEGER','factor',1,'p_factor','gparser.py',361),
  ('factor -> FLOAT','factor',1,'p_factor','gparser.py',362),
  ('factor -> VARIABLE','factor',1,'p_factor','gparser.py',363),
  ('factor -> CONSTANT','factor',1,'p_factor','gparser.py',364),
  ('factor -> FUNCTION RPAREN','factor',2,'p_factor','gparser.py',365),
  ('factor -> FUNCTION expression RPAREN','factor',3,'p_factor','gparser.py',366),
  ('factor -> LBRACK list RBRACK','factor',3,'p_factor','gparser.py',367),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','gparser.py',368),
  ('list -> IPV4','list',1,'p_list','gparser.py',379),
  ('list -> IPV6','list',1,'p_list','gparser.py',380),
  ('list -> DATETIME','list',1,'p_list','gparser.py',381),
  ('list -> INTEGER','list',1,'p_list','gparser.py',382),
  ('list -> FLOAT','list',1,'p_list','gparser.py',383),
  ('list -> VARIABLE','list',1,'p_list','gparser.py',384),
  ('list -> CONSTANT','list',1,'p_list','gparser.py',385),
  ('list -> IPV4 COMMA list','list',3,'p_list','gparser.py',386),
  ('list -> IPV6 COMMA list','list',3,'p_list','gparser.py',387),
  ('list -> DATETIME COMMA list','list',3,'p_list','gparser.py',388),
  ('list -> INTEGER COMMA list','list',3,'p_list','gparser.py',389),
  ('list -> FLOAT COMMA list','list',3,'p_list','gparser.py',390),
  ('list -> VARIABLE COMMA list','list',3,'p_list','gparser.py',391),
  ('list -> CONSTANT COMMA list','list',3,'p_list','gparser.py',392),
]
