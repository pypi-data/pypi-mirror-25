
variables:
  repos:
    # TODO: maybe all branches should be the latest/fixed tag/release
    rapydo:
      branch: master
      online_url: https://github.com/rapydo/core.git
      path: .
      if: true
    utils:
      branch: master
      online_url: https://github.com/rapydo/utils.git
      path: utilities
      if: true
    develop:
      branch: master
      online_url: https://github.com/rapydo/develop.git
      path: dev
      if: $$rapydodeveloper
    backend:
      branch: master
      online_url: https://github.com/rapydo/http-api.git
      path: backend
      if: true
    build-templates:
      branch: master
      online_url: https://github.com/rapydo/build-templates.git
      path: builds_base
      if: true
    frontend:
      branch: master
      # online_url: https://github.com/rapydo/node-ui.git
      online_url: https://github.com/rapydo/angularjs-on-flask.git
      path: frontend
      if: $$frontend
  backend:
    # branch: master
    credentials:
      username: user@nomail.org
      password: test
      roles:
        user: normal_user
        internal: staff_user
        admin: admin_root
        default: normal_user
  frontend:
    env:
      some: var
    enable: false
    branch: master
  # js:
  #   load_timeout: '800'

  # The list of files to be considered
  composers:
    backend:
      file: backend
      base: True
      # extension: $$shortyaml
      path: $$baseconf
      mandatory: True
      if: true
    frontend:
      file: frontend
      base: True
      path: $$baseconf
      mandatory: False
      if: $$frontend
    commons:
      file: commons
      base: False
      path: $$customconf
      mandatory: False
      if: True
    mode:
      file: $$mode
      base: False
      path: $$customconf
      mandatory: True
      if: True

  env:
    # COMPOSE_PROJECT_NAME: $PLACEHOLDER
    # PROJECT_DOMAIN: myserver.mydomain.dev  # deprecated
    API_MAIN_ENDPOINT: status
    PYTHON_MAIN_FILE: __main__
    # DB_SUBNET: 172.1.0.0
    JWT_APP_SECRETS: /jwt_tokens
    ALCHEMY_HOST: psqldb.dockerized.io
    ALCHEMY_PORT: 5432
    GRAPHDB_HOST: matrix.dockerized.io
    GRAPHDB_BOLT_PORT: 7687
    IRODS_HOST: rodserver.dockerized.io
    IRODS_PORT: 1247
    MONGO_HOST: mongo.dockerized.io
    MONGO_PORT: 27017
    FLASK_HOST: apiserver.dockerized.io
    FLASK_DEFAULT_PORT: 5000
    CELERY_BROKER_HOST: broker.dockerized.io
    CELERY_BROKER: RABBIT
    CELERY_BROKER_PORT: 4369
    PROXY_HOST: myproxy.dockerized.io
    PROXY_DEV_PORT: 80
    PROXY_PROD_PORT: 443
    LETSENCRYPT_MODE: --staging
    FULL_JWT: true
    SMTP_HOST: smtp.dockerized.io

    GRAPHDB_EXTERNAL: 0
    CELERY_EXTERNAL: 0
    IRODS_EXTERNAL: 0

    AUTH_REGISTER_FAILED_LOGIN: False
    AUTH_FORCE_FIRST_PASSWORD_CHANGE: False
    AUTH_VERIFY_PASSWORD_STRENGTH: False
    AUTH_MAX_PASSWORD_VALIDITY: 0
    AUTH_DISABLE_UNUSED_CREDENTIALS_AFTER: 0
    AUTH_MAX_LOGIN_ATTEMPTS: 0
    AUTH_SECOND_FACTOR_AUTHENTICATION: None

project:
  name: rapydo
  title: REST HTTP-API server with Python, Flask and Docker
  version: v0.1
  description: No description yet

tags:
  specifications: JSON with SWAGGER standards for any REST client
  base: endpoints for base operations
  helpers: tools for checking status and privileges
  authentication: log in and out of the REST API
  profiles: set and view profile for current credentials
  open_sessions: manage authorized sessions
