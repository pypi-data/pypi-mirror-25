# This file is autogenerated by edgy.project code generator.
# All changes will be overwritten.

import os
from setuptools import setup, find_packages

root_dir = os.path.dirname(os.path.abspath(__file__))

tolines = lambda c: list(filter(None, map(lambda s: s.strip(), c.split('\n'))))

def read(filename, flt=None):
    try:
        with open(filename) as f:
            content = f.read().strip()
            return flt(content) if callable(flt) else content
    except FileNotFoundError:
        return ''

# Py3 compatibility hacks, borrowed from IPython.
try:
    execfile
except NameError:
    def execfile(fname, globs, locs=None):
        locs = locs or globs
        exec(compile(open(fname).read(), fname, "exec"), globs, locs)

version_ns = {}
try:
    execfile(os.path.join(root_dir, '{{ setup['name'].replace('.', '/') }}/_version.py'), version_ns)
except FileNotFoundError:
    version = 'dev'
else:
    version = version_ns.get('__version__', 'dev')

setup(
    {% for k, v in setup.items() -%}
        {{ k }} = {{ v | pprint }},{{ '\n    ' }}
    {%- endfor -%}
    version = version,
    long_description = read('README.rst'),
    classifiers = read('classifiers.txt', tolines),
    packages = find_packages(exclude=['ez_setup', 'example', 'test']),
    include_package_data = True,
    {% if data_files -%}
        data_files = {{ data_files | pprint }},{{ '\n    ' }}
    {%- endif -%}
    {% if install_requires -%}
        install_requires = {{ install_requires | pprint }},{{ '\n    ' }}
    {%- endif -%}
    {% if extras_require -%}
        extras_require = {{ extras_require | pprint }},{{ '\n    ' }}
    {%- endif -%}
    {% if entry_points -%}
        entry_points = {{ entry_points | pprint }},{{ '\n    ' }}
    {%- endif -%}
    url = {{ url | pprint }},
    download_url = {{ download_url | pprint }}.format(version=version),
)
