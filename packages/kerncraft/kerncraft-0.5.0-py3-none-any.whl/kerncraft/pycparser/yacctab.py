
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON statement  labeled_statement : CASE constant_expression COLON statement  labeled_statement : DEFAULT COLON statement  selection_statement : IF LPAREN expression RPAREN statement  selection_statement : IF LPAREN expression RPAREN statement ELSE statement  selection_statement : SWITCH LPAREN expression RPAREN statement  iteration_statement : WHILE LPAREN expression RPAREN statement  iteration_statement : DO statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'EQ':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,270,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-244,-240,-238,-239,-237,270,-236,-234,270,-242,-243,-235,270,270,-233,-245,270,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'_COMPLEX':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[1,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,1,-29,-96,-100,-115,1,1,-60,-103,1,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,1,-86,-90,-89,-87,1,-88,1,-82,1,1,-61,-130,-131,1,-92,-160,1,1,-30,1,-83,-70,1,1,1,-137,1,1,1,-140,-128,-161,-302,-148,1,-36,1,1,-35,-71,-192,-193,-74,-77,-78,-73,1,-75,-72,-76,-194,1,1,-126,-127,-138,-132,-129,-149,-150,1,1,-31,1,1,1,-34,1,1,-196,-209,-211,-212,-208,-195,1,-133,-134,-139,-33,1,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'UNSIGNED':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[2,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,2,-29,-96,-100,-115,2,2,-60,-103,2,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,2,-86,-90,-89,-87,2,-88,2,-82,2,2,-61,-130,-131,2,-92,-160,2,2,-30,2,-83,-70,2,2,2,-137,2,2,2,-140,-128,-161,-302,-148,2,-36,2,2,-35,-71,-192,-193,-74,-77,-78,-73,2,-75,-72,-76,-194,2,2,-126,-127,-138,-132,-129,-149,-150,2,2,-31,2,2,2,-34,2,2,-196,-209,-211,-212,-208,-195,2,-133,-134,-139,-33,2,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'AUTO':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,42,43,44,45,47,48,49,51,52,53,54,55,59,60,61,63,64,67,70,74,76,79,81,85,86,87,91,92,93,100,114,123,130,131,133,134,151,152,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,256,260,261,290,312,330,332,351,352,354,357,361,364,367,369,370,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[9,-107,-109,-114,-104,9,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,9,-52,-101,-215,-117,9,-116,-102,9,-29,-96,-100,-115,9,9,-60,-103,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-301,-146,-147,-53,-69,9,-90,-89,-87,9,-88,9,-82,9,-61,-130,-131,-92,9,-30,9,-83,-70,9,-302,-148,-36,9,9,-35,-71,-192,-193,-74,-77,-78,-73,9,-75,-72,-76,-194,-132,-149,-150,-31,-34,9,9,-196,-209,-211,-212,-208,-195,9,-133,-134,-33,9,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'CONTINUE':([17,55,59,64,134,151,221,223,224,227,229,231,233,236,239,240,242,243,351,352,354,357,360,361,363,364,437,441,442,443,444,477,478,479,482,494,495,498,509,513,514,516,518,519,520,],[-68,-81,-301,-69,218,-302,218,-192,-193,-74,-77,-78,-73,218,-75,-72,-76,-194,-196,-209,-211,-212,218,-208,218,-195,-210,-197,218,-199,-207,218,-198,218,218,-202,-203,-200,218,-204,218,-201,-206,218,-205,]),'COMMA':([1,2,3,4,9,10,14,15,18,19,21,22,23,24,26,28,30,32,33,34,38,42,43,46,47,48,49,51,52,53,60,61,63,70,72,73,74,75,76,78,79,81,83,84,92,93,96,97,99,100,101,102,103,104,107,108,109,114,115,116,117,118,119,123,124,132,142,145,146,147,148,150,151,152,154,156,157,161,162,163,164,168,169,170,172,173,174,175,180,184,185,186,187,188,190,191,192,193,195,196,197,199,200,201,204,205,206,207,208,220,228,230,247,248,252,253,254,256,257,258,259,260,261,262,263,264,266,269,289,290,292,293,294,295,310,311,312,316,317,320,321,334,335,339,349,350,353,369,370,372,376,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,399,401,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417,427,429,434,435,439,440,445,448,449,450,452,456,458,459,465,466,467,468,469,473,474,475,483,486,487,489,490,492,493,500,503,504,505,510,512,],[-107,-109,-114,-104,-93,-112,-98,-105,-113,-99,-52,-101,-215,-117,-116,-102,-29,-96,-100,-115,-103,-97,-106,-303,-111,-94,-108,-110,-95,-91,-146,-147,-53,-90,125,-37,-89,-118,-87,-120,-156,-88,-157,-54,-130,-131,143,-122,-124,-92,-27,-28,-160,-158,-154,150,-151,-303,-169,-288,202,-164,203,-30,-55,-156,-128,-161,-159,150,150,-152,-302,-148,-265,-292,-297,-230,-289,-299,-279,-216,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-36,-2,-167,-182,-1,-45,-168,-166,-56,-184,-35,-119,-38,-171,-121,-213,359,-288,-126,371,-143,-127,-141,-132,-129,-123,-125,-149,-150,-155,-251,-229,-153,-257,-298,-31,-255,-254,-256,-300,-303,359,-34,-274,-273,-183,-57,-165,-170,428,-44,-43,359,-133,-134,-145,-33,-244,-240,359,-238,-239,-237,-246,-236,-234,-247,-242,-243,-235,-249,-250,-233,-245,-248,-241,-217,455,-182,-181,-281,359,-272,-271,-270,-269,-268,-286,460,-32,-187,-189,-191,-185,-172,-174,-39,-42,359,-214,359,359,-142,-144,-258,-252,-266,-267,-51,-50,-186,-188,-190,-173,-41,-40,-231,502,-287,-46,-49,-175,359,-282,-275,-48,-47,359,-276,]),'INT_CONST_DEC':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,162,-303,162,-303,162,162,-161,162,-302,162,-261,162,-264,162,162,162,-262,-263,-259,162,-260,162,162,-260,-303,-28,162,-303,162,162,-192,-193,-74,-77,-78,-73,162,162,-75,-72,-76,-194,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,-220,-226,-223,-224,-228,-227,-222,-218,-219,162,-221,-225,162,162,-260,-303,162,162,-11,162,-12,162,-260,162,-196,-209,-211,-212,162,162,162,-208,162,-195,162,162,162,162,162,-28,162,-303,-260,-303,-176,-210,-197,162,-199,-207,162,162,162,-303,162,162,-260,162,-11,162,162,162,-198,162,162,162,-202,-203,162,-200,162,-303,162,162,-204,162,-201,-206,162,-205,]),'RPAREN':([1,2,3,4,9,10,14,15,18,19,21,22,23,24,26,28,30,32,33,34,38,42,43,46,47,48,49,51,52,53,60,61,63,67,69,70,73,74,76,81,84,92,93,100,101,102,103,104,113,114,115,116,117,118,119,120,122,123,124,126,130,142,145,146,151,152,154,156,157,161,162,163,164,168,169,170,172,173,174,175,180,184,185,186,187,188,190,191,192,193,195,196,197,198,199,200,201,204,206,215,216,220,228,247,253,256,257,260,261,263,269,289,290,292,293,294,295,309,310,311,312,316,317,318,320,321,324,325,326,327,328,330,332,333,334,335,349,350,356,369,370,375,376,377,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,401,402,403,404,406,407,408,409,410,411,412,413,414,415,416,417,421,422,425,434,435,439,440,445,448,452,456,458,459,465,466,467,468,469,474,475,483,484,485,487,489,490,493,496,500,503,504,505,507,508,511,512,515,517,],[-107,-109,-114,-104,-93,-112,-98,-105,-113,-99,-52,-101,-215,-117,-116,-102,-29,-96,-100,-115,-103,-97,-106,-303,-111,-94,-108,-110,-95,-91,-146,-147,-53,-303,123,-90,-37,-89,-87,-88,-54,-130,-131,-92,-27,-28,-160,-158,190,-303,-169,-288,-162,-164,-18,-17,204,-30,-55,206,-303,-128,-161,-159,-302,-148,-265,-292,-297,-230,-289,-299,-279,-216,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-36,-2,-167,-182,-1,-45,-168,-303,-166,-56,-184,-35,-38,349,350,-213,-14,-126,-127,-132,-129,-149,-150,-251,-257,-298,-31,-255,-254,-256,-300,400,-303,404,-34,-274,-273,410,-183,-57,-182,416,417,-23,-24,-303,-303,-163,-165,-170,-44,-43,-13,-133,-134,451,-33,452,-244,-240,-238,-239,-237,-246,-236,-234,-247,-242,-243,-235,-249,-250,-233,-245,-248,-241,454,-217,-182,-181,-303,-281,-272,-271,-270,-269,-268,-286,459,-32,-187,-189,-191,-185,465,466,469,-39,-42,477,-214,479,482,-258,-252,-266,-267,-51,-50,-186,-188,-190,-41,-40,-231,500,-283,-287,-46,-49,506,-303,-282,-275,-48,-47,514,-303,-284,-276,519,-285,]),'OREQUAL':([116,151,154,156,157,162,163,164,169,170,172,173,174,175,180,185,186,187,188,230,263,269,289,292,293,294,295,316,317,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,-289,-299,-279,-291,-294,-280,-277,300,-278,-296,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'TYPEDEF':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,42,43,44,45,47,48,49,51,52,53,54,55,59,60,61,63,64,67,70,74,76,79,81,85,86,87,91,92,93,100,114,123,130,131,133,134,151,152,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,256,260,261,290,312,330,332,351,352,354,357,361,364,367,369,370,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[42,-107,-109,-114,-104,42,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,42,-52,-101,-215,-117,42,-116,-102,42,-29,-96,-100,-115,42,42,-60,-103,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-301,-146,-147,-53,-69,42,-90,-89,-87,42,-88,42,-82,42,-61,-130,-131,-92,42,-30,42,-83,-70,42,-302,-148,-36,42,42,-35,-71,-192,-193,-74,-77,-78,-73,42,-75,-72,-76,-194,-132,-149,-150,-31,-34,42,42,-196,-209,-211,-212,-208,-195,42,-133,-134,-33,42,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'AND':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,116,127,129,134,144,145,149,151,153,154,156,157,158,159,160,161,162,163,164,166,167,169,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,189,194,209,210,212,213,214,219,221,223,224,227,229,230,231,233,234,236,239,240,242,243,250,263,265,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,316,317,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,400,404,406,407,408,409,410,418,419,420,424,428,430,437,441,442,443,444,446,451,452,453,456,457,458,459,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,500,502,503,508,509,512,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,181,-303,-288,181,-303,181,181,-161,181,-302,181,-265,-292,-297,-261,181,-264,276,-289,-299,-279,181,181,-291,-294,181,-280,-277,-251,-278,-262,-263,-296,-259,181,-260,-232,-290,-295,-253,-293,181,181,-260,-303,-28,181,-303,181,181,-192,-193,-74,-77,-288,-78,-73,181,181,-75,-72,-76,-194,181,-251,181,181,-257,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,181,-298,181,-255,-254,-256,-300,-220,-226,-223,-224,-228,-227,-222,-218,-219,181,-221,-225,181,-274,-273,181,-260,-303,181,181,-11,181,-12,181,-260,181,-196,-209,-211,-212,181,181,181,-208,181,-195,181,181,181,181,-244,-240,-238,-239,-237,-246,-236,-234,276,-242,-243,-235,276,276,-233,-245,276,-241,181,-281,-272,-271,-270,-269,-268,-28,181,-303,-260,-303,-176,-210,-197,181,-199,-207,181,181,-258,181,-252,-303,-266,-267,181,181,-260,181,-11,181,181,181,-198,181,181,181,-202,-203,181,-200,181,-282,-303,-275,181,181,-276,-204,181,-201,-206,181,-205,]),'DO':([17,55,59,64,134,151,221,223,224,227,229,231,233,236,239,240,242,243,351,352,354,357,360,361,363,364,437,441,442,443,444,477,478,479,482,494,495,498,509,513,514,516,518,519,520,],[-68,-81,-301,-69,221,-302,221,-192,-193,-74,-77,-78,-73,221,-75,-72,-76,-194,-196,-209,-211,-212,221,-208,221,-195,-210,-197,221,-199,-207,221,-198,221,221,-202,-203,-200,221,-204,221,-201,-206,221,-205,]),'ELSE':([17,64,151,227,229,231,233,239,240,242,351,352,354,357,361,437,441,443,444,478,494,495,498,513,516,518,520,],[-68,-69,-302,-74,-77,-78,-73,-75,-72,-76,-196,-209,-211,-212,-208,-210,-197,-199,-207,-198,-202,-203,509,-204,-201,-206,-205,]),'GT':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,281,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,281,-240,-238,-239,-237,281,-236,-234,281,-242,-243,-235,281,281,-233,281,281,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'OR':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,279,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-244,-240,-238,-239,-237,-246,-236,-234,-247,-242,-243,-235,279,279,-233,-245,-248,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'VOID':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[19,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,19,-29,-96,-100,-115,19,19,-60,-103,19,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,19,-86,-90,-89,-87,19,-88,19,-82,19,19,-61,-130,-131,19,-92,-160,19,19,-30,19,-83,-70,19,19,19,-137,19,19,19,-140,-128,-161,-302,-148,19,-36,19,19,-35,-71,-192,-193,-74,-77,-78,-73,19,-75,-72,-76,-194,19,19,-126,-127,-138,-132,-129,-149,-150,19,19,-31,19,19,19,-34,19,19,-196,-209,-211,-212,-208,-195,19,-133,-134,-139,-33,19,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'FLOAT':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[15,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,15,-29,-96,-100,-115,15,15,-60,-103,15,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,15,-86,-90,-89,-87,15,-88,15,-82,15,15,-61,-130,-131,15,-92,-160,15,15,-30,15,-83,-70,15,15,15,-137,15,15,15,-140,-128,-161,-302,-148,15,-36,15,15,-35,-71,-192,-193,-74,-77,-78,-73,15,-75,-72,-76,-194,15,15,-126,-127,-138,-132,-129,-149,-150,15,15,-31,15,15,15,-34,15,15,-196,-209,-211,-212,-208,-195,15,-133,-134,-139,-33,15,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'LSHIFTEQUAL':([116,151,154,156,157,162,163,164,169,170,172,173,174,175,180,185,186,187,188,230,263,269,289,292,293,294,295,316,317,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,-289,-299,-279,-291,-294,-280,-277,307,-278,-296,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'RSHIFT':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,273,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,273,273,-238,-239,-237,273,-236,-234,273,273,273,-235,273,273,-233,273,273,273,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'RESTRICT':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,51,52,53,54,55,59,60,61,63,64,66,67,70,74,76,79,81,85,86,87,91,92,93,94,100,102,103,110,112,114,123,129,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,212,214,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,329,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,418,420,437,441,443,444,478,494,495,498,513,516,518,520,],[26,-107,-109,-114,-104,26,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,26,-52,-101,-215,-117,26,-116,-102,26,-29,-96,-100,-115,26,26,-60,-103,-97,-106,-66,-62,26,-111,-94,-108,-110,-95,-91,-65,-81,-301,-146,-147,-53,-69,26,26,-90,-89,-87,26,-88,26,-82,26,-61,-130,-131,26,-92,26,-160,26,26,26,-30,26,26,-83,-70,26,26,26,-137,26,26,26,-140,-128,-161,-302,-148,26,-36,26,26,-35,-71,26,26,-192,-193,-74,-77,-78,-73,26,-75,-72,-76,-194,26,26,-126,-127,-138,-132,-129,-149,-150,26,26,-31,26,26,26,-34,26,26,26,-196,-209,-211,-212,-208,-195,26,-133,-134,-139,-33,26,-32,26,26,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'RETURN':([17,55,59,64,134,151,221,223,224,227,229,231,233,236,239,240,242,243,351,352,354,357,360,361,363,364,437,441,442,443,444,477,478,479,482,494,495,498,509,513,514,516,518,519,520,],[-68,-81,-301,-69,219,-302,219,-192,-193,-74,-77,-78,-73,219,-75,-72,-76,-194,-196,-209,-211,-212,219,-208,219,-195,-210,-197,219,-199,-207,219,-198,219,219,-202,-203,-200,219,-204,219,-201,-206,219,-205,]),'TYPEID':([0,1,2,3,4,6,8,9,10,11,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,71,74,76,77,79,81,85,86,87,90,91,92,93,94,100,101,102,103,104,114,121,123,125,130,131,133,134,135,136,137,138,139,140,141,142,143,145,146,151,152,182,190,193,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,312,314,315,330,332,351,352,354,357,361,364,367,369,370,371,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[23,-107,-109,-114,-104,-303,-67,-93,-112,61,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,73,-29,-136,-96,-100,-115,23,23,-60,-103,93,23,-97,-106,-66,-62,-303,-111,-94,-108,-135,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,23,-86,-90,73,-89,-87,73,23,-88,23,-82,73,23,-61,-130,-131,23,-92,-27,-28,-160,-158,196,23,-30,73,23,-83,-70,23,23,23,-137,73,23,23,-140,-128,73,-161,-159,-302,-148,23,-36,196,23,23,-35,-71,-192,-193,-74,-77,-78,-73,23,-75,-72,-76,-194,23,23,-126,-127,-138,-132,-129,-149,-150,23,23,-31,23,23,-34,406,408,23,23,-196,-209,-211,-212,-208,-195,23,-133,-134,73,-139,-33,23,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'SWITCH':([17,55,59,64,134,151,221,223,224,227,229,231,233,236,239,240,242,243,351,352,354,357,360,361,363,364,437,441,442,443,444,477,478,479,482,494,495,498,509,513,514,516,518,519,520,],[-68,-81,-301,-69,226,-302,226,-192,-193,-74,-77,-78,-73,226,-75,-72,-76,-194,-196,-209,-211,-212,226,-208,226,-195,-210,-197,226,-199,-207,226,-198,226,226,-202,-203,-200,226,-204,226,-201,-206,226,-205,]),'ELLIPSIS':([202,],[333,]),'MINUSMINUS':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,116,127,129,134,144,145,149,151,153,154,156,157,158,159,160,162,163,164,166,167,169,170,171,172,173,175,176,177,180,181,182,183,185,186,187,188,189,194,209,210,212,213,214,219,221,223,224,227,229,230,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,295,296,297,298,299,300,301,302,303,304,305,306,307,313,316,317,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,404,406,407,408,409,410,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,458,459,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,500,502,503,508,509,512,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,166,-303,-288,166,-303,166,166,-161,166,-302,166,-265,-292,-297,-261,166,-264,-289,-299,-279,166,166,-291,-294,166,-280,-277,-278,-262,-263,-296,-259,166,-260,-290,-295,316,-293,166,166,-260,-303,-28,166,-303,166,166,-192,-193,-74,-77,-288,-78,-73,166,166,-75,-72,-76,-194,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-298,166,-300,-220,-226,-223,-224,-228,-227,-222,-218,-219,166,-221,-225,166,-274,-273,166,-260,-303,166,166,-11,166,-12,166,-260,166,-196,-209,-211,-212,166,166,166,-208,166,-195,166,166,166,166,166,-281,-272,-271,-270,-269,-268,-28,166,-303,-260,-303,-176,-210,-197,166,-199,-207,166,166,166,-303,-266,-267,166,166,-260,166,-11,166,166,166,-198,166,166,166,-202,-203,166,-200,166,-282,-303,-275,166,166,-276,-204,166,-201,-206,166,-205,]),'PLUSPLUS':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,116,127,129,134,144,145,149,151,153,154,156,157,158,159,160,162,163,164,166,167,169,170,171,172,173,175,176,177,180,181,182,183,185,186,187,188,189,194,209,210,212,213,214,219,221,223,224,227,229,230,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,295,296,297,298,299,300,301,302,303,304,305,306,307,313,316,317,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,404,406,407,408,409,410,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,458,459,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,500,502,503,508,509,512,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,167,-303,-288,167,-303,167,167,-161,167,-302,167,-265,-292,-297,-261,167,-264,-289,-299,-279,167,167,-291,-294,167,-280,-277,-278,-262,-263,-296,-259,167,-260,-290,-295,317,-293,167,167,-260,-303,-28,167,-303,167,167,-192,-193,-74,-77,-288,-78,-73,167,167,-75,-72,-76,-194,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,-298,167,-300,-220,-226,-223,-224,-228,-227,-222,-218,-219,167,-221,-225,167,-274,-273,167,-260,-303,167,167,-11,167,-12,167,-260,167,-196,-209,-211,-212,167,167,167,-208,167,-195,167,167,167,167,167,-281,-272,-271,-270,-269,-268,-28,167,-303,-260,-303,-176,-210,-197,167,-199,-207,167,167,167,-303,-266,-267,167,167,-260,167,-11,167,167,167,-198,167,167,167,-202,-203,167,-200,167,-282,-303,-275,167,167,-276,-204,167,-201,-206,167,-205,]),'LE':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,288,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,288,-240,-238,-239,-237,288,-236,-234,288,-242,-243,-235,288,288,-233,288,288,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'CONST':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,51,52,53,54,55,59,60,61,63,64,66,67,70,74,76,79,81,85,86,87,91,92,93,94,100,102,103,110,112,114,123,129,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,212,214,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,329,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,418,420,437,441,443,444,478,494,495,498,513,516,518,520,],[34,-107,-109,-114,-104,34,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,34,-52,-101,-215,-117,34,-116,-102,34,-29,-96,-100,-115,34,34,-60,-103,-97,-106,-66,-62,34,-111,-94,-108,-110,-95,-91,-65,-81,-301,-146,-147,-53,-69,34,34,-90,-89,-87,34,-88,34,-82,34,-61,-130,-131,34,-92,34,-160,34,34,34,-30,34,34,-83,-70,34,34,34,-137,34,34,34,-140,-128,-161,-302,-148,34,-36,34,34,-35,-71,34,34,-192,-193,-74,-77,-78,-73,34,-75,-72,-76,-194,34,34,-126,-127,-138,-132,-129,-149,-150,34,34,-31,34,34,34,-34,34,34,34,-196,-209,-211,-212,-208,-195,34,-133,-134,-139,-33,34,-32,34,34,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'LPAREN':([0,1,2,3,4,6,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,36,37,38,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,68,70,71,73,74,76,77,81,84,87,90,91,92,93,100,101,102,103,104,110,111,112,114,116,123,124,125,127,129,133,134,138,142,143,144,145,146,149,151,152,153,154,156,157,158,159,160,162,163,164,166,167,169,170,171,172,173,175,176,177,178,180,181,182,183,185,186,187,188,189,190,193,194,196,198,200,201,204,206,209,210,211,212,213,214,219,221,223,224,226,227,229,230,231,233,234,236,238,239,240,241,242,243,244,247,250,253,256,257,260,261,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,313,316,317,318,320,321,323,324,329,331,336,337,341,343,345,347,348,349,350,351,352,354,357,358,359,360,361,363,364,366,367,368,369,370,371,374,376,400,401,403,404,406,407,408,409,410,413,414,415,416,417,418,419,420,424,428,430,434,435,437,438,441,442,443,444,446,451,453,457,458,459,460,461,463,464,465,466,467,468,469,471,472,474,475,476,477,478,479,481,482,489,490,494,495,496,498,499,500,502,503,504,505,508,509,512,513,514,516,518,519,520,],[27,-107,-109,-114,-104,-303,-67,-93,-112,27,-63,-98,-105,-64,-68,-113,-99,-303,67,-101,-215,-117,-303,-116,27,-102,77,-29,-96,-100,-115,27,-60,-103,27,-97,-106,-66,-62,-303,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,67,-69,-84,-303,-86,-90,77,-37,-89,-87,77,-88,130,77,27,-61,-130,-131,-92,-27,-28,-160,-158,-28,182,-303,198,-288,-30,130,77,182,-303,-70,182,77,-128,77,182,-161,-159,265,-302,-148,182,-265,-292,-297,-261,268,-264,-289,-299,-279,291,291,-291,-294,265,-280,-277,-278,-262,-263,308,-296,-259,182,-260,-290,-295,318,-293,182,-36,198,182,-45,198,330,332,-35,-38,-260,-303,-71,-28,182,-303,182,182,-192,-193,358,-74,-77,-288,-78,-73,265,182,366,-75,-72,367,-76,-194,368,-126,265,-127,-132,-129,-149,-150,182,182,265,265,182,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,-298,-31,182,-300,-220,-226,-223,-224,-228,-227,-222,-218,-219,182,-221,-225,403,-34,182,-274,-273,182,332,330,-260,198,-303,182,265,-11,182,-12,182,-260,182,-44,-43,-196,-209,-211,-212,182,182,182,-208,182,-195,182,182,182,-133,-134,77,265,-33,265,403,403,-281,-272,-271,-270,-269,-268,-32,-187,-189,-191,-185,-28,182,-303,-260,-303,-176,-39,-42,-210,476,-197,182,-199,-207,182,265,265,-303,-266,-267,182,182,-260,182,-51,-50,-186,-188,-190,-11,182,-41,-40,182,182,-198,182,182,182,-46,-49,-202,-203,182,-200,182,-282,-303,-275,-48,-47,182,182,-276,-204,182,-201,-206,182,-205,]),'ID':([0,1,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,31,32,33,34,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,66,67,68,70,71,74,76,77,81,87,90,91,92,93,100,101,102,103,104,105,106,110,111,112,114,125,127,129,130,133,134,138,142,143,144,145,146,149,150,151,152,153,158,159,160,166,167,171,176,177,181,182,183,189,193,194,198,203,209,210,211,212,213,214,219,221,223,224,227,229,231,233,234,236,237,239,240,242,243,247,250,253,256,257,260,261,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,314,315,318,323,324,329,330,331,336,337,341,343,344,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,369,370,371,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,455,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,501,502,508,509,513,514,516,518,519,520,],[30,-107,-109,-114,-104,-303,-67,-93,-112,60,30,-63,-98,-105,-64,-68,-113,-99,-303,-101,-215,-117,-303,-116,30,-102,30,-136,-96,-100,-115,30,-60,-103,92,30,-97,-106,-66,-62,-303,-111,-94,-108,-135,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,107,-69,-84,-303,116,-86,-90,30,-89,-87,30,-88,30,30,-61,-130,-131,-92,-27,-28,-160,-158,107,107,-28,116,-303,30,30,116,-303,116,-70,230,30,-128,30,116,-161,-159,116,107,-302,-148,116,-261,116,-264,116,116,116,-262,-263,-259,116,-260,116,30,116,30,116,-260,-303,-71,-28,116,-303,116,230,-192,-193,-74,-77,-78,-73,116,230,365,-75,-72,-76,-194,-126,116,-127,-132,-129,-149,-150,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,-220,-226,-223,-224,-228,-227,-222,-218,-219,116,-221,-225,116,407,409,116,-260,30,-303,116,116,116,-11,116,-12,116,116,-260,116,-196,-209,-211,-212,116,116,230,-208,230,-195,116,116,116,-133,-134,30,116,116,-28,116,-303,-260,-303,-176,-210,-197,230,-199,-207,116,116,116,116,-303,116,116,-260,116,-11,116,116,230,-198,230,116,230,-202,-203,116,-200,116,116,-303,116,230,-204,230,-201,-206,230,-205,]),'GE':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,280,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,280,-240,-238,-239,-237,280,-236,-234,280,-242,-243,-235,280,280,-233,280,280,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'STRING_LITERAL':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,157,158,159,160,164,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,157,-303,157,-303,157,157,-161,157,-302,157,-297,-261,157,-264,289,157,157,157,-262,-263,-259,157,-260,157,157,-260,-303,-28,157,-303,157,157,-192,-193,-74,-77,-78,-73,157,157,-75,-72,-76,-194,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,-298,157,-220,-226,-223,-224,-228,-227,-222,-218,-219,157,-221,-225,157,157,-260,-303,157,157,-11,157,-12,157,-260,157,-196,-209,-211,-212,157,157,157,-208,157,-195,157,157,157,157,157,-28,157,-303,-260,-303,-176,-210,-197,157,-199,-207,157,157,157,-303,157,157,-260,157,-11,157,157,157,-198,157,157,157,-202,-203,157,-200,157,-303,157,157,-204,157,-201,-206,157,-205,]),'_BOOL':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[33,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,33,-29,-96,-100,-115,33,33,-60,-103,33,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,33,-86,-90,-89,-87,33,-88,33,-82,33,33,-61,-130,-131,33,-92,-160,33,33,-30,33,-83,-70,33,33,33,-137,33,33,33,-140,-128,-161,-302,-148,33,-36,33,33,-35,-71,-192,-193,-74,-77,-78,-73,33,-75,-72,-76,-194,33,33,-126,-127,-138,-132,-129,-149,-150,33,33,-31,33,33,33,-34,33,33,-196,-209,-211,-212,-208,-195,33,-133,-134,-139,-33,33,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'RBRACKET':([24,26,34,66,101,103,110,111,116,129,145,151,154,155,156,157,161,162,163,164,165,168,169,170,172,173,174,175,179,180,183,184,185,186,187,188,194,212,213,220,263,264,267,269,289,292,293,294,295,316,317,319,322,323,329,331,346,347,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,404,405,406,407,408,409,410,418,419,423,424,426,433,436,440,452,456,458,459,462,463,483,488,491,500,503,510,512,],[-117,-116,-115,-303,-27,-160,-28,-303,-288,-303,-161,-302,-265,-4,-292,-297,-230,-289,-299,-279,290,-216,-291,-294,-280,-277,-251,-278,-3,-296,312,-232,-290,-295,-253,-293,-303,-28,-303,-213,-251,-229,376,-257,-298,-255,-254,-256,-300,-274,-273,413,414,415,-303,-303,434,435,-244,-240,-238,-239,-237,-246,-236,-234,-247,-242,-243,-235,-249,-250,-233,-245,-248,-241,-217,-281,458,-272,-271,-270,-269,-268,-28,-303,467,468,470,474,475,-214,-258,-252,-266,-267,489,490,-231,504,505,-282,-275,517,-276,]),'OFFSETOF':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,178,-303,178,-303,178,178,-161,178,-302,178,-261,178,-264,178,178,178,-262,-263,-259,178,-260,178,178,-260,-303,-28,178,-303,178,178,-192,-193,-74,-77,-78,-73,178,178,-75,-72,-76,-194,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,-220,-226,-223,-224,-228,-227,-222,-218,-219,178,-221,-225,178,178,-260,-303,178,178,-11,178,-12,178,-260,178,-196,-209,-211,-212,178,178,178,-208,178,-195,178,178,178,178,178,-28,178,-303,-260,-303,-176,-210,-197,178,-199,-207,178,178,178,-303,178,178,-260,178,-11,178,178,178,-198,178,178,178,-202,-203,178,-200,178,-303,178,178,-204,178,-201,-206,178,-205,]),'DIVIDE':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,278,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,278,278,278,278,278,278,278,-234,278,278,278,-235,278,278,-233,278,278,278,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'INT':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[38,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,38,-29,-96,-100,-115,38,38,-60,-103,38,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,38,-86,-90,-89,-87,38,-88,38,-82,38,38,-61,-130,-131,38,-92,-160,38,38,-30,38,-83,-70,38,38,38,-137,38,38,38,-140,-128,-161,-302,-148,38,-36,38,38,-35,-71,-192,-193,-74,-77,-78,-73,38,-75,-72,-76,-194,38,38,-126,-127,-138,-132,-129,-149,-150,38,38,-31,38,38,38,-34,38,38,-196,-209,-211,-212,-208,-195,38,-133,-134,-139,-33,38,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'LNOT':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,160,-303,160,-303,160,160,-161,160,-302,160,-261,160,-264,160,160,160,-262,-263,-259,160,-260,160,160,-260,-303,-28,160,-303,160,160,-192,-193,-74,-77,-78,-73,160,160,-75,-72,-76,-194,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-220,-226,-223,-224,-228,-227,-222,-218,-219,160,-221,-225,160,160,-260,-303,160,160,-11,160,-12,160,-260,160,-196,-209,-211,-212,160,160,160,-208,160,-195,160,160,160,160,160,-28,160,-303,-260,-303,-176,-210,-197,160,-199,-207,160,160,160,-303,160,160,-260,160,-11,160,160,160,-198,160,160,160,-202,-203,160,-200,160,-303,160,160,-204,160,-201,-206,160,-205,]),'INT_CONST_BIN':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,156,-303,156,-303,156,156,-161,156,-302,156,-261,156,-264,156,156,156,-262,-263,-259,156,-260,156,156,-260,-303,-28,156,-303,156,156,-192,-193,-74,-77,-78,-73,156,156,-75,-72,-76,-194,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,-220,-226,-223,-224,-228,-227,-222,-218,-219,156,-221,-225,156,156,-260,-303,156,156,-11,156,-12,156,-260,156,-196,-209,-211,-212,156,156,156,-208,156,-195,156,156,156,156,156,-28,156,-303,-260,-303,-176,-210,-197,156,-199,-207,156,156,156,-303,156,156,-260,156,-11,156,156,156,-198,156,156,156,-202,-203,156,-200,156,-303,156,156,-204,156,-201,-206,156,-205,]),'BREAK':([17,55,59,64,134,151,221,223,224,227,229,231,233,236,239,240,242,243,351,352,354,357,360,361,363,364,437,441,442,443,444,477,478,479,482,494,495,498,509,513,514,516,518,519,520,],[-68,-81,-301,-69,232,-302,232,-192,-193,-74,-77,-78,-73,232,-75,-72,-76,-194,-196,-209,-211,-212,232,-208,232,-195,-210,-197,232,-199,-207,232,-198,232,232,-202,-203,-200,232,-204,232,-201,-206,232,-205,]),'LONG':([0,1,2,3,4,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,70,74,76,79,81,85,86,87,90,91,92,93,94,100,103,114,121,123,130,131,133,134,135,136,137,138,139,140,141,142,145,151,152,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,247,253,255,256,257,260,261,265,268,290,291,308,310,312,330,332,351,352,354,357,361,364,367,369,370,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[4,-107,-109,-114,-104,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,4,-29,-96,-100,-115,4,4,-60,-103,4,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,4,-86,-90,-89,-87,4,-88,4,-82,4,4,-61,-130,-131,4,-92,-160,4,4,-30,4,-83,-70,4,4,4,-137,4,4,4,-140,-128,-161,-302,-148,4,-36,4,4,-35,-71,-192,-193,-74,-77,-78,-73,4,-75,-72,-76,-194,4,4,-126,-127,-138,-132,-129,-149,-150,4,4,-31,4,4,4,-34,4,4,-196,-209,-211,-212,-208,-195,4,-133,-134,-139,-33,4,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'SEMI':([0,1,2,3,4,5,6,8,9,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,32,33,34,36,37,38,41,42,43,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,63,64,65,68,70,72,73,74,75,76,78,79,80,81,82,83,84,87,90,91,92,93,94,95,96,97,98,99,100,116,123,124,132,133,134,135,136,137,138,139,141,142,151,152,154,156,157,161,162,163,164,168,169,170,172,173,174,175,180,184,185,186,187,188,190,204,205,206,207,208,211,218,219,220,221,222,223,224,225,227,228,229,230,231,232,233,236,239,240,242,243,245,246,247,248,249,251,252,253,254,255,256,257,258,259,260,261,263,264,269,289,290,292,293,294,295,312,316,317,349,350,351,352,353,354,356,357,360,361,363,364,365,367,369,370,372,373,376,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,398,404,406,407,408,409,410,413,427,434,435,437,440,441,442,443,444,446,447,449,450,452,456,458,459,473,474,475,477,478,479,480,481,482,483,494,495,497,498,500,503,506,509,512,513,514,516,518,519,520,],[44,-107,-109,-114,-104,55,-303,-67,-93,-112,-63,-98,-105,-64,-68,-113,-99,-303,-52,-101,-215,-117,-303,-116,-102,-303,-29,-96,-100,-115,44,-60,-103,-303,-97,-106,-66,-62,-111,-94,-108,-110,-95,-91,-65,-81,-10,-85,-9,-301,-146,-147,-53,-69,-84,-86,-90,-20,-37,-89,-118,-87,-120,-156,-19,-88,-79,-157,-54,-303,-303,-61,-130,-131,141,-15,-16,-122,-80,-124,-92,-288,-30,-55,-156,-70,-303,141,141,-137,-303,141,-140,-128,-302,-148,-265,-292,-297,-230,-289,-299,-279,-216,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-36,-35,-119,-38,-171,-121,-71,352,354,-213,-303,357,-192,-193,-13,-74,-14,-77,-288,-78,361,-73,-303,-75,-72,-76,-194,141,141,-126,-26,-25,373,-143,-127,-141,-138,-132,-129,-123,-125,-149,-150,-251,-229,-257,-298,-31,-255,-254,-256,-300,-34,-274,-273,-44,-43,-196,-209,437,-211,-13,-212,-303,-208,-303,-195,444,-303,-133,-134,-145,-139,-33,-244,-240,-238,-239,-237,-246,-236,-234,-247,-242,-243,-235,-249,-250,-233,-245,-248,-241,-217,-281,-272,-271,-270,-269,-268,-32,-172,-39,-42,-210,-214,-197,-303,-199,-207,-303,481,-142,-144,-258,-252,-266,-267,-173,-41,-40,-303,-198,-303,496,-303,-303,-231,-202,-203,508,-200,-282,-275,513,-303,-276,-204,-303,-201,-206,-303,-205,]),'HEX_FLOAT_CONST':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,170,-303,170,-303,170,170,-161,170,-302,170,-261,170,-264,170,170,170,-262,-263,-259,170,-260,170,170,-260,-303,-28,170,-303,170,170,-192,-193,-74,-77,-78,-73,170,170,-75,-72,-76,-194,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,-220,-226,-223,-224,-228,-227,-222,-218,-219,170,-221,-225,170,170,-260,-303,170,170,-11,170,-12,170,-260,170,-196,-209,-211,-212,170,170,170,-208,170,-195,170,170,170,170,170,-28,170,-303,-260,-303,-176,-210,-197,170,-199,-207,170,170,170,-303,170,170,-260,170,-11,170,170,170,-198,170,170,170,-202,-203,170,-200,170,-303,170,170,-204,170,-201,-206,170,-205,]),'WCHAR_CONST':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,180,-303,180,-303,180,180,-161,180,-302,180,-261,180,-264,180,180,180,-262,-263,-259,180,-260,180,180,-260,-303,-28,180,-303,180,180,-192,-193,-74,-77,-78,-73,180,180,-75,-72,-76,-194,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-220,-226,-223,-224,-228,-227,-222,-218,-219,180,-221,-225,180,180,-260,-303,180,180,-11,180,-12,180,-260,180,-196,-209,-211,-212,180,180,180,-208,180,-195,180,180,180,180,180,-28,180,-303,-260,-303,-176,-210,-197,180,-199,-207,180,180,180,-303,180,180,-260,180,-11,180,180,180,-198,180,180,180,-202,-203,180,-200,180,-303,180,180,-204,180,-201,-206,180,-205,]),'LBRACE':([11,17,21,30,31,35,40,50,55,59,60,61,63,64,79,85,86,88,89,92,93,123,127,128,131,134,144,151,190,204,210,221,223,224,227,229,231,233,236,239,240,242,243,290,312,337,341,343,351,352,354,357,360,361,363,364,376,400,413,428,430,437,441,442,443,444,451,452,454,457,471,472,477,478,479,482,494,495,498,502,509,513,514,516,518,519,520,],[59,-68,-52,-29,-136,-303,59,-135,-81,-301,59,59,-53,-69,-303,-8,-82,59,-7,59,59,-30,59,59,-83,59,59,-302,-36,-35,-303,59,-192,-193,-74,-77,-78,-73,59,-75,-72,-76,-194,-31,-34,-11,59,-12,-196,-209,-211,-212,59,-208,59,-195,-33,59,-32,-303,-176,-210,-197,59,-199,-207,59,59,59,-303,-11,59,59,-198,59,59,-202,-203,-200,-303,59,-204,59,-201,-206,59,-205,]),'PPPRAGMASTR':([17,],[64,]),'XOR':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,287,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-244,-240,-238,-239,-237,-246,-236,-234,287,-242,-243,-235,287,287,-233,-245,-248,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'MODEQUAL':([116,151,154,156,157,162,163,164,169,170,172,173,174,175,180,185,186,187,188,230,263,269,289,292,293,294,295,316,317,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,-289,-299,-279,-291,-294,-280,-277,302,-278,-296,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'LT':([116,151,154,156,157,161,162,163,164,169,170,172,173,174,175,180,184,185,186,187,188,230,263,269,289,292,293,294,295,316,317,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,404,406,407,408,409,410,452,456,458,459,500,503,512,],[-288,-302,-265,-292,-297,271,-289,-299,-279,-291,-294,-280,-277,-251,-278,-296,-232,-290,-295,-253,-293,-288,-251,-257,-298,-255,-254,-256,-300,-274,-273,271,-240,-238,-239,-237,271,-236,-234,271,-242,-243,-235,271,271,-233,271,271,-241,-281,-272,-271,-270,-269,-268,-258,-252,-266,-267,-282,-275,-276,]),'SIZEOF':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,127,129,134,144,145,149,151,153,158,159,160,166,167,171,176,177,181,182,183,189,194,209,210,212,213,214,219,221,223,224,227,229,231,233,234,236,239,240,242,243,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,296,297,298,299,300,301,302,303,304,305,306,307,313,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,400,418,419,420,424,428,430,437,441,442,443,444,446,451,453,457,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,502,508,509,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,159,-303,159,-303,159,159,-161,159,-302,159,-261,159,-264,159,159,159,-262,-263,-259,159,-260,159,159,-260,-303,-28,159,-303,159,159,-192,-193,-74,-77,-78,-73,159,159,-75,-72,-76,-194,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-220,-226,-223,-224,-228,-227,-222,-218,-219,159,-221,-225,159,159,-260,-303,159,159,-11,159,-12,159,-260,159,-196,-209,-211,-212,159,159,159,-208,159,-195,159,159,159,159,159,-28,159,-303,-260,-303,-176,-210,-197,159,-199,-207,159,159,159,-303,159,159,-260,159,-11,159,159,159,-198,159,159,159,-202,-203,159,-200,159,-303,159,159,-204,159,-201,-206,159,-205,]),'ENUM':([0,6,8,9,13,14,16,17,20,21,24,25,26,30,32,34,35,36,37,41,42,44,45,48,52,54,55,56,57,58,59,63,64,65,67,68,79,85,86,90,91,94,103,121,123,130,131,133,134,135,136,137,139,140,141,145,151,182,190,198,202,204,211,223,224,227,229,231,233,236,239,240,242,243,245,246,255,265,268,290,291,308,312,330,332,351,352,354,357,361,364,367,373,376,403,413,437,441,443,444,478,494,495,498,513,516,518,520,],[11,-303,-67,-93,-63,-98,-64,-68,-303,-52,-117,-303,-116,-29,-96,-115,11,11,-60,11,-97,-66,-62,-94,-95,-65,-81,-10,-85,-9,-301,-53,-69,-84,11,-86,11,11,-82,11,-61,11,-160,11,-30,11,-83,-70,11,11,11,-137,11,11,-140,-161,-302,11,-36,11,11,-35,-71,-192,-193,-74,-77,-78,-73,11,-75,-72,-76,-194,11,11,-138,11,11,-31,11,11,-34,11,11,-196,-209,-211,-212,-208,-195,11,-139,-33,11,-32,-210,-197,-199,-207,-198,-202,-203,-200,-204,-201,-206,-205,]),'PLUS':([17,24,26,34,55,59,64,66,101,102,103,110,111,112,116,127,129,134,144,145,149,151,153,154,156,157,158,159,160,161,162,163,164,166,167,169,170,171,172,173,174,175,176,177,180,181,182,183,184,185,186,187,188,189,194,209,210,212,213,214,219,221,223,224,227,229,230,231,233,234,236,239,240,242,243,250,263,265,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,313,316,317,318,323,329,331,336,337,341,343,345,347,348,351,352,354,357,358,359,360,361,363,364,366,367,368,374,378,379,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,400,404,406,407,408,409,410,418,419,420,424,428,430,437,441,442,443,444,446,451,452,453,456,457,458,459,460,461,463,464,471,472,476,477,478,479,481,482,494,495,496,498,499,500,502,503,508,509,512,513,514,516,518,519,520,],[-68,-117,-116,-115,-81,-301,-69,-303,-27,-28,-160,-28,158,-303,-288,158,-303,158,158,-161,158,-302,158,-265,-292,-297,-261,158,-264,277,-289,-299,-279,158,158,-291,-294,158,-280,-277,-251,-278,-262,-263,-296,-259,158,-260,-232,-290,-295,-253,-293,158,158,-260,-303,-28,158,-303,158,158,-192,-193,-74,-77,-288,-78,-73,158,158,-75,-72,-76,-194,158,-251,158,158,-257,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,-298,158,-255,-254,-256,-300,-220,-226,-223,-224,-228,-227,-222,-218,-219,158,-221,-225,158,-274,-273,158,-260,-303,158,158,-11,158,-12,158,-260,158,-196,-209,-211,-212,158,158,158,-208,158,-195,158,158,158,158,277,277,277,277,-237,277,-236,-234,277,277,277,-235,277,277,-233,277,277,277,158,-281,-272,-271,-270,-269,-268,-28,158,-303,-260,-303,-176,-210,-197,158,-199,-207,158,158,-258,158,-252,-303,-266,-267,158,158,-260,158,-11,158,158,158,-198,158,158,158,-202,-203,158,-200,158,-282,-303,-275,158,158,-276,-204,158,-201,-206,158,-205,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'block_item_list_opt':([134,],[217,]),'type_specifier_no_typeid':([0,29,35,36,41,67,79,85,87,90,94,114,121,130,134,135,136,138,139,140,182,198,202,236,245,246,265,268,291,308,310,330,332,367,403,],[3,70,3,3,3,3,3,3,70,3,3,70,3,3,3,3,3,247,3,3,3,3,3,3,3,3,3,3,3,3,247,3,3,3,3,]),'type_qualifier_list':([46,66,94,112,129,135,136,139,182,214,245,246,265,268,291,308,329,420,],[102,110,140,102,212,140,140,140,140,102,140,140,140,140,140,140,418,102,]),'external_declaration':([0,36,],[37,91,]),'assignment_expression':([111,127,134,144,153,182,189,194,213,219,221,236,265,268,272,291,305,313,318,331,341,345,348,358,359,360,363,366,367,368,419,442,446,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[155,207,220,207,267,220,319,155,155,220,220,220,220,220,220,220,398,220,411,155,207,433,436,220,440,220,220,220,220,220,155,220,220,487,488,491,207,220,220,220,220,220,220,220,220,220,220,220,]),'declaration_list':([35,79,],[85,85,]),'storage_class_specifier':([0,6,20,25,29,35,36,67,79,85,87,114,130,134,198,202,236,330,332,367,403,],[6,6,6,6,81,6,6,6,6,6,81,81,6,6,6,6,6,6,6,6,6,]),'translation_unit_or_empty':([0,],[7,]),'unified_wstring_literal':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'struct_declarator_list':([138,],[248,]),'designator_list':([210,428,457,502,],[342,342,342,342,]),'expression_opt':([134,221,236,360,363,367,442,446,477,479,481,482,496,508,509,514,519,],[222,222,222,222,222,447,222,480,222,222,497,222,507,515,222,222,222,]),'declaration':([0,35,36,79,85,134,236,367,],[13,86,13,86,131,223,223,446,]),'designation':([210,428,457,502,],[343,343,343,343,]),'pp_directive':([0,36,],[16,16,]),'compound_statement':([88,128,134,221,236,360,363,442,477,479,482,509,514,519,],[133,211,227,227,227,227,227,227,227,227,227,227,227,227,]),'struct_or_union_specifier':([0,35,36,41,67,79,85,90,94,121,130,134,135,136,139,140,182,198,202,236,245,246,265,268,291,308,330,332,367,403,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'type_qualifier':([0,6,20,25,29,35,36,46,66,67,79,85,87,94,102,110,112,114,129,130,134,135,136,138,139,140,182,198,202,212,214,236,245,246,265,268,291,308,310,329,330,332,367,403,418,420,],[20,20,20,20,76,20,20,103,103,20,20,20,76,103,145,145,103,76,103,20,20,103,103,253,103,145,103,20,20,145,103,20,103,103,103,103,103,103,253,103,20,20,20,20,145,103,]),'id_init_declarator_list_opt':([41,90,],[98,98,]),'typeid_noparen_declarator':([114,],[192,]),'unified_string_literal':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'type_name':([182,265,268,291,308,],[309,375,377,397,399,]),'assignment_expression_opt':([111,194,213,331,419,],[165,322,346,423,462,]),'struct_or_union':([0,35,36,41,67,79,85,90,94,121,130,134,135,136,139,140,182,198,202,236,245,246,265,268,291,308,330,332,367,403,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'initializer':([127,144,341,472,],[208,259,429,492,]),'init_declarator':([29,87,125,143,],[75,75,205,258,]),'unary_operator':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'jump_statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[229,229,229,229,229,229,229,229,229,229,229,229,]),'declaration_specifiers':([0,35,36,67,79,85,130,134,198,202,236,330,332,367,403,],[29,87,29,114,87,87,114,87,114,114,87,114,114,87,114,]),'pppragma_directive':([0,36,134,221,236,360,363,442,477,479,482,509,514,519,],[54,54,231,231,231,231,231,231,231,231,231,231,231,231,]),'constant':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,]),'declarator':([29,87,125,138,143,371,],[78,78,78,252,78,252,]),'offsetof_member_designator':([455,],[484,]),'type_qualifier_list_opt':([46,66,112,129,214,329,420,],[104,111,189,213,348,419,464,]),'id_declarator':([0,27,29,36,41,77,87,90,114,125,138,143,198,371,],[35,69,79,35,99,69,132,99,199,132,132,132,69,132,]),'parameter_declaration':([67,130,198,202,330,332,403,],[118,118,118,334,118,118,118,]),'designation_opt':([210,428,457,502,],[341,472,341,472,]),'direct_typeid_noparen_declarator':([114,193,],[200,321,]),'id_init_declarator_list':([41,90,],[96,96,]),'expression':([134,182,219,221,236,265,268,272,291,313,358,360,363,366,367,368,442,446,476,477,479,481,482,496,499,508,509,514,519,],[228,311,353,228,228,311,311,380,311,405,439,228,228,445,228,448,228,228,493,228,228,228,228,228,510,228,228,228,228,]),'direct_abstract_declarator':([114,193,198,310,324,401,403,],[201,320,201,201,320,320,201,]),'statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[224,355,224,441,443,478,494,495,498,516,518,520,]),'enumerator_list':([62,105,106,],[108,147,148,]),'declaration_specifiers_no_type_opt':([6,20,25,],[57,65,68,]),'initializer_list':([210,457,],[339,486,]),'parameter_type_list':([67,130,198,330,332,403,],[122,216,328,422,328,328,]),'cast_expression':([111,127,134,144,149,153,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[184,184,184,184,184,184,294,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,456,184,184,184,456,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,184,]),'typedef_name':([0,35,36,41,67,79,85,90,94,121,130,134,135,136,139,140,182,198,202,236,245,246,265,268,291,308,330,332,367,403,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'designator':([210,342,428,457,502,],[340,431,340,340,340,]),'type_specifier':([0,35,36,41,67,79,85,90,94,121,130,134,135,136,139,140,182,198,202,236,245,246,265,268,291,308,330,332,367,403,],[53,53,53,100,53,53,53,100,142,100,53,53,142,142,142,257,142,53,53,53,142,142,142,142,142,142,53,53,53,53,]),'expression_statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[233,233,233,233,233,233,233,233,233,233,233,233,]),'direct_typeid_declarator':([29,71,77,87,125,138,143,371,],[84,124,84,84,84,84,84,84,]),'primary_expression':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'abstract_declarator':([114,198,310,403,],[191,326,191,326,]),'specifier_qualifier_list':([94,135,136,139,182,245,246,265,268,291,308,],[138,138,138,138,310,138,138,310,310,310,310,]),'identifier_list_opt':([67,130,330,],[113,215,421,]),'pointer':([0,27,29,36,41,77,87,90,104,114,125,138,143,198,310,371,403,],[12,12,71,12,12,71,71,12,146,193,71,71,71,324,401,71,401,]),'constant_expression':([149,234,250,336,374,],[262,362,372,426,450,]),'brace_close':([108,139,147,148,217,245,246,338,428,486,502,],[152,256,260,261,351,369,370,427,473,503,512,]),'argument_expression_list':([318,],[412,]),'enumerator':([62,105,106,150,],[109,109,109,266,]),'init_declarator_list':([29,87,],[72,72,]),'parameter_type_list_opt':([198,332,403,],[325,425,325,]),'direct_id_declarator':([0,12,27,29,36,41,71,77,87,90,114,125,138,143,193,198,324,371,],[21,63,21,21,21,21,63,21,21,21,21,21,21,21,63,21,63,21,]),'initializer_list_opt':([210,],[338,]),'binary_expression':([111,127,134,144,149,153,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,419,442,446,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,378,379,161,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,]),'function_specifier':([0,6,20,25,29,35,36,67,79,85,87,114,130,134,198,202,236,330,332,367,403,],[25,25,25,25,74,25,25,25,25,25,74,74,25,25,25,25,25,25,25,25,25,]),'abstract_declarator_opt':([114,310,],[197,402,]),'block_item_list':([134,],[236,]),'struct_declarator_list_opt':([138,],[251,]),'typeid_declarator':([29,77,87,125,138,143,371,],[83,126,83,83,83,83,83,]),'conditional_expression':([111,127,134,144,149,153,182,189,194,213,219,221,234,236,250,265,268,272,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,419,442,446,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[168,168,168,168,264,168,168,168,168,168,168,168,264,168,264,168,168,168,168,168,168,168,168,264,168,168,168,168,168,168,168,168,168,168,264,168,168,168,483,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'struct_declaration':([94,135,136,139,245,246,],[137,137,137,255,255,255,]),'identifier':([67,111,127,130,134,144,149,153,159,166,167,171,182,189,194,203,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,330,331,336,341,344,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,455,460,461,464,472,476,477,479,481,482,496,499,501,508,509,514,519,],[115,173,173,115,173,173,173,173,173,173,173,173,173,173,173,335,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,115,173,173,173,432,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,485,173,173,173,173,173,173,173,173,173,173,173,511,173,173,173,173,]),'unary_expression':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[174,174,174,174,263,174,269,292,293,263,174,174,174,174,174,174,263,174,263,174,174,263,263,174,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,174,174,174,174,174,263,174,174,174,174,174,174,174,174,174,174,263,263,174,174,174,263,263,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,]),'struct_declaration_list':([94,135,136,],[139,245,246,]),'declaration_list_opt':([35,79,],[88,128,]),'parameter_list':([67,130,198,330,332,403,],[117,117,117,117,117,117,]),'selection_statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[239,239,239,239,239,239,239,239,239,239,239,239,]),'id_init_declarator':([41,90,],[97,97,]),'labeled_statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[240,240,240,240,240,240,240,240,240,240,240,240,]),'decl_body':([0,35,36,79,85,134,236,367,],[5,5,5,5,5,5,5,5,]),'empty':([0,6,20,25,29,35,41,46,66,67,79,87,90,111,112,114,129,130,134,138,194,198,210,213,214,221,236,310,329,330,331,332,360,363,367,403,419,420,428,442,446,457,477,479,481,482,496,502,508,509,514,519,],[39,58,58,58,80,89,95,101,101,120,89,80,95,179,101,195,101,120,225,249,179,327,337,179,101,356,356,195,101,120,179,327,356,356,356,327,179,101,471,356,356,471,356,356,356,356,356,471,356,356,356,356,]),'assignment_operator':([174,],[305,]),'brace_open':([11,40,60,61,88,92,93,127,128,134,144,221,236,341,360,363,400,442,451,452,454,472,477,479,482,509,514,519,],[62,94,105,106,134,135,136,210,134,134,210,134,134,210,134,134,457,134,457,457,457,210,134,134,134,134,134,134,]),'declaration_specifiers_no_type':([0,6,20,25,35,36,67,79,85,130,134,198,202,236,330,332,367,403,],[41,56,56,56,90,41,121,90,90,121,90,121,121,90,121,121,90,121,]),'init_declarator_list_opt':([29,87,],[82,82,]),'struct_declarator':([138,371,],[254,449,]),'function_definition':([0,36,],[45,45,]),'enum_specifier':([0,35,36,41,67,79,85,90,94,121,130,134,135,136,139,140,182,198,202,236,245,246,265,268,291,308,330,332,367,403,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'iteration_statement':([134,221,236,360,363,442,477,479,482,509,514,519,],[242,242,242,242,242,242,242,242,242,242,242,242,]),'block_item':([134,236,],[243,364,]),'postfix_expression':([111,127,134,144,149,153,159,166,167,171,182,189,194,213,219,221,234,236,250,265,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,291,305,313,318,331,336,341,345,348,358,359,360,363,366,367,368,374,400,419,442,446,451,453,460,461,464,472,476,477,479,481,482,496,499,508,509,514,519,],[187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,]),'identifier_list':([67,130,330,],[119,119,119,]),'translation_unit':([0,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',542),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',547),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',553),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',558),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',563),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',569),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',570),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',581),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',598),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',614),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',615),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',629),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',630),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',689),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',698),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',699),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',709),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',714),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',719),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',725),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',730),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',735),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',740),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',745),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',750),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',756),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',757),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',758),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',759),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',760),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',765),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',770),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',771),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',772),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',773),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',774),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',775),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',776),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',777),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',778),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',779),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',780),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',781),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',786),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',787),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',788),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',789),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',794),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',795),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',796),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',801),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',802),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',810),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',811),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',816),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',817),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',822),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',823),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',830),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',835),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',840),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',845),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',854),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',855),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',864),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',873),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',874),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',883),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',884),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',891),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',892),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',900),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',938),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',943),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',944),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',952),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',957),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',958),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',966),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',967),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',972),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',977),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',978),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',983),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',984),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',985),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',996),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',997),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1012),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1013),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1124),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1125),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1154),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1155),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1160),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1161),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1169),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1170),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1189),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1190),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1201),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1232),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1233),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1242),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1247),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1248),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1256),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1257),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1268),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1276),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1277),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1282),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1283),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1288),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1299),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1307),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1312),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1322),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1326),
  ('direct_abstract_declarator -> LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_3','c_parser.py',1337),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1346),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1357),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1366),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1376),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1387),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1388),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1395),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1396),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1402),
  ('labeled_statement -> ID COLON statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1408),
  ('labeled_statement -> CASE constant_expression COLON statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1412),
  ('labeled_statement -> DEFAULT COLON statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1416),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1420),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1424),
  ('selection_statement -> SWITCH LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1428),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1433),
  ('iteration_statement -> DO statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1437),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1441),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1445),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1450),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1454),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1458),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1462),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1463),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1468),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1475),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1476),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1488),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1492),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1493),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1506),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1507),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1508),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1509),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1510),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1511),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1512),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1513),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1514),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1515),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1516),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1521),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1525),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1526),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1534),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1535),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1536),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1537),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1538),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1539),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1540),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1541),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1542),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1543),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1544),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1545),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1546),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1547),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1548),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1549),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1550),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1551),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1552),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1560),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1564),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1568),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1572),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1573),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1574),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1579),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1580),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1588),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1589),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1590),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1591),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1592),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1593),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1598),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1602),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1606),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1607),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1612),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1613),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1614),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1615),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1621),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1622),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1627),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1628),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1633),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1637),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1641),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1642),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1647),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1651),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1659),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1660),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1661),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1674),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1675),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1684),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1688),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1689),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1690),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1691),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1697),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1698),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1704),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1705),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1716),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1717),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1727),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1728),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1738),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1744),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1750),
]
