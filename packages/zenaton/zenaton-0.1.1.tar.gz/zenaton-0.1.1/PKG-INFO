Metadata-Version: 1.2
Name: zenaton
Version: 0.1.1
Summary: Zenaton client library
Home-page: https://zenaton.com/
Author: Zenaton
Author-email: contact@zenaton.com
License: Apache License, Version 2.0
Description: Zenaton client library
        ======================
        
        This is the official Python client library for Zenaton (https://zenaton.com/).
        
        .. image:: https://travis-ci.org/zenaton/zenaton-python.svg?branch=master
            :target: https://travis-ci.org/zenaton/zenaton-python
        
        
        Requirements
        ------------
        
        Supported Python versions are 2.7 and 3.3+.
        
        
        Installing
        ----------
        
        Install the latest stable release using ``pip``:
        
        .. code-block:: shell
        
            $ pip install zenaton
        
        
        Getting started
        ---------------
        
        .. code-block:: python
        
            #
            # Getting started with Zenaton
            #
            from zenaton import Client, Task, Workflow
        
        
            class Echo(Task):
        
                def __init__(self, value):
                    self.value = value
        
                def handle(self):
                    print(self.value)
        
        
            class MyWorkflow(Workflow):
        
                def __init__(self, count):
                    self.count = count
        
                def handle(self):
                    while self.count > 0:
                        self.execute(Echo(self.count))
                        self.count -= 1
        
        
            if __name__ == '__main__':
        
                # Create a simple workflow
                workflow = MyWorkflow(count=10)
        
                # Ask Zenaton to start an instance of this workflow
                client = Client(app_id='APP_ID', token='API_TOKEN', environment='APP_ENV')
                instance = client.start(workflow)
                print(instance.id)
        
        
        Hacking
        -------
        
        Run tests using ``py.test``:
        
        .. code-block:: shell
        
            $ pip install -r requirements-testing.txt
            $ py.test
        
        Run tests on all supported Python versions using ``tox``:
        
        .. code-block:: shell
        
            $ pip install tox
            $ tox
        
        
        Documentation
        -------------
        
        Build the docs using Sphinx:
        
        .. code-block:: shell
        
            $ pip install sphinx sphinxcontrib-napoleon
            $ cd docs
            $ make html
        
        0.1.1 (2017-09-08)
        ------------------
        
        - Improved packaging
        
        
        0.1.0 (2017-09-08)
        ------------------
        
        - Initial release
        
Keywords: workflow tasks queue orchestration scheduling
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=2.7,!=3.0.*,!=3.1.*,!=3.2.*
