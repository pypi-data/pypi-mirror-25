Metadata-Version: 1.1
Name: esper_tool
Version: 1.0.8
Summary: Command line tool for accessing ESPER
Home-page: https://edev-group.triumf.ca/
Author: Bryerton Shaw
Author-email: bryerton@triumf.ca
License: MIT
Description-Content-Type: UNKNOWN
Description: ==========
        ESPER TOOL
        ==========
        
        Overview
        --------
        A command line utility for accessing a device running the ESPER web service.
        
        The tool allows for the reading and writing of ESPER variables via the command line.
        There are three main commands available: ``read``, ``write``, and ``upload``. 
        
        The syntax of each command follows the general flow of:
        
        ``esper_tool <command> <command options> <url> <mid> <vid>`` 
        
        Command: May be 'read', 'write', or 'upload'
        
        Command Options: Dependent upon command used. 
        
        URL: Location of ESPER web service given in standard format. If the port is excluded, it defaults to 80. Valid URLs: 'localhost', 'http://localhost', 'http://127.0.0.1:8080'
        
        MID: Module ID of the variable being requested. May be given as an ASCII string that matches the module key, or a numerical value that matches the module id in ESPER. Ie: To access the system module, 'system' or '0' may be used.
        
        VID: Variable ID of the variable being requested. May be given as an ASCII string that matches the variable key, or a numerical value that matches the variables id in ESPER. Ie: To acess the uptime variable located in the system module 'uptime' or '1' may be used. Warning: The value '1' is not guaranteed to be the 'uptime' variable!
        
        Examples
        --------
        Request the uptime variable from the system from an ESPER web service running at 192.168.1.1 on port 8080
        (mid=system, vid=uptime)
        
        ``> esper_tool read system uptime http://192.168.1.1:8080`` 
        
        Request the 3rd variable from the first module (mid=0, vid=2)
        
        ``> esper_tool read 0 2 http://192.168.1.1:8080`` 
        
Keywords: esper monitoring control experiments
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Science/Research
Classifier: Environment :: Console
Classifier: Topic :: System :: Networking
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
