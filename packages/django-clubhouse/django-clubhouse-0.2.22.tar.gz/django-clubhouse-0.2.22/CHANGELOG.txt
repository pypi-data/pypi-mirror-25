== v0.2.22 ==
- Fix for the clubhouse.forms.page_processors:modularpage_processor after reverse relationship "content_blocks" removed from clubhouse.contrib.models.ModularPage

== v0.2.21 ==
- Requirement versions updated to not require explicit path version, instead required version within a minor release

== v0.2.20 ==
- Updated requirements versions for django >= 1.8, <= 1.11
- Moved model imports in clubhouse.core.sites to inside registry methods for compatibility with django >= 1.8

=== v0.2.19 ===
- Added core.models.BlockContextMetaBase. Meta class on BlockContext models should inherit this class

=== v0.2.18 ===
- Re-registering mezzanine Pages models to use clubhouse.admin.PageAdmin, fixes bug with loading lookup changelist
- Added clubhouse.sites.Clubhouse.safe_unregister to accommodate the above.
- Removed BlockContextsListDisplay from BlockLibrary list display.
- Overridden mezzanine/js/admin/keywords_field.js very simple fix for keywords not working if there is no current value set.

=== v0.2.17 ===
- Bug fix - BlockInline.max_num wasn't being respected in grp_inline.js
- Added ordering on AbstractModularComponent.get_blocks_by_context

=== v0.2.16 ===
- Added django-image-cropping as a requirement to installation for new widgets
- Added easy-thumbnails as an installation requirement for new widgets
- Ensuring BlockContext.get_block_models doesn't yield the same model twice

=== v0.2.15 ===
- Updated render_blocks tag context variable from 'block_context' to 'context_model', more explicit
- Implemented core.options.serializer_registry for registering serializers against models and looking up serializers for models
- Implemented core.options.autodiscover_serializers for discovering serializer module
- Added utils.models.ensure_model function to take either model class, or "app_label.ModelName" string and return model class

=== v0.2.14 ===
- Using a 'block_models' property on BlockContext in addition to Block.block_contexts when collecting blocks for BlockContext
- Added .order_by to render_blocks template tag block query
- block_render tag now accepts any kwarg, which it then uses as base context.
- block_contexts Block property can now use "app_name.ModelName" syntax, as can BlockContext.block_models

=== v0.2.13 ===
- Deprecated core.serializers.BlockSerializer
- Added find_for_model function in core.serializers
- core.serializers.BlockContextSerializer uses find_for_model for block_object

=== v0.2.12 ===
- Support for image_cropping crop fields with Filebrowser
- Added clubhouse.core.fields.FileBrowseImageField
- Added clubhouse.core.widgets.FileBrowseImageWidget
- Added clubhouse.core.widgets.FileBrowseImageCropWidget
- Added clubhouse.core.options.FileBrowseImageCroppingMixin
- Added utils.image with ImageCroppingHelper
- Added have_fields_changed to model utility
- Overidden template filebrowser/custom_field.html

=== v0.2.11 ===
- Migration added

=== v0.2.10 ===
- GalleryBlock inheritance fix.
- Fixed Zipfile upload on GalleryBlock

=== v0.2.9 ===
- Added serializers for contrib pages
- Added serializers for contrib blocks
- Added serializers for contrib block contexts
- Fixed contrib.ModularPage.content property
- Fixed contrib.ModularPage.aside property
- Fixed contrib.GroupingBlock.content property
- Added `override_default` Meta option on BlockSerializer

=== v0.2.8 ===
- Autodiscovering serializers modules when clubhouse.core.serializers is loaded

=== v0.2.7 ===
- Minor fix on grouping block template
- Added BlockSerializer for djangrestframework which adds default_serializer
and serializers list to block models
- Added BlockContextSerializer which adds the block_object to serialized data

=== v0.2.6 ===
- Added render_blocks template tag to clb_tags
- Updated all block templates to fit with the render_blocks tag
- added help text to BlockContext.additional_classes
- BlockContext has get_template for the context template, defaults to
model_name.html
- BaseBlock has get_template for the block template, defaults to
blocks/model_name.html

=== v0.2.5 ===
- Added AbstractModularPage which implements a method to get blocks by context
model

=== v0.2.4 ===
- Changed verbose name for ContentBlock and AsideBlock, removed "Page" prefix
- Bug fix on BlockContextAdmin Block type filter breaking other filters

=== v0.2.3 ===
- Added additional filters to BlockContextAdmin
- Made user_created uneditable
- Made user_updated uneditable

=== v0.2.2 ===
- Added date_created to BaseBlock
- Added last_updated to BaseBlock
- Added user_created to BaseBlock
- Added user_updated to BaseBlock
- Added new block fields to list_display on BlockContextAdmin
- Implemented the SubclassingModel default_manager

=== v0.2.1 ===
- Changed block_types model property to block_contexts for consistency
- Block Library now displays blocks contexts based on the block_contexts model property


=== v0.2.0 ===
- Non BC update - as BlockType name change.
- Bug fix on tabular inline addhanlder not displaying new form
- Added subclassableModel base model.
- Changed name of BlockType to BlockContext - less confusing.
- Added BlockLibrary abstract model and admin class to list all blocks

=== v0.1.1 ===
- Bug fix on BlockTypeAdmin._meta.base_block not being set
- Bug fix on BlockType.delete using old PageBlock for super call

=== v0.1.0 ===
- Forms module implemented
- Large rework of Block types, No longer requirement for relationship model
for blocks, as BlockType defines generic relationship to parent.
- BlockType models can be registered by either the admin.site.register or
admin.site.register_block_type methods.
- BlockInline no longer requires additional block_type, as the inline model is
now the block type

=== v0.0.5 ===
- Bug fix on core.options.PageAdmin - always returns Forbidden
- Edit link on generic autocomplete lookup uses changelink icon

=== v0.0.4 ===
- Separated lookup and edit links on block inlines

=== v0.0.3 ===
- Implemented Generic autocomplete lookup on model admin change_form.html

=== v0.0.2 ===
- Module import fix
- Block types moved to BlockBase

=== v0.0.1 ===
- First Alpha Release

