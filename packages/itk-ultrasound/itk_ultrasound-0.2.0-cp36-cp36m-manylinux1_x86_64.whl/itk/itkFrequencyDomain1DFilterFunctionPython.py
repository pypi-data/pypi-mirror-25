# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkFrequencyDomain1DFilterFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkFrequencyDomain1DFilterFunctionPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkFrequencyDomain1DFilterFunctionPython')
    _itkFrequencyDomain1DFilterFunctionPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkFrequencyDomain1DFilterFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkFrequencyDomain1DFilterFunctionPython
            return _itkFrequencyDomain1DFilterFunctionPython
        try:
            _mod = imp.load_module('_itkFrequencyDomain1DFilterFunctionPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkFrequencyDomain1DFilterFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkFrequencyDomain1DFilterFunctionPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython

def itkFrequencyDomain1DFilterFunction_New():
  return itkFrequencyDomain1DFilterFunction.New()


def itkFrequencyDomain1DFilterFunction_Superclass_New():
  return itkFrequencyDomain1DFilterFunction_Superclass.New()

class itkFrequencyDomain1DFilterFunction_Superclass(ITKCommonBasePython.itkLightObject):
    """Proxy of C++ itkFrequencyDomain1DFilterFunction_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFrequencyDomain1DFilterFunction_Superclass_Pointer":
        """__New_orig__() -> itkFrequencyDomain1DFilterFunction_Superclass_Pointer"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def DebugOn(self) -> "void":
        """DebugOn(itkFrequencyDomain1DFilterFunction_Superclass self)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_DebugOn(self)


    def DebugOff(self) -> "void":
        """DebugOff(itkFrequencyDomain1DFilterFunction_Superclass self)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_DebugOff(self)


    def GetDebug(self) -> "bool":
        """GetDebug(itkFrequencyDomain1DFilterFunction_Superclass self) -> bool"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetDebug(self)


    def SetDebug(self, debugFlag: 'bool') -> "void":
        """SetDebug(itkFrequencyDomain1DFilterFunction_Superclass self, bool debugFlag)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetDebug(self, debugFlag)


    def GetMTime(self) -> "unsigned long":
        """GetMTime(itkFrequencyDomain1DFilterFunction_Superclass self) -> unsigned long"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetMTime(self)


    def GetTimeStamp(self) -> "itkTimeStamp const &":
        """GetTimeStamp(itkFrequencyDomain1DFilterFunction_Superclass self) -> itkTimeStamp"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetTimeStamp(self)


    def Modified(self) -> "void":
        """Modified(itkFrequencyDomain1DFilterFunction_Superclass self)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_Modified(self)


    def SetGlobalWarningDisplay(flag: 'bool') -> "void":
        """SetGlobalWarningDisplay(bool flag)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetGlobalWarningDisplay(flag)

    SetGlobalWarningDisplay = staticmethod(SetGlobalWarningDisplay)

    def GetGlobalWarningDisplay() -> "bool":
        """GetGlobalWarningDisplay() -> bool"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetGlobalWarningDisplay()

    GetGlobalWarningDisplay = staticmethod(GetGlobalWarningDisplay)

    def GlobalWarningDisplayOn() -> "void":
        """GlobalWarningDisplayOn()"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOn()

    GlobalWarningDisplayOn = staticmethod(GlobalWarningDisplayOn)

    def GlobalWarningDisplayOff() -> "void":
        """GlobalWarningDisplayOff()"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOff()

    GlobalWarningDisplayOff = staticmethod(GlobalWarningDisplayOff)

    def AddObserver(self, *args) -> "unsigned long":
        """
        AddObserver(itkFrequencyDomain1DFilterFunction_Superclass self, itkEventObject event, itkCommand arg1) -> unsigned long
        AddObserver(itkFrequencyDomain1DFilterFunction_Superclass self, itkEventObject event, itkCommand arg1) -> unsigned long
        """
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_AddObserver(self, *args)


    def GetCommand(self, tag: 'unsigned long') -> "itkCommand *":
        """GetCommand(itkFrequencyDomain1DFilterFunction_Superclass self, unsigned long tag) -> itkCommand"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetCommand(self, tag)


    def InvokeEvent(self, *args) -> "void":
        """
        InvokeEvent(itkFrequencyDomain1DFilterFunction_Superclass self, itkEventObject arg0)
        InvokeEvent(itkFrequencyDomain1DFilterFunction_Superclass self, itkEventObject arg0)
        """
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_InvokeEvent(self, *args)


    def RemoveObserver(self, tag: 'unsigned long') -> "void":
        """RemoveObserver(itkFrequencyDomain1DFilterFunction_Superclass self, unsigned long tag)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_RemoveObserver(self, tag)


    def RemoveAllObservers(self) -> "void":
        """RemoveAllObservers(itkFrequencyDomain1DFilterFunction_Superclass self)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_RemoveAllObservers(self)


    def HasObserver(self, event: 'itkEventObject') -> "bool":
        """HasObserver(itkFrequencyDomain1DFilterFunction_Superclass self, itkEventObject event) -> bool"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_HasObserver(self, event)


    def GetMetaDataDictionary(self, *args) -> "itkMetaDataDictionary const &":
        """
        GetMetaDataDictionary(itkFrequencyDomain1DFilterFunction_Superclass self) -> itkMetaDataDictionary
        GetMetaDataDictionary(itkFrequencyDomain1DFilterFunction_Superclass self) -> itkMetaDataDictionary
        """
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetMetaDataDictionary(self, *args)


    def SetMetaDataDictionary(self, rhs: 'itkMetaDataDictionary') -> "void":
        """SetMetaDataDictionary(itkFrequencyDomain1DFilterFunction_Superclass self, itkMetaDataDictionary rhs)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetMetaDataDictionary(self, rhs)


    def SetObjectName(self, _arg: 'std::string const') -> "void":
        """SetObjectName(itkFrequencyDomain1DFilterFunction_Superclass self, std::string const _arg)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetObjectName(self, _arg)


    def GetObjectName(self) -> "std::string const &":
        """GetObjectName(itkFrequencyDomain1DFilterFunction_Superclass self) -> std::string const &"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetObjectName(self)

    __swig_destroy__ = _itkFrequencyDomain1DFilterFunctionPython.delete_itkFrequencyDomain1DFilterFunction_Superclass

    def cast(obj: 'itkLightObject') -> "itkFrequencyDomain1DFilterFunction_Superclass *":
        """cast(itkLightObject obj) -> itkFrequencyDomain1DFilterFunction_Superclass"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkFrequencyDomain1DFilterFunction_Superclass *":
        """GetPointer(itkFrequencyDomain1DFilterFunction_Superclass self) -> itkFrequencyDomain1DFilterFunction_Superclass"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkFrequencyDomain1DFilterFunction_Superclass

        Create a new object of the class itkFrequencyDomain1DFilterFunction_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyDomain1DFilterFunction_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFrequencyDomain1DFilterFunction_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFrequencyDomain1DFilterFunction_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFrequencyDomain1DFilterFunction_Superclass.DebugOn = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_DebugOn, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.DebugOff = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_DebugOff, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetDebug = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetDebug, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.SetDebug = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetDebug, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetMTime = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetMTime, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetTimeStamp = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetTimeStamp, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.Modified = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_Modified, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.AddObserver = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_AddObserver, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetCommand = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetCommand, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.InvokeEvent = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_InvokeEvent, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.RemoveObserver = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_RemoveObserver, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.RemoveAllObservers = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_RemoveAllObservers, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.HasObserver = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_HasObserver, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetMetaDataDictionary = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetMetaDataDictionary, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.SetMetaDataDictionary = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetMetaDataDictionary, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.SetObjectName = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetObjectName, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetObjectName = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetObjectName, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass.GetPointer = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetPointer, None, itkFrequencyDomain1DFilterFunction_Superclass)
itkFrequencyDomain1DFilterFunction_Superclass_swigregister = _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_swigregister
itkFrequencyDomain1DFilterFunction_Superclass_swigregister(itkFrequencyDomain1DFilterFunction_Superclass)

def itkFrequencyDomain1DFilterFunction_Superclass___New_orig__() -> "itkFrequencyDomain1DFilterFunction_Superclass_Pointer":
    """itkFrequencyDomain1DFilterFunction_Superclass___New_orig__() -> itkFrequencyDomain1DFilterFunction_Superclass_Pointer"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass___New_orig__()

def itkFrequencyDomain1DFilterFunction_Superclass_SetGlobalWarningDisplay(flag: 'bool') -> "void":
    """itkFrequencyDomain1DFilterFunction_Superclass_SetGlobalWarningDisplay(bool flag)"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_SetGlobalWarningDisplay(flag)

def itkFrequencyDomain1DFilterFunction_Superclass_GetGlobalWarningDisplay() -> "bool":
    """itkFrequencyDomain1DFilterFunction_Superclass_GetGlobalWarningDisplay() -> bool"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GetGlobalWarningDisplay()

def itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOn() -> "void":
    """itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOn()"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOn()

def itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOff() -> "void":
    """itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOff()"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_GlobalWarningDisplayOff()

def itkFrequencyDomain1DFilterFunction_Superclass_cast(obj: 'itkLightObject') -> "itkFrequencyDomain1DFilterFunction_Superclass *":
    """itkFrequencyDomain1DFilterFunction_Superclass_cast(itkLightObject obj) -> itkFrequencyDomain1DFilterFunction_Superclass"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Superclass_cast(obj)

class itkFrequencyDomain1DFilterFunction(itkFrequencyDomain1DFilterFunction_Superclass):
    """Proxy of C++ itkFrequencyDomain1DFilterFunction class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkFrequencyDomain1DFilterFunction_Pointer":
        """__New_orig__() -> itkFrequencyDomain1DFilterFunction_Pointer"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkFrequencyDomain1DFilterFunction_Pointer":
        """Clone(itkFrequencyDomain1DFilterFunction self) -> itkFrequencyDomain1DFilterFunction_Pointer"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Clone(self)


    def EvaluateIndex(self, i: 'unsigned long &') -> "double":
        """EvaluateIndex(itkFrequencyDomain1DFilterFunction self, unsigned long & i) -> double"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_EvaluateIndex(self, i)


    def SetSignalSize(self, size: 'unsigned long const &') -> "void":
        """SetSignalSize(itkFrequencyDomain1DFilterFunction self, unsigned long const & size)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_SetSignalSize(self, size)


    def GetSignalSize(self) -> "unsigned long":
        """GetSignalSize(itkFrequencyDomain1DFilterFunction self) -> unsigned long"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetSignalSize(self)


    def SetUseCache(self, _arg: 'bool const') -> "void":
        """SetUseCache(itkFrequencyDomain1DFilterFunction self, bool const _arg)"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_SetUseCache(self, _arg)


    def GetUseCache(self) -> "bool":
        """GetUseCache(itkFrequencyDomain1DFilterFunction self) -> bool"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetUseCache(self)


    def EvaluateFrequency(self, frequency: 'double') -> "double":
        """EvaluateFrequency(itkFrequencyDomain1DFilterFunction self, double frequency) -> double"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_EvaluateFrequency(self, frequency)

    __swig_destroy__ = _itkFrequencyDomain1DFilterFunctionPython.delete_itkFrequencyDomain1DFilterFunction

    def cast(obj: 'itkLightObject') -> "itkFrequencyDomain1DFilterFunction *":
        """cast(itkLightObject obj) -> itkFrequencyDomain1DFilterFunction"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkFrequencyDomain1DFilterFunction *":
        """GetPointer(itkFrequencyDomain1DFilterFunction self) -> itkFrequencyDomain1DFilterFunction"""
        return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkFrequencyDomain1DFilterFunction

        Create a new object of the class itkFrequencyDomain1DFilterFunction and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyDomain1DFilterFunction.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkFrequencyDomain1DFilterFunction.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkFrequencyDomain1DFilterFunction.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkFrequencyDomain1DFilterFunction.Clone = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_Clone, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.EvaluateIndex = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_EvaluateIndex, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.SetSignalSize = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_SetSignalSize, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.GetSignalSize = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetSignalSize, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.SetUseCache = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_SetUseCache, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.GetUseCache = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetUseCache, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.EvaluateFrequency = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_EvaluateFrequency, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction.GetPointer = new_instancemethod(_itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_GetPointer, None, itkFrequencyDomain1DFilterFunction)
itkFrequencyDomain1DFilterFunction_swigregister = _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_swigregister
itkFrequencyDomain1DFilterFunction_swigregister(itkFrequencyDomain1DFilterFunction)

def itkFrequencyDomain1DFilterFunction___New_orig__() -> "itkFrequencyDomain1DFilterFunction_Pointer":
    """itkFrequencyDomain1DFilterFunction___New_orig__() -> itkFrequencyDomain1DFilterFunction_Pointer"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction___New_orig__()

def itkFrequencyDomain1DFilterFunction_cast(obj: 'itkLightObject') -> "itkFrequencyDomain1DFilterFunction *":
    """itkFrequencyDomain1DFilterFunction_cast(itkLightObject obj) -> itkFrequencyDomain1DFilterFunction"""
    return _itkFrequencyDomain1DFilterFunctionPython.itkFrequencyDomain1DFilterFunction_cast(obj)



