# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkButterworthBandpass1DFilterFunctionPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_itkButterworthBandpass1DFilterFunctionPython')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_itkButterworthBandpass1DFilterFunctionPython')
    _itkButterworthBandpass1DFilterFunctionPython = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkButterworthBandpass1DFilterFunctionPython', [dirname(__file__)])
        except ImportError:
            import _itkButterworthBandpass1DFilterFunctionPython
            return _itkButterworthBandpass1DFilterFunctionPython
        try:
            _mod = imp.load_module('_itkButterworthBandpass1DFilterFunctionPython', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _itkButterworthBandpass1DFilterFunctionPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkButterworthBandpass1DFilterFunctionPython
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython

def itkButterworthBandpass1DFilterFunction_New():
  return itkButterworthBandpass1DFilterFunction.New()


def itkButterworthBandpass1DFilterFunction_Superclass_New():
  return itkButterworthBandpass1DFilterFunction_Superclass.New()

class itkButterworthBandpass1DFilterFunction_Superclass(ITKCommonBasePython.itkObject):
    """Proxy of C++ itkButterworthBandpass1DFilterFunction_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkButterworthBandpass1DFilterFunction_Superclass_Pointer":
        """__New_orig__() -> itkButterworthBandpass1DFilterFunction_Superclass_Pointer"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkButterworthBandpass1DFilterFunction_Superclass_Pointer":
        """Clone(itkButterworthBandpass1DFilterFunction_Superclass self) -> itkButterworthBandpass1DFilterFunction_Superclass_Pointer"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_Clone(self)


    def EvaluateIndex(self, i: 'unsigned long long &') -> "double":
        """EvaluateIndex(itkButterworthBandpass1DFilterFunction_Superclass self, unsigned long long & i) -> double"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_EvaluateIndex(self, i)


    def SetSignalSize(self, size: 'unsigned long long const &') -> "void":
        """SetSignalSize(itkButterworthBandpass1DFilterFunction_Superclass self, unsigned long long const & size)"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_SetSignalSize(self, size)


    def GetSignalSize(self) -> "unsigned long long":
        """GetSignalSize(itkButterworthBandpass1DFilterFunction_Superclass self) -> unsigned long long"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetSignalSize(self)


    def SetUseCache(self, _arg: 'bool const') -> "void":
        """SetUseCache(itkButterworthBandpass1DFilterFunction_Superclass self, bool const _arg)"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_SetUseCache(self, _arg)


    def GetUseCache(self) -> "bool":
        """GetUseCache(itkButterworthBandpass1DFilterFunction_Superclass self) -> bool"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetUseCache(self)


    def EvaluateFrequency(self, frequency: 'double') -> "double":
        """EvaluateFrequency(itkButterworthBandpass1DFilterFunction_Superclass self, double frequency) -> double"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_EvaluateFrequency(self, frequency)

    __swig_destroy__ = _itkButterworthBandpass1DFilterFunctionPython.delete_itkButterworthBandpass1DFilterFunction_Superclass

    def cast(obj: 'itkLightObject') -> "itkButterworthBandpass1DFilterFunction_Superclass *":
        """cast(itkLightObject obj) -> itkButterworthBandpass1DFilterFunction_Superclass"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkButterworthBandpass1DFilterFunction_Superclass *":
        """GetPointer(itkButterworthBandpass1DFilterFunction_Superclass self) -> itkButterworthBandpass1DFilterFunction_Superclass"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkButterworthBandpass1DFilterFunction_Superclass

        Create a new object of the class itkButterworthBandpass1DFilterFunction_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkButterworthBandpass1DFilterFunction_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkButterworthBandpass1DFilterFunction_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkButterworthBandpass1DFilterFunction_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkButterworthBandpass1DFilterFunction_Superclass.Clone = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_Clone, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.EvaluateIndex = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_EvaluateIndex, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.SetSignalSize = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_SetSignalSize, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.GetSignalSize = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetSignalSize, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.SetUseCache = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_SetUseCache, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.GetUseCache = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetUseCache, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.EvaluateFrequency = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_EvaluateFrequency, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass.GetPointer = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_GetPointer, None, itkButterworthBandpass1DFilterFunction_Superclass)
itkButterworthBandpass1DFilterFunction_Superclass_swigregister = _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_swigregister
itkButterworthBandpass1DFilterFunction_Superclass_swigregister(itkButterworthBandpass1DFilterFunction_Superclass)

def itkButterworthBandpass1DFilterFunction_Superclass___New_orig__() -> "itkButterworthBandpass1DFilterFunction_Superclass_Pointer":
    """itkButterworthBandpass1DFilterFunction_Superclass___New_orig__() -> itkButterworthBandpass1DFilterFunction_Superclass_Pointer"""
    return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass___New_orig__()

def itkButterworthBandpass1DFilterFunction_Superclass_cast(obj: 'itkLightObject') -> "itkButterworthBandpass1DFilterFunction_Superclass *":
    """itkButterworthBandpass1DFilterFunction_Superclass_cast(itkLightObject obj) -> itkButterworthBandpass1DFilterFunction_Superclass"""
    return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Superclass_cast(obj)

class itkButterworthBandpass1DFilterFunction(itkButterworthBandpass1DFilterFunction_Superclass):
    """Proxy of C++ itkButterworthBandpass1DFilterFunction class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkButterworthBandpass1DFilterFunction_Pointer":
        """__New_orig__() -> itkButterworthBandpass1DFilterFunction_Pointer"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkButterworthBandpass1DFilterFunction_Pointer":
        """Clone(itkButterworthBandpass1DFilterFunction self) -> itkButterworthBandpass1DFilterFunction_Pointer"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Clone(self)


    def SetUpperFrequency(self, _arg: 'double const') -> "void":
        """SetUpperFrequency(itkButterworthBandpass1DFilterFunction self, double const _arg)"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetUpperFrequency(self, _arg)


    def GetUpperFrequency(self) -> "double":
        """GetUpperFrequency(itkButterworthBandpass1DFilterFunction self) -> double"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetUpperFrequency(self)


    def SetLowerFrequency(self, _arg: 'double const') -> "void":
        """SetLowerFrequency(itkButterworthBandpass1DFilterFunction self, double const _arg)"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetLowerFrequency(self, _arg)


    def GetLowerFrequency(self) -> "double":
        """GetLowerFrequency(itkButterworthBandpass1DFilterFunction self) -> double"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetLowerFrequency(self)


    def SetOrder(self, _arg: 'int const') -> "void":
        """SetOrder(itkButterworthBandpass1DFilterFunction self, int const _arg)"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetOrder(self, _arg)


    def GetOrder(self) -> "int":
        """GetOrder(itkButterworthBandpass1DFilterFunction self) -> int"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetOrder(self)

    __swig_destroy__ = _itkButterworthBandpass1DFilterFunctionPython.delete_itkButterworthBandpass1DFilterFunction

    def cast(obj: 'itkLightObject') -> "itkButterworthBandpass1DFilterFunction *":
        """cast(itkLightObject obj) -> itkButterworthBandpass1DFilterFunction"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkButterworthBandpass1DFilterFunction *":
        """GetPointer(itkButterworthBandpass1DFilterFunction self) -> itkButterworthBandpass1DFilterFunction"""
        return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkButterworthBandpass1DFilterFunction

        Create a new object of the class itkButterworthBandpass1DFilterFunction and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkButterworthBandpass1DFilterFunction.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkButterworthBandpass1DFilterFunction.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkButterworthBandpass1DFilterFunction.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkButterworthBandpass1DFilterFunction.Clone = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_Clone, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.SetUpperFrequency = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetUpperFrequency, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.GetUpperFrequency = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetUpperFrequency, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.SetLowerFrequency = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetLowerFrequency, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.GetLowerFrequency = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetLowerFrequency, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.SetOrder = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_SetOrder, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.GetOrder = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetOrder, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction.GetPointer = new_instancemethod(_itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_GetPointer, None, itkButterworthBandpass1DFilterFunction)
itkButterworthBandpass1DFilterFunction_swigregister = _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_swigregister
itkButterworthBandpass1DFilterFunction_swigregister(itkButterworthBandpass1DFilterFunction)

def itkButterworthBandpass1DFilterFunction___New_orig__() -> "itkButterworthBandpass1DFilterFunction_Pointer":
    """itkButterworthBandpass1DFilterFunction___New_orig__() -> itkButterworthBandpass1DFilterFunction_Pointer"""
    return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction___New_orig__()

def itkButterworthBandpass1DFilterFunction_cast(obj: 'itkLightObject') -> "itkButterworthBandpass1DFilterFunction *":
    """itkButterworthBandpass1DFilterFunction_cast(itkLightObject obj) -> itkButterworthBandpass1DFilterFunction"""
    return _itkButterworthBandpass1DFilterFunctionPython.itkButterworthBandpass1DFilterFunction_cast(obj)



