#!/usr/bin/env python
"""
Usage:
    usiq [options] show <FILE>
    usiq [options] tag <FILE> ...
    usiq [options] rename <FILE> ...
    usiq [options] export <FILE> ...

Options:
    -d, --dry
        don't actually modify anything
    -p <PATTERN>, --pattern=<PATTERN>
        filename pattern used to parse tags from filenames
    -o <FILE>, --output=<FILE>
        write output to yaml file <FILE> (only with export action)
        [default: tags.yaml]
    -i <FILE>, --import=<FILE>
        import tags from yaml file

Tag related:
    -t <TITLE>, --title=<TITLE>
    -a <ARTIST>, --artist=<ARTIST>
    -l <ALBUM>, --album=<ALBUM>
    -A <ALBUMARTIST>, --albumartist=<ALBUMARTIST>
    -b <BPM>, --bpm=<BPM>
    -k <KEY>, --key=<KEY>
    -g <GENRE>, --genre=<GENRE>
    -y <YEAR>, --year=<YEAR>
"""
import sys
from docopt import docopt
from logbook import StreamHandler

from usiq import cli

# TODO: Examples in docstring
# TODO: Support - for -i and -o
# TODO: Github & Travis
# TODO: Fortmat options for tags (e.g. title, lower, upper)
# TODO: support singleton pattern to not clear album name


if __name__ == '__main__':
    StreamHandler(sys.stdout).push_application()
    args = docopt(__doc__)

    fnames = args.pop('<FILE>')
    if args['show']:
        cli.show(fnames.pop(0))
    elif args['tag']:
        cli.tag(fnames, args)
    elif args['rename']:
        cli.rename(fnames, args)
    elif args['export']:
        cli.export(fnames, args)
