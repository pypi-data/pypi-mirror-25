#!/usr/bin/env python3

# -*- coding: utf-8 -*-
# -*- mode: python -*-

# Copyright (C) 2011 Chris Dekter
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os, sys
import atexit
import faulthandler;faulthandler.enable()

# put a symlink into the search path for the ui.rc file
# kde4-config --path data
uirc_dir = os.path.expanduser("~/.local/share/kde4/apps/autokey")
target_dir = ''
HOME_DIR = os.path.expanduser("~")
if os.path.isdir(uirc_dir):
    if ".kde" in os.listdir(HOME_DIR):
        dotkde_path = os.path.join(HOME_DIR, ".kde")
    elif ".kde4" in os.listdir(HOME_DIR):
        dotkde_path = os.path.join(HOME_DIR, ".kde4")
    else: raise RuntimeError("cannot find “~/.kde*”")
    kde_data_path = os.path.join(dotkde_path,'share','apps')
    target_dir = os.path.join(kde_data_path,"autokey")
    try: os.makedirs(kde_data_path)
    except FileExistsError: pass
    try: os.symlink(uirc_dir, target_dir)
    except FileExistsError: pass
    else:
        print("symlink from " + uirc_dir + " to " + target_dir + " created.")

@atexit.register
def delete_symlink():
    'delete the symlink if it exist'
    if os.path.islink(target_dir):
        print("deleting symlink " + target_dir)
        os.remove(target_dir)

# remove WINDOWID environment variable so that zenity is not tied to the window from which it was launched.
try: del os.environ['WINDOWID']
except KeyError: pass

from autokey.qtapp import Application

a = Application()
a.main()

sys.exit(0)
