# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-29 18:53
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import habitat.timezone.models.martian_standard_time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodPressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('systolic', models.PositiveSmallIntegerField(default=None, help_text='mmHg', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)], verbose_name='Blood Pressure Systolic')),
                ('diastolic', models.PositiveSmallIntegerField(default=None, help_text='mmHg', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)], verbose_name='Blood Pressure Diastolic')),
                ('heart_rate', models.PositiveSmallIntegerField(default=None, help_text='bpm', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(250)], verbose_name='Heart Rate')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Blood Pressure',
                'verbose_name_plural': 'Blood Pressure',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('datetime_start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Datetime')),
                ('datetime_end', models.DateTimeField(default=None, verbose_name='End Datetime')),
                ('icd10', models.CharField(default=None, max_length=50, verbose_name='ICD-10')),
                ('symptoms', models.TextField(default=None, verbose_name='Sympthoms')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Disease',
            },
        ),
        migrations.CreateModel(
            name='PulseOxymetry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('spo2', models.PositiveSmallIntegerField(default=None, help_text='%', validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='SpO2')),
                ('perfusion_index', models.DecimalField(decimal_places=1, default=None, max_digits=3, validators=[django.core.validators.MaxValueValidator(22), django.core.validators.MinValueValidator(0)], verbose_name='Blood Perfusion Index')),
                ('heart_rate', models.PositiveSmallIntegerField(default=None, help_text='bpm', validators=[django.core.validators.MaxValueValidator(250), django.core.validators.MinValueValidator(0)], verbose_name='Heart Rate')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Pulse Oxymetry',
                'verbose_name_plural': 'Pulse Oxymetry',
            },
        ),
        migrations.CreateModel(
            name='Stool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('volume', models.PositiveIntegerField(blank=True, default=None, help_text='ml', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1700)], verbose_name='Volume')),
                ('color', models.CharField(choices=[('brown', 'Brown'), ('yellow', 'Yellow'), ('gray', 'Gray'), ('pale', 'Pale'), ('black', 'Black'), ('red', 'Red'), ('blue', 'Blue'), ('silver', 'Silver'), ('green', 'Green'), ('violet', 'Violet'), ('purple', 'Purple')], default='brown', max_length=30, verbose_name='Color')),
                ('type', models.CharField(choices=[('hard-lumps', 'Separate hard lumps, like nuts (hard to pass)'), ('lumpy', 'Sausage-shaped but lumpy'), ('cracks', 'Like a sausage but with cracks on the surface'), ('smooth', 'Like a sausage or snake, smooth and soft'), ('blobs', 'Soft blobs with clear-cut edges'), ('fluffy', 'Fluffy pieces with ragged edges, a mushy stool'), ('liquid', 'Watery, no solid pieces. Entirely Liquid')], default='smooth', max_length=30, verbose_name='Type')),
                ('abnormalities', models.CharField(blank=True, choices=[('undigested-food', 'Undigested food remnants'), ('diarrhea', 'Diarrhea'), ('constipation', 'Constipation'), ('others', 'Others')], max_length=30, null=True, verbose_name='Abnormalities')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Stool',
                'verbose_name_plural': 'Stool',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('temperature', models.DecimalField(decimal_places=1, default=None, help_text='Celsius', max_digits=3, validators=[django.core.validators.MaxValueValidator(42), django.core.validators.MinValueValidator(30)], verbose_name='Temperature')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Temperature',
                'verbose_name_plural': 'Temperature',
            },
        ),
        migrations.CreateModel(
            name='Urine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('volume', models.PositiveIntegerField(default=None, help_text='ml', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1700)], verbose_name='Volume')),
                ('color', models.CharField(choices=[('colorless', 'Colorless'), ('yellow-light', 'Light Yellow'), ('yellow', 'Yellow'), ('yellow-amber', 'Yellow Amber'), ('yellow-brown', 'Yellow Brown'), ('amber', 'Amber'), ('orange', 'Orange'), ('red', 'Red'), ('greenish-brown', 'Greenish Brown')], default='yellow', max_length=30, verbose_name='Color')),
                ('turbidity', models.CharField(choices=[('clear', 'Clear'), ('slightly', 'Slightly'), ('cloudy', 'Cloudy'), ('turbid', 'Turbid')], default='clear', max_length=30, verbose_name='Turbidity')),
                ('ph', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)], verbose_name='pH')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Urine',
                'verbose_name_plural': 'Urine',
            },
        ),
        migrations.CreateModel(
            name='Weight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('weight', models.DecimalField(decimal_places=1, default=None, help_text='kg', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Weight')),
                ('BMI', models.DecimalField(blank=True, decimal_places=1, default=None, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(40)], verbose_name='BMI')),
                ('body_fat', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='%', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Body Fat')),
                ('lean_body_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='%', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Lean Body Mass')),
                ('body_water', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MaxValueValidator(200), django.core.validators.MinValueValidator(0)], verbose_name='Body Water')),
                ('muscle_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Muscle Mass')),
                ('daily_caloric_intake', models.PositiveIntegerField(blank=True, default=None, help_text='kcal', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4000)], verbose_name='Daily Caloric Intake')),
                ('bone_mass', models.DecimalField(blank=True, decimal_places=1, default=None, help_text='kg', max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Bone Mass')),
                ('visceral_fat', models.PositiveSmallIntegerField(blank=True, default=None, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Visceral Fat')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Weight',
                'verbose_name_plural': 'Weight',
            },
        ),
    ]
