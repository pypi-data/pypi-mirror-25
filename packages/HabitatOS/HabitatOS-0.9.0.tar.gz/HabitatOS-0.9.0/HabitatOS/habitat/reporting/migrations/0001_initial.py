# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-29 18:53
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import habitat.timezone.models.martian_standard_time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('building', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('communication_frequency', models.PositiveSmallIntegerField(choices=[(1, 'almost never'), (2, 'rarely'), (3, 'sometimes'), (4, 'moderately'), (5, 'rather often'), (6, 'very often'), (7, 'almost all the time')], verbose_name='How frequently do you communicate with following people?')),
                ('communication_desired', models.PositiveSmallIntegerField(choices=[(1, 'almost never'), (2, 'rarely'), (3, 'sometimes'), (4, 'moderately'), (5, 'rather often'), (6, 'very often'), (7, 'almost all the time')], verbose_name='How often do you want to communicate with following people?')),
                ('personal_preferences', models.PositiveSmallIntegerField(choices=[(1, 'I would rather avoid him/her'), (2, ''), (3, ''), (4, ''), (5, ''), (6, ''), (7, 'I would love to with with him/her all the time')], verbose_name='Personal preferences: Please, evaluate the following people according to your preference to interact with them in your free time.')),
                ('work_preferences', models.PositiveSmallIntegerField(choices=[(1, 'I would rather avoid him/her'), (2, ''), (3, ''), (4, ''), (5, ''), (6, ''), (7, 'I would love to with with him/her all the time')], verbose_name='Work preferences: Please, evaluate the following people according to your preference to work with them.')),
                ('communication_quality', models.PositiveSmallIntegerField(choices=[(1, 'should always be better'), (2, 'should often be better'), (3, 'should sometimes be better'), (4, 'sufficient'), (5, 'sometimes above average'), (6, 'often above average'), (7, 'always above average')], verbose_name='Evaluate the quality of communication with following people (taking into account its relevance, content, timeliness, etc.).')),
                ('know_already', models.PositiveSmallIntegerField(choices=[(1, 'not at all'), (2, 'not much'), (3, 'moderately'), (4, 'quite well'), (5, 'well'), (6, 'very well'), (7, 'perfectly well')], verbose_name='How well do you know the following people?')),
                ('know_desired', models.PositiveSmallIntegerField(choices=[(1, 'not at all'), (2, 'not much'), (3, 'moderately'), (4, 'quite well'), (5, 'well'), (6, 'very well'), (7, 'perfectly well')], verbose_name='How well do you want to know the following people?')),
                ('cooperation_quality', models.PositiveSmallIntegerField(choices=[(1, 'totally insufficient'), (2, 'often insufficient'), (3, 'sometimes insufficient'), (4, 'sufficient'), (5, 'rather high'), (6, 'high'), (7, 'excellent')], verbose_name='Evaluate the quality of cooperation with the following people?')),
                ('trust', models.PositiveSmallIntegerField(choices=[(1, 'Totally'), (2, 'Very much'), (3, 'A lot'), (4, 'Partly'), (5, 'A little'), (6, 'Not much'), (7, 'Not at all')], verbose_name='How much do you trust the following people?')),
                ('team_atmosphere', models.PositiveSmallIntegerField(choices=[(1, 'Terrible'), (2, ''), (3, ''), (4, ''), (5, ''), (6, ''), (7, 'Amazing')], verbose_name='How is the atmosphere within the team?')),
                ('team_misunderstandings', models.PositiveSmallIntegerField(choices=[(1, 'Never'), (2, ''), (3, ''), (4, ''), (5, ''), (6, ''), (7, 'Constantly')], verbose_name='Have there been any misunderstandings in the team?')),
                ('discomfort', models.TextField(verbose_name='If applicable, name the source(s) for the discomfort you are experience (e.g. noise, smell, food, sleeping problems, interpersonal conflict, etc.)')),
                ('remarks', models.TextField(verbose_name='You can add any comment or note (e.g. if something important happened, how do you feel etc.)')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Questionnaire',
                'verbose_name_plural': 'Communication',
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('start', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Start Datetime')),
                ('end', models.DateTimeField(default=django.utils.timezone.now, verbose_name='End Datetime')),
                ('severity', models.CharField(choices=[('emergency', 'Emergency - ABORT the simulation'), ('critical', 'Critical'), ('warning', 'Warning'), ('info', 'Informative')], default='info', max_length=30, verbose_name='Severity')),
                ('subject', models.CharField(default=None, max_length=100, verbose_name='Subject')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='Description')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Incident',
                'verbose_name_plural': 'Incident',
            },
        ),
        migrations.CreateModel(
            name='Medical',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('drugs_and_supplements', models.TextField(blank=True, default=None, null=True, verbose_name='Remarks')),
                ('medical_condition', models.TextField(blank=True, default=None, null=True, verbose_name='Medical Condition')),
                ('food', models.TextField(blank=True, default=None, null=True, verbose_name='Food')),
                ('EVA', models.TextField(blank=True, default=None, null=True, verbose_name='EVA')),
                ('medical_experiment', models.TextField(blank=True, default=None, null=True, verbose_name='Medical Experiment')),
                ('mood_and_morale', models.TextField(blank=True, default=None, null=True, verbose_name='Mood and Morale')),
                ('remarks', models.TextField(blank=True, default=None, null=True, verbose_name='Remarks')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Medical Report',
                'verbose_name_plural': 'Medical',
            },
        ),
        migrations.CreateModel(
            name='Mood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('stress', models.CharField(choices=[('very-high', 'Very High'), ('high', 'High'), ('normal', 'Normal'), ('low', 'Low'), ('very-low', 'Very Low')], default=None, max_length=30, verbose_name='Stress')),
                ('mood', models.CharField(choices=[('very-high', 'Very High'), ('high', 'High'), ('normal', 'Normal'), ('low', 'Low'), ('very-low', 'Very Low')], default=None, max_length=30, verbose_name='Mood')),
                ('day_quality', models.CharField(choices=[('very-good', 'Very Good'), ('good', 'Good'), ('average', 'Average'), ('bad', 'Bad'), ('very-bad', 'Very Bad')], default=None, max_length=30, verbose_name='Day Quality')),
                ('productivity', models.CharField(choices=[('very-high', 'Very High'), ('high', 'High'), ('normal', 'Normal'), ('low', 'Low'), ('very-low', 'Very Low')], default=None, max_length=30, verbose_name='Productivity')),
                ('remarks', models.TextField(blank=True, default=None, verbose_name='Remarks')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Mood Report',
                'verbose_name_plural': 'Mood',
            },
        ),
        migrations.CreateModel(
            name='Repair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('size', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('huge', 'Huge')], default=None, max_length=30, verbose_name='Problem Size')),
                ('status', models.CharField(choices=[('broken', 'Broken'), ('fixed', 'Fixed'), ('destroyed', 'Permanently Destroyed')], default=None, max_length=30, verbose_name='Current Status')),
                ('what', models.CharField(default=None, max_length=255, verbose_name='What')),
                ('start', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Start')),
                ('end', models.DateTimeField(blank=True, default=None, help_text='Leave empty if problem persists.', null=True, verbose_name='End')),
                ('duration', models.DurationField(blank=True, default=None, null=True, verbose_name='Duration')),
                ('description', models.TextField(blank=True, default=None, null=True, verbose_name='Description')),
                ('solution', models.TextField(blank=True, default=None, null=True, verbose_name='Solution')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
                ('object', models.ForeignKey(blank=True, default=None, help_text='Leave empty, if object is not on the list', null=True, on_delete=django.db.models.deletion.CASCADE, to='inventory.Item', verbose_name='Object')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Repair Log',
                'verbose_name_plural': 'Repair',
            },
        ),
        migrations.CreateModel(
            name='Sleep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('type', models.CharField(choices=[('sleep', 'Sleep'), ('nap', 'Nap')], default=None, max_length=30, verbose_name='Type')),
                ('duration', models.DurationField(blank=True, default=None, null=True, verbose_name='Duration')),
                ('last_activity', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='What was the last thing you did before going to sleep?')),
                ('sleepy', models.CharField(blank=True, choices=[('no', 'No'), ('mildly', 'Mildly'), ('considerably', 'Considerably'), ('intensely', 'Intensely')], default=None, max_length=30, null=True, verbose_name='Did you feel sleepy during the day?')),
                ('sleepy_remarks', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Percent of wake time', null=True, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='If yes, how much?')),
                ('asleep_bedtime', models.DateTimeField(blank=True, default=None, null=True, verbose_name='When did you go to bed?')),
                ('asleep_time', models.DateTimeField(default=None, verbose_name='When did you fall asleep?')),
                ('asleep_problems', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='If it took you longer than 10 min to fall asleep, what was the reason?')),
                ('impediments_count', models.PositiveSmallIntegerField(blank=True, default=None, help_text='Minutes', null=True, verbose_name='Did you wake up at night? If you yes, for how long (approx.)?')),
                ('impediments_remarks', models.CharField(blank=True, default=None, max_length=255, null=True, verbose_name='If you woke up during the night, why?')),
                ('wakeup_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='When did you wake up?')),
                ('wakeup_reasons', models.CharField(blank=True, default=None, help_text='Alarm clock / I woke up on my own', max_length=255, null=True, verbose_name='What woke you up in the morning?')),
                ('getup', models.DateTimeField(blank=True, default=None, null=True, verbose_name='When did you get up?')),
                ('aid_ear_plugs', models.NullBooleanField(choices=[(None, 'Undisclosed'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Did you use ear plugs?')),
                ('aid_eye_mask', models.NullBooleanField(choices=[(None, 'Undisclosed'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Did you use an eye mask?')),
                ('aid_pills', models.NullBooleanField(choices=[(None, 'Undisclosed'), (True, 'Yes'), (False, 'No')], default=None, verbose_name='Did you use a sleep pills?')),
                ('dream', models.TextField(blank=True, default=None, null=True, verbose_name='If you remember what was your dream about?')),
                ('sleep_amount', models.CharField(choices=[('sufficient', 'Sufficient'), ('slightly-sufficient', 'Slightly Sufficient'), ('somewhat-sufficient', 'Somewhat Sufficient'), ('very-insufficient', 'Very Insufficient')], default=None, max_length=30, verbose_name='How would you describe the amount of sleep?')),
                ('quality', models.CharField(choices=[('satisfactory', 'Satisfactory'), ('slightly-satisfactory', 'Slightly Satisfactory'), ('somewhat-satisfactory', 'Somewhat Satisfactory'), ('very-unsatisfactory', 'Very Unsatisfactory')], default=None, max_length=30, verbose_name='How would you rate your overall quality of sleep?')),
                ('location', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Sleep Log',
                'verbose_name_plural': 'Sleep',
            },
        ),
        migrations.CreateModel(
            name='Waste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('type', models.CharField(choices=[('regular', 'Regular'), ('biohazard', 'Biohazard'), ('chemical', 'Chemical'), ('medical', 'Medical')], default='regular', max_length=30, verbose_name='Waste')),
                ('weight', models.DecimalField(decimal_places=2, help_text='kg', max_digits=4, verbose_name='Weight')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Astronaut')),
            ],
            options={
                'verbose_name': 'Waste',
                'verbose_name_plural': 'Waste',
            },
        ),
    ]
