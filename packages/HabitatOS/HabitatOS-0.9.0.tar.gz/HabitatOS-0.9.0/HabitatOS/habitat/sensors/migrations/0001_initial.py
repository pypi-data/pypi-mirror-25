# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-09-29 18:53
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import habitat.timezone.models.martian_standard_time


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('building', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CarbonDioxide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=3, help_text='%', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Concentration')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Carbon Dioxide Concentration Measurement',
                'verbose_name_plural': 'Carbon Dioxide',
            },
        ),
        migrations.CreateModel(
            name='CarbonMonoxide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=3, help_text='%', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Concentration')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Carbon Monoxide Concentration Measurement',
                'verbose_name_plural': 'Carbon Monoxide',
            },
        ),
        migrations.CreateModel(
            name='Humidity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=1, help_text='%', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Humidity')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Humidity Measurement',
                'verbose_name_plural': 'Humidity',
            },
        ),
        migrations.CreateModel(
            name='Illuminance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.PositiveSmallIntegerField(default=None, help_text='Lux', verbose_name='Illuminance')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Illuminance Measurement',
                'verbose_name_plural': 'Illuminance',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=2, default=None, help_text='Mbps', max_digits=5, verbose_name='Value')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Network Performance Measurement',
                'verbose_name_plural': 'Network Performance',
            },
        ),
        migrations.CreateModel(
            name='Oxygen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=2, help_text='%', max_digits=4, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Concentration')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Oxygen Concentration Measurement',
                'verbose_name_plural': 'Oxygen',
            },
        ),
        migrations.CreateModel(
            name='Pressure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=2, default=None, help_text='hPa', max_digits=6, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(2000)], verbose_name='Pressure')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Pressure Measurement',
                'verbose_name_plural': 'Pressure',
            },
        ),
        migrations.CreateModel(
            name='Radiation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=5, default=None, help_text='Sievert', max_digits=6, verbose_name='Radiation')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Radiation Measurement',
                'verbose_name_plural': 'Radiation',
            },
        ),
        migrations.CreateModel(
            name='Temperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=2, default=None, max_digits=5, verbose_name='Temperature')),
                ('unit', models.CharField(choices=[('celsius', 'Celsius'), ('kelvin', 'Kelvin'), ('fahrenheit', 'Fahrenheit')], default='celsius', max_length=10, verbose_name='Unit')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Temperature Measurement',
                'verbose_name_plural': 'Temperature',
            },
        ),
        migrations.CreateModel(
            name='Voltage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.DecimalField(decimal_places=3, default=None, help_text='Volts', max_digits=6, verbose_name='Value')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Voltage Measurement',
                'verbose_name_plural': 'Voltage',
            },
        ),
        migrations.CreateModel(
            name='Weather',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('value', models.PositiveSmallIntegerField(default=None, verbose_name='Value')),
                ('location', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='building.Module', verbose_name='Location')),
            ],
            options={
                'verbose_name': 'Weather',
                'verbose_name_plural': 'Weather',
            },
        ),
        migrations.CreateModel(
            name='ZWaveSensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Add Datetime')),
                ('modified', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified Datetime')),
                ('date', models.CharField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.date, help_text='example: 51099.420109', max_length=15, verbose_name='Mars Sol Date')),
                ('time', models.TimeField(default=habitat.timezone.models.martian_standard_time.MartianStandardTime.time, help_text='example: 51099.420109', verbose_name='Coordinated Mars Time')),
                ('datetime', models.DateTimeField(db_index=True, editable=False, verbose_name='Datetime')),
                ('device', models.CharField(db_index=True, max_length=30, verbose_name='Device')),
                ('type', models.CharField(choices=[('battery-level', 'Battery Level'), ('powerlevel', 'Power Level'), ('temperature', 'Temperature'), ('luminance', 'Luminance'), ('relative-humidity', 'Relative Humidity'), ('ultraviolet', 'Ultraviolet'), ('burglar', 'Burglar')], max_length=30, verbose_name='Type')),
                ('value', models.DecimalField(decimal_places=2, default=None, max_digits=7, verbose_name='Value')),
                ('unit', models.CharField(blank=True, choices=[(None, 'n/a'), ('percent', '%'), ('lux', 'Lux'), ('decibel', 'dB'), ('celsius', 'Celsius'), ('kelvin', 'Kelvin'), ('fahrenheit', 'Fahrenheit')], default=None, max_length=15, null=True, verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Data',
                'verbose_name_plural': 'Zwave Sensors',
            },
        ),
    ]
